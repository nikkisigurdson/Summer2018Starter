(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    371110,       8362]
NotebookOptionsPosition[    356862,       8153]
NotebookOutlinePosition[    357240,       8169]
CellTagsIndexPosition[    357197,       8166]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Definitions of functions", "Section",
 CellChangeTimes->{{3.739826598788726*^9, 
  3.7398266286320677`*^9}},ExpressionUUID->"4e4c6b69-9e43-4243-8a5d-\
13337fcf66e0"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Code",ExpressionUUID->"79c166e3-8bf6-4498-92fe-9b392c94ec45"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"eqnVars", "[", "eqn", "]"}], TraditionalForm]],ExpressionUUID->
  "da38c69c-7bd2-45ac-8dab-653805eff2ed"],
 " lists the variables in the equation ",
 Cell[BoxData[
  FormBox["eqn", TraditionalForm]],ExpressionUUID->
  "092be673-5b4b-4e51-a70f-2b400b510ff4"],
 "."
}], "Text",
 CellChangeTimes->{{3.7398301352495804`*^9, 
  3.7398301802137403`*^9}},ExpressionUUID->"ef1f05e8-daa6-4417-a8fd-\
efa757a0fa23"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqnVars", "[", "eqn_", "]"}], ":=", 
   RowBox[{"Variables", "[", 
    RowBox[{"Subtract", " ", "@@", " ", "eqn"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.739737718448765*^9, {3.7397411540092325`*^9, 3.739741212500842*^9}, {
   3.7397413374676666`*^9, 3.739741355964774*^9}, {3.739791360446493*^9, 
   3.7397913608972273`*^9}, {3.739791578882866*^9, 3.7397915806115417`*^9}, {
   3.739791614752862*^9, 3.7397916148665895`*^9}, {3.7397916717994556`*^9, 
   3.7397917110825734`*^9}, {3.7397918711828184`*^9, 3.739791873379467*^9}, {
   3.7397919149144535`*^9, 3.739791923207847*^9}, {3.739823146569758*^9, 
   3.739823181649802*^9}, {3.7398246551060886`*^9, 3.739824655442139*^9}, {
   3.7398247299189515`*^9, 3.7398247638325653`*^9}, {3.7398248378017597`*^9, 
   3.739824844596708*^9}, {3.7398249606536393`*^9, 3.7398249612660675`*^9}, {
   3.7398250943436604`*^9, 3.739825178189796*^9}, {3.739825238475137*^9, 
   3.739825249503098*^9}, {3.7398253644812994`*^9, 3.739825422438635*^9}, {
   3.7398255059504824`*^9, 3.7398255639599433`*^9}, {3.739825668450143*^9, 
   3.739825715953738*^9}, {3.7398257469532776`*^9, 3.7398257478820963`*^9}, {
   3.739826319551078*^9, 3.739826322832861*^9}, 3.7398267137032475`*^9, {
   3.73982675373551*^9, 3.7398267692428536`*^9}, {3.7398274273349357`*^9, 
   3.7398274752444344`*^9}, {3.739827590243911*^9, 3.739827740536255*^9}, {
   3.7398277915695066`*^9, 3.739827811200615*^9}, {3.7398284150684214`*^9, 
   3.739828567648489*^9}, {3.7398286043135586`*^9, 3.739828623534268*^9}, {
   3.739828844873011*^9, 3.7398289203370657`*^9}, 3.739828989598893*^9, {
   3.7398290225350833`*^9, 3.73982906761154*^9}, {3.7398291298118887`*^9, 
   3.739829265797516*^9}, {3.7398292962377186`*^9, 3.739829378981032*^9}, {
   3.739829580717924*^9, 3.7398295929043694`*^9}, {3.739829711578179*^9, 
   3.739829776012186*^9}, {3.739829884027224*^9, 3.7398299155644355`*^9}, {
   3.7398299569146786`*^9, 3.739830041087281*^9}, 3.739830095090823*^9, 
   3.739830129490842*^9},ExpressionUUID->"ad5d5aa1-1723-468b-9f82-\
4f0c7da9c633"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"varsPositive", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], TraditionalForm]],
  ExpressionUUID->"161b7f24-941d-4cbe-a855-1c7e9e2fe337"],
 " outputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", ">", "0"}], " ", "&&", " ", 
    RowBox[{"y", ">", "0"}], " ", "&&", " ", 
    RowBox[{"z", ">", "0"}]}], TraditionalForm]],ExpressionUUID->
  "7902cc47-c950-405b-a19b-0744d32ea09f"],
 ".  This condition restricts the variables to positive values."
}], "Text",
 CellChangeTimes->{{3.7398301996113677`*^9, 3.739830280027733*^9}, {
  3.7398305656079235`*^9, 
  3.739830565979416*^9}},ExpressionUUID->"8c096619-c29c-4972-b77a-\
1173c92cddf1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"varsPositive", "[", "vars_", "]"}], ":=", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}], ",", "vars"}], "]"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.739737718448765*^9, {3.7397411540092325`*^9, 3.739741212500842*^9}, {
   3.7397413374676666`*^9, 3.739741355964774*^9}, {3.739791360446493*^9, 
   3.7397913608972273`*^9}, {3.739791578882866*^9, 3.7397915806115417`*^9}, {
   3.739791614752862*^9, 3.7397916148665895`*^9}, {3.7397916717994556`*^9, 
   3.7397917110825734`*^9}, {3.7397918711828184`*^9, 3.739791873379467*^9}, {
   3.7397919149144535`*^9, 3.739791923207847*^9}, {3.739823146569758*^9, 
   3.739823181649802*^9}, {3.7398246551060886`*^9, 3.739824655442139*^9}, {
   3.7398247299189515`*^9, 3.7398247638325653`*^9}, {3.7398248378017597`*^9, 
   3.739824844596708*^9}, {3.7398249606536393`*^9, 3.7398249612660675`*^9}, {
   3.7398250943436604`*^9, 3.739825178189796*^9}, {3.739825238475137*^9, 
   3.739825249503098*^9}, {3.7398253644812994`*^9, 3.739825422438635*^9}, {
   3.7398255059504824`*^9, 3.7398255639599433`*^9}, {3.739825668450143*^9, 
   3.739825715953738*^9}, {3.7398257469532776`*^9, 3.7398257478820963`*^9}, {
   3.739826319551078*^9, 3.739826322832861*^9}, 3.7398267137032475`*^9, {
   3.73982675373551*^9, 3.7398267692428536`*^9}, {3.7398274273349357`*^9, 
   3.7398274752444344`*^9}, {3.739827590243911*^9, 3.739827740536255*^9}, {
   3.7398277915695066`*^9, 3.739827811200615*^9}, {3.7398284150684214`*^9, 
   3.739828567648489*^9}, {3.7398286043135586`*^9, 3.739828623534268*^9}, {
   3.739828844873011*^9, 3.7398289203370657`*^9}, 3.739828989598893*^9, {
   3.7398290225350833`*^9, 3.73982906761154*^9}, {3.7398291298118887`*^9, 
   3.739829265797516*^9}, {3.7398292962377186`*^9, 3.739829378981032*^9}, {
   3.739829580717924*^9, 3.7398295929043694`*^9}, {3.739829711578179*^9, 
   3.739829776012186*^9}, {3.739829884027224*^9, 3.7398299155644355`*^9}, {
   3.7398299569146786`*^9, 3.739830041087281*^9}, 3.739830095090823*^9, 
   3.739830129490842*^9, 
   3.739830193343879*^9},ExpressionUUID->"018f386d-5099-423a-8f55-\
9b5493cd940c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"eqnResolve", "[", 
    RowBox[{"eqn", ",", "vars", ",", "cond"}], "]"}], TraditionalForm]],
  ExpressionUUID->"4df365f2-358c-4b2a-bf36-e09923dc5089"],
 " attempts to determine whether the Diophantine equation ",
 Cell[BoxData[
  FormBox["eqn", TraditionalForm]],ExpressionUUID->
  "d603322c-2558-46b2-9c55-f4e4c73be8d6"],
 " with variables ",
 Cell[BoxData[
  FormBox["vars", TraditionalForm]],ExpressionUUID->
  "5060115e-cab2-458c-bae2-97b45f1d6745"],
 " has any positive solutions that satisfy the condition ",
 Cell[BoxData[
  FormBox["cond", TraditionalForm]],ExpressionUUID->
  "d2f0769d-d536-4941-b176-af846c3241d2"],
 "."
}], "Text",
 CellChangeTimes->{{3.7398302979157577`*^9, 3.7398304076056147`*^9}, {
  3.739993709257057*^9, 3.739993709257057*^9}, {3.7399972287374372`*^9, 
  3.739997229565174*^9}},ExpressionUUID->"d350f633-6a85-4412-a6bc-\
cce3431b9ec1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqnResolve", "[", 
    RowBox[{"eqn_", ",", "vars_", ",", 
     RowBox[{"cond_:", "True"}]}], "]"}], " ", ":=", "\n", " ", 
   RowBox[{"Resolve", "[", 
    RowBox[{
     RowBox[{"Exists", "[", 
      RowBox[{"vars", ",", " ", 
       RowBox[{"eqn", " ", "&&", " ", 
        RowBox[{"varsPositive", "[", "vars", "]"}], " ", "&&", " ", 
        "cond"}]}], "]"}], ",", " ", "Integers"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.739737718448765*^9, {3.7397411540092325`*^9, 3.739741212500842*^9}, {
   3.7397413374676666`*^9, 3.739741355964774*^9}, {3.739791360446493*^9, 
   3.7397913608972273`*^9}, {3.739791578882866*^9, 3.7397915806115417`*^9}, {
   3.739791614752862*^9, 3.7397916148665895`*^9}, {3.7397916717994556`*^9, 
   3.7397917110825734`*^9}, {3.7397918711828184`*^9, 3.739791873379467*^9}, {
   3.7397919149144535`*^9, 3.739791923207847*^9}, {3.739823146569758*^9, 
   3.739823181649802*^9}, {3.7398246551060886`*^9, 3.739824655442139*^9}, {
   3.7398247299189515`*^9, 3.7398247638325653`*^9}, {3.7398248378017597`*^9, 
   3.739824844596708*^9}, {3.7398249606536393`*^9, 3.7398249612660675`*^9}, {
   3.7398250943436604`*^9, 3.739825178189796*^9}, {3.739825238475137*^9, 
   3.739825249503098*^9}, {3.7398253644812994`*^9, 3.739825422438635*^9}, {
   3.7398255059504824`*^9, 3.7398255639599433`*^9}, {3.739825668450143*^9, 
   3.739825715953738*^9}, {3.7398257469532776`*^9, 3.7398257478820963`*^9}, {
   3.739826319551078*^9, 3.739826322832861*^9}, 3.7398267137032475`*^9, {
   3.73982675373551*^9, 3.7398267692428536`*^9}, {3.7398274273349357`*^9, 
   3.7398274752444344`*^9}, {3.739827590243911*^9, 3.739827740536255*^9}, {
   3.7398277915695066`*^9, 3.739827811200615*^9}, {3.7398284150684214`*^9, 
   3.739828567648489*^9}, {3.7398286043135586`*^9, 3.739828623534268*^9}, {
   3.739828844873011*^9, 3.7398289203370657`*^9}, 3.739828989598893*^9, {
   3.7398290225350833`*^9, 3.73982906761154*^9}, {3.7398291298118887`*^9, 
   3.739829265797516*^9}, {3.7398292962377186`*^9, 3.739829378981032*^9}, {
   3.739829580717924*^9, 3.7398295929043694`*^9}, {3.739829711578179*^9, 
   3.739829776012186*^9}, {3.739829884027224*^9, 3.7398299155644355`*^9}, {
   3.7398299569146786`*^9, 3.739830041087281*^9}, 3.739830095090823*^9, 
   3.739830129490842*^9, 3.739830193343879*^9, 3.739830285482771*^9, {
   3.739996877169815*^9, 
   3.7399968936418676`*^9}},ExpressionUUID->"80c2fb93-64e7-4966-8b79-\
72799348fc82"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"eqnFindInstance", "[", 
    RowBox[{"eqn", ",", "vars", ",", "cond"}], "]"}], TraditionalForm]],
  ExpressionUUID->"643104f9-f908-4ae5-bac1-1e44ffb7d2c7"],
 " attempts to find one positive solution to the Diophantine equation ",
 Cell[BoxData[
  FormBox["eqn", TraditionalForm]],ExpressionUUID->
  "1d84ed5f-7ce7-45e8-b3ed-cdd3eeb0ba28"],
 " with variables ",
 Cell[BoxData[
  FormBox["vars", TraditionalForm]],ExpressionUUID->
  "c78f01fa-4490-4868-a596-957824453a31"],
 " that satisfies the condition ",
 Cell[BoxData[
  FormBox["cond", TraditionalForm]],ExpressionUUID->
  "58f818e2-68a6-41d7-90db-b0f0c4c447e7"],
 "."
}], "Text",
 CellChangeTimes->{{3.7398302979157577`*^9, 3.7398304903013215`*^9}, {
  3.739993701764182*^9, 
  3.739993701764182*^9}},ExpressionUUID->"fa6f1604-8470-44d9-8966-\
039408d425f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqnFindInstance", "[", 
    RowBox[{"eqn_", ",", "vars_", ",", 
     RowBox[{"cond_:", "True"}]}], "]"}], " ", ":=", "\n", " ", 
   RowBox[{"vars", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"FindInstance", "[", 
      RowBox[{
       RowBox[{"eqn", " ", "&&", " ", 
        RowBox[{"varsPositive", "[", "vars", "]"}], " ", "&&", " ", "cond"}], 
       ",", "vars", ",", " ", "Integers"}], "]"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.739737718448765*^9, {3.7397411540092325`*^9, 3.739741212500842*^9}, {
   3.7397413374676666`*^9, 3.739741355964774*^9}, {3.739791360446493*^9, 
   3.7397913608972273`*^9}, {3.739791578882866*^9, 3.7397915806115417`*^9}, {
   3.739791614752862*^9, 3.7397916148665895`*^9}, {3.7397916717994556`*^9, 
   3.7397917110825734`*^9}, {3.7397918711828184`*^9, 3.739791873379467*^9}, {
   3.7397919149144535`*^9, 3.739791923207847*^9}, {3.739823146569758*^9, 
   3.739823181649802*^9}, {3.7398246551060886`*^9, 3.739824655442139*^9}, {
   3.7398247299189515`*^9, 3.7398247638325653`*^9}, {3.7398248378017597`*^9, 
   3.739824844596708*^9}, {3.7398249606536393`*^9, 3.7398249612660675`*^9}, {
   3.7398250943436604`*^9, 3.739825178189796*^9}, {3.739825238475137*^9, 
   3.739825249503098*^9}, {3.7398253644812994`*^9, 3.739825422438635*^9}, {
   3.7398255059504824`*^9, 3.7398255639599433`*^9}, {3.739825668450143*^9, 
   3.739825715953738*^9}, {3.7398257469532776`*^9, 3.7398257478820963`*^9}, {
   3.739826319551078*^9, 3.739826322832861*^9}, 3.7398267137032475`*^9, {
   3.73982675373551*^9, 3.7398267692428536`*^9}, {3.7398274273349357`*^9, 
   3.7398274752444344`*^9}, {3.739827590243911*^9, 3.739827740536255*^9}, {
   3.7398277915695066`*^9, 3.739827811200615*^9}, {3.7398284150684214`*^9, 
   3.739828567648489*^9}, {3.7398286043135586`*^9, 3.739828623534268*^9}, {
   3.739828844873011*^9, 3.7398289203370657`*^9}, 3.739828989598893*^9, {
   3.7398290225350833`*^9, 3.73982906761154*^9}, {3.7398291298118887`*^9, 
   3.739829265797516*^9}, {3.7398292962377186`*^9, 3.739829378981032*^9}, {
   3.739829580717924*^9, 3.7398295929043694`*^9}, {3.739829711578179*^9, 
   3.739829776012186*^9}, {3.739829884027224*^9, 3.7398299155644355`*^9}, {
   3.7398299569146786`*^9, 3.739830041087281*^9}, 3.739830095090823*^9, 
   3.739830129490842*^9, 3.739830193343879*^9, 3.739830285482771*^9, 
   3.7398304179557867`*^9},ExpressionUUID->"87f40649-d29a-4c2d-8912-\
d2aee25ab34e"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"solSmallerCondition", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], TraditionalForm]],
  ExpressionUUID->"db250ad0-dfdf-4a8c-8592-79abb03bba7c"],
 " outputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "<", "1"}], "|", 
      RowBox[{
       RowBox[{"y", "<", "2"}], "||", 
       RowBox[{"z", "<", "3"}]}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "\[LessEqual]", "1"}], "&&", 
      RowBox[{"y", "\[LessEqual]", "2"}], "&&", 
      RowBox[{"z", "\[LessEqual]", "3"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"5da6e6d2-5c16-4d87-aac5-7aa75c8de693"],
 ".  This condition defines a solution smaller than {1,2,3}."
}], "Text",
 CellChangeTimes->{{3.7398301996113677`*^9, 3.739830280027733*^9}, {
  3.7398305339658933`*^9, 
  3.73983069919246*^9}},ExpressionUUID->"f07e2ab1-08c6-436a-9fd0-\
a0b096f48ea9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"solSmallerCondition", "[", 
    RowBox[{"sol_", ",", "vars_"}], "]"}], ":=", "\n", " ", 
   RowBox[{
    RowBox[{"Or", "@@", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "<", "#2"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"vars", ",", "sol"}], "}"}]}], "]"}]}], " ", "&&", " ", 
    RowBox[{"And", "@@", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LessEqual]", "#2"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"vars", ",", "sol"}], "}"}]}], "]"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.739737718448765*^9, {3.7397411540092325`*^9, 3.739741212500842*^9}, {
   3.7397413374676666`*^9, 3.739741355964774*^9}, {3.739791360446493*^9, 
   3.7397913608972273`*^9}, {3.739791578882866*^9, 3.7397915806115417`*^9}, {
   3.739791614752862*^9, 3.7397916148665895`*^9}, {3.7397916717994556`*^9, 
   3.7397917110825734`*^9}, {3.7397918711828184`*^9, 3.739791873379467*^9}, {
   3.7397919149144535`*^9, 3.739791923207847*^9}, {3.739823146569758*^9, 
   3.739823181649802*^9}, {3.7398246551060886`*^9, 3.739824655442139*^9}, {
   3.7398247299189515`*^9, 3.7398247638325653`*^9}, {3.7398248378017597`*^9, 
   3.739824844596708*^9}, {3.7398249606536393`*^9, 3.7398249612660675`*^9}, {
   3.7398250943436604`*^9, 3.739825178189796*^9}, {3.739825238475137*^9, 
   3.739825249503098*^9}, {3.7398253644812994`*^9, 3.739825422438635*^9}, {
   3.7398255059504824`*^9, 3.7398255639599433`*^9}, {3.739825668450143*^9, 
   3.739825715953738*^9}, {3.7398257469532776`*^9, 3.7398257478820963`*^9}, {
   3.739826319551078*^9, 3.739826322832861*^9}, 3.7398267137032475`*^9, {
   3.73982675373551*^9, 3.7398267692428536`*^9}, {3.7398274273349357`*^9, 
   3.7398274752444344`*^9}, {3.739827590243911*^9, 3.739827740536255*^9}, {
   3.7398277915695066`*^9, 3.739827811200615*^9}, {3.7398284150684214`*^9, 
   3.739828567648489*^9}, {3.7398286043135586`*^9, 3.739828623534268*^9}, {
   3.739828844873011*^9, 3.7398289203370657`*^9}, 3.739828989598893*^9, {
   3.7398290225350833`*^9, 3.73982906761154*^9}, {3.7398291298118887`*^9, 
   3.739829265797516*^9}, {3.7398292962377186`*^9, 3.739829378981032*^9}, {
   3.739829580717924*^9, 3.7398295929043694`*^9}, {3.739829711578179*^9, 
   3.739829776012186*^9}, {3.739829884027224*^9, 3.7398299155644355`*^9}, {
   3.7398299569146786`*^9, 3.739830041087281*^9}, 3.739830095090823*^9, 
   3.739830129490842*^9, 3.739830193343879*^9, 3.739830285482771*^9, 
   3.7398304179557867`*^9, 
   3.739830499380869*^9},ExpressionUUID->"65538e9f-ecb5-4cd0-8bb2-\
19e95e77c59b"],

Cell[TextData[{
 "Assuming that a solution exists, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"eqnFindSmallestSolution", "[", 
    RowBox[{"eqn", ",", "vars", ",", "cond"}], "]"}], TraditionalForm]],
  ExpressionUUID->"458e2ff8-0cd5-41ca-8acd-f0a29293f315"],
 " attempts to find the smallest positive solution to the Diophantine \
equation ",
 Cell[BoxData[
  FormBox["eqn", TraditionalForm]],ExpressionUUID->
  "5a30ceaf-4d48-474f-8964-351f738f63f6"],
 " with variables ",
 Cell[BoxData[
  FormBox["vars", TraditionalForm]],ExpressionUUID->
  "c9ed7361-191c-4e98-86f7-bfa501c7a6d3"],
 " that satisfies the condition ",
 Cell[BoxData[
  FormBox["cond", TraditionalForm]],ExpressionUUID->
  "7ac6617d-851f-4141-aefb-cb209cda2131"],
 "."
}], "Text",
 CellChangeTimes->{{3.7398302979157577`*^9, 3.7398304903013215`*^9}, {
  3.7398307367407136`*^9, 3.739830817747844*^9}, {3.7399936968314233`*^9, 
  3.7399936968314233`*^9}, {3.7399992377982006`*^9, 
  3.739999252854845*^9}},ExpressionUUID->"9e59c87b-2a51-4509-9bb7-\
fb980c3e86c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqnFindSmallestSolution", "[", 
    RowBox[{"eqn_", ",", "vars_", ",", 
     RowBox[{"cond_:", "True"}]}], "]"}], ":=", "\n", " ", 
   RowBox[{"NestWhile", "[", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"eqnFindInstance", "[", 
       RowBox[{"eqn", ",", "vars", ",", 
        RowBox[{
         RowBox[{"solSmallerCondition", "[", 
          RowBox[{"#", ",", "vars"}], "]"}], "&&", "cond"}]}], "]"}], "&"}], 
     ",", "\n", "  ", 
     RowBox[{"eqnFindInstance", "[", 
      RowBox[{"eqn", ",", "vars", ",", "cond"}], "]"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"eqnResolve", "[", 
       RowBox[{"eqn", ",", "vars", ",", 
        RowBox[{
         RowBox[{"solSmallerCondition", "[", 
          RowBox[{"#", ",", "vars"}], "]"}], "&&", "cond"}]}], "]"}], "&"}]}],
     "\n", " ", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.739737718448765*^9, {3.7397411540092325`*^9, 3.739741212500842*^9}, {
   3.7397413374676666`*^9, 3.739741355964774*^9}, {3.739791360446493*^9, 
   3.7397913608972273`*^9}, {3.739791578882866*^9, 3.7397915806115417`*^9}, {
   3.739791614752862*^9, 3.7397916148665895`*^9}, {3.7397916717994556`*^9, 
   3.7397917110825734`*^9}, {3.7397918711828184`*^9, 3.739791873379467*^9}, {
   3.7397919149144535`*^9, 3.739791923207847*^9}, {3.739823146569758*^9, 
   3.739823181649802*^9}, {3.7398246551060886`*^9, 3.739824655442139*^9}, {
   3.7398247299189515`*^9, 3.7398247638325653`*^9}, {3.7398248378017597`*^9, 
   3.739824844596708*^9}, {3.7398249606536393`*^9, 3.7398249612660675`*^9}, {
   3.7398250943436604`*^9, 3.739825178189796*^9}, {3.739825238475137*^9, 
   3.739825249503098*^9}, {3.7398253644812994`*^9, 3.739825422438635*^9}, {
   3.7398255059504824`*^9, 3.7398255639599433`*^9}, {3.739825668450143*^9, 
   3.739825715953738*^9}, {3.7398257469532776`*^9, 3.7398257478820963`*^9}, {
   3.739826319551078*^9, 3.739826322832861*^9}, 3.7398267137032475`*^9, {
   3.73982675373551*^9, 3.7398267692428536`*^9}, {3.7398274273349357`*^9, 
   3.7398274752444344`*^9}, {3.739827590243911*^9, 3.739827740536255*^9}, {
   3.7398277915695066`*^9, 3.739827811200615*^9}, {3.7398284150684214`*^9, 
   3.739828567648489*^9}, {3.7398286043135586`*^9, 3.739828623534268*^9}, {
   3.739828844873011*^9, 3.7398289203370657`*^9}, 3.739828989598893*^9, {
   3.7398290225350833`*^9, 3.73982906761154*^9}, {3.7398291298118887`*^9, 
   3.739829265797516*^9}, {3.7398292962377186`*^9, 3.739829378981032*^9}, {
   3.739829580717924*^9, 3.7398295929043694`*^9}, {3.739829711578179*^9, 
   3.739829776012186*^9}, {3.739829884027224*^9, 3.7398299155644355`*^9}, {
   3.7398299569146786`*^9, 3.739830041087281*^9}, 3.739830095090823*^9, 
   3.739830129490842*^9, 3.739830193343879*^9, 3.739830285482771*^9, 
   3.7398304179557867`*^9, 3.739830499380869*^9, {3.7399969214850883`*^9, 
   3.739996922235862*^9}, {3.7399992238886085`*^9, 3.739999233602991*^9}, {
   3.7399992659928055`*^9, 
   3.7399992914615536`*^9}},ExpressionUUID->"6ca21f24-c64c-490d-b8af-\
6adbdc1ca36b"],

Cell[TextData[{
 "Given a Diophantine equation ",
 Cell[BoxData[
  FormBox["eqn", TraditionalForm]],ExpressionUUID->
  "6550ed6e-a7f1-430e-96e9-1812d78689d4"],
 " with variables ",
 Cell[BoxData[
  FormBox["vars", TraditionalForm]],ExpressionUUID->
  "5738c858-32ce-42bb-b46b-12633f00a654"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"eqnFindSolutions", "[", 
    RowBox[{"eqn", ",", "vars", ",", "f"}], "]"}], TraditionalForm]],
  ExpressionUUID->"1687e9c0-e45c-4963-9143-5af6439ab2d7"],
 " attempts to find a smallest positive solution, if one exists.  If it can \
be shown that no solutions exist, then the string ",
 Cell[BoxData[
  FormBox["\"\<No Solution\>\"", TraditionalForm]],ExpressionUUID->
  "790f5ca8-118b-4aa4-82c7-357429e7f143"],
 " is output.  Otherwise, if it cannot be determined whether ",
 Cell[BoxData[
  FormBox["eqn", TraditionalForm]],ExpressionUUID->
  "6d9973d3-127c-4237-bc97-ae20d24bdd25"],
 " has a positive solution, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"eqn", ",", "vars"}], "]"}], TraditionalForm]],ExpressionUUID->
  "0b2d5c5d-4ebe-4108-a27b-387742fbeec9"],
 " is output.  And if the argument ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a7d8cf2d-8be9-4ed5-8882-fb733051519a"],
 " is omitted, then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9ad2bd5d-d97a-47b8-a23d-18122f0d8c39"],
 " is assumed to be the constant function that outputs the string ",
 Cell[BoxData[
  FormBox["\"\<Unknown\>\"", TraditionalForm]],ExpressionUUID->
  "4f0b94b3-c4bd-4954-b19f-d22a930d5f03"],
 "."
}], "Text",
 CellChangeTimes->{{3.7398302979157577`*^9, 3.7398304903013215`*^9}, {
  3.739993600872445*^9, 3.7399936145428567`*^9}, {3.7399936645142145`*^9, 
  3.739993685106241*^9}, {3.739993726666149*^9, 3.7399939560095453`*^9}, {
  3.7399939881564507`*^9, 3.739993996097543*^9}, {3.7399994652760534`*^9, 
  3.739999584371682*^9}, {3.7400018113815126`*^9, 
  3.740001850873579*^9}},ExpressionUUID->"87f60e7a-e8dd-420b-9977-\
1d6bb5c21e7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqnFindSolutions", "[", 
   RowBox[{"eqn_", ",", " ", "vars_", ",", " ", 
    RowBox[{"f_:", 
     RowBox[{"(", 
      RowBox[{"\"\<Unknown\>\"", "&"}], ")"}]}]}], "]"}], " ", ":=", " ", 
  "\n", " ", 
  RowBox[{"Switch", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"eqnResolve", "[", 
     RowBox[{"eqn", ",", " ", "vars"}], "]"}], ",", " ", "\n", "  ", "True", 
    ",", " ", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"eqn", ",", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"eqnFindSmallestSolution", "[", 
        RowBox[{"eqn", ",", " ", "vars"}], "]"}], "]"}]}], "}"}], ",", "\n", 
    "  ", "False", ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"eqn", ",", " ", "\"\<No Solution\>\""}], "}"}], ",", "\n", "  ",
     "_", ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"eqn", ",", " ", 
      RowBox[{"f", "[", 
       RowBox[{"eqn", ",", "vars"}], "]"}]}], "}"}]}], "\n", " ", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7399742385659714`*^9, 3.7399742408939095`*^9}, {
   3.739974277069155*^9, 3.7399743053589225`*^9}, {3.739975435749148*^9, 
   3.739975449596391*^9}, {3.7399756808360195`*^9, 3.7399756971596274`*^9}, {
   3.739975767597391*^9, 3.7399758332940702`*^9}, {3.7399759096821103`*^9, 
   3.7399759130117207`*^9}, {3.7399761395236382`*^9, 
   3.7399761403187675`*^9}, {3.7399765500215387`*^9, 
   3.7399765514008217`*^9}, {3.739976650046088*^9, 3.7399766530993013`*^9}, {
   3.739993530452731*^9, 3.7399935735513525`*^9}, {3.739994006028199*^9, 
   3.7399940450586395`*^9}, {3.7399994367845287`*^9, 3.739999451591098*^9}, 
   3.739999686093769*^9, {3.7400000365351973`*^9, 3.7400000474303093`*^9}, {
   3.7400017860191355`*^9, 
   3.740001800958247*^9}},ExpressionUUID->"71a0ee0f-2250-44ad-9ff7-\
a28b4d7a0cc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "1.     2 ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "b1919272-037f-4cbd-b116-ee099ea50103"],
 " + 3y = n , n \[Element] {1, ... , 15}"
}], "Section",
 CellChangeTimes->{{3.7401433002791615`*^9, 3.740143305958061*^9}, {
  3.7402470082858143`*^9, 
  3.7402470095405827`*^9}},ExpressionUUID->"eebf6104-135f-4eeb-ac28-\
ddb472f407c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7398308503147326`*^9, 
  3.7398308564023104`*^9}},ExpressionUUID->"e34eba98-1c77-4750-a3ba-\
85080bd025c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], " ", "+", " ", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", " ", "#"}], " ", "&"}], "  ", "/@",
     " ", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "15"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.739737718448765*^9, {3.7397411540092325`*^9, 3.739741212500842*^9}, {
   3.7397413374676666`*^9, 3.739741355964774*^9}, {3.739791360446493*^9, 
   3.7397913608972273`*^9}, {3.739791578882866*^9, 3.7397915806115417`*^9}, {
   3.739791614752862*^9, 3.7397916148665895`*^9}, {3.7397916717994556`*^9, 
   3.7397917110825734`*^9}, {3.7397918711828184`*^9, 3.739791873379467*^9}, {
   3.7397919149144535`*^9, 3.739791923207847*^9}, {3.739823146569758*^9, 
   3.739823181649802*^9}, {3.7398246551060886`*^9, 3.739824655442139*^9}, {
   3.7398247299189515`*^9, 3.7398247638325653`*^9}, {3.7398248378017597`*^9, 
   3.739824844596708*^9}, {3.7398249606536393`*^9, 3.7398249612660675`*^9}, {
   3.7398250943436604`*^9, 3.739825178189796*^9}, {3.739825238475137*^9, 
   3.739825249503098*^9}, {3.7398253644812994`*^9, 3.739825422438635*^9}, {
   3.7398255059504824`*^9, 3.7398255639599433`*^9}, {3.739825668450143*^9, 
   3.739825715953738*^9}, {3.7398257469532776`*^9, 3.7398257478820963`*^9}, {
   3.739826319551078*^9, 3.739826322832861*^9}, 3.7399758799118495`*^9, {
   3.739975932309681*^9, 3.739975936441512*^9}, {3.7399760351454906`*^9, 
   3.7399760358021283`*^9}},ExpressionUUID->"35b7dc2b-6c92-48c2-9d31-\
4738d812468f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqnFindSolutions", "[", 
    RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
  "setofEqns"}]], "Input",
 CellChangeTimes->{{3.7399760086289124`*^9, 3.7399760091612773`*^9}, {
  3.7399761662197313`*^9, 
  3.739976169686516*^9}},ExpressionUUID->"02ecc58a-326a-4485-a991-\
761a57f56534"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       SuperscriptBox["y", "2"]}]}], ",", "\<\"No Solution\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", "\<\"No Solution\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", "\<\"No Solution\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"11", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"13", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"649", ",", "180"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"14", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"15", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", "\<\"No Solution\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"17", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"18", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"19", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"170", ",", "39"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"20", " ", 
        SuperscriptBox["y", "2"]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7399761705163918`*^9},ExpressionUUID->"76089974-b092-495b-8ce8-\
3480c4e14016"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{{3.7397412143257904`*^9, 3.739741225276322*^9}, {
   3.73974130195129*^9, 3.739741348430962*^9}, 3.739741495748955*^9, {
   3.7397910053890295`*^9, 3.7397910092634277`*^9}, {3.7397910489255*^9, 
   3.7397910824690013`*^9}, {3.7398257663522177`*^9, 3.739825767352*^9}, 
   3.7398268262219577`*^9, {3.739830940233824*^9, 3.739830947465489*^9}, {
   3.739975862899932*^9, 3.739975897451434*^9}, {3.7399759386605005`*^9, 
   3.7399759418878922`*^9}, {3.739975993783457*^9, 3.7399759940032578`*^9}, {
   3.7399761928049097`*^9, 
   3.739976193154231*^9}},ExpressionUUID->"5f441fbe-3e0d-4009-b312-\
b5c93ecdfc04"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "1"}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "2"}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "3"}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "4"}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "5"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "6"}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "7"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "8"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "9"}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "10"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "11"}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "12"}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "13"}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "14"}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       RowBox[{"3", " ", "y"}]}], "\[Equal]", "15"}], 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.739741496139243*^9, 3.73979101009205*^9, {3.7397910500353346`*^9, 
   3.7397910833684497`*^9}, 3.7397913648077555`*^9, {3.7397916961851377`*^9, 
   3.739791714499033*^9}, 3.7398248163138533`*^9, 3.7398248483826556`*^9, 
   3.739825729625484*^9, 3.7398257691810617`*^9, 3.739830951769001*^9, 
   3.739877648824871*^9, 3.739974924776656*^9, {3.7399758983542175`*^9, 
   3.739975944190588*^9}, 3.73997599451993*^9, 3.7399761938367605`*^9, 
   3.7399764106453867`*^9, 
   3.739996952096301*^9},ExpressionUUID->"681bf22b-e729-4752-b6c6-\
739b3e32a1a2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "2.     ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "73a58dac-39f4-4007-95d2-b35b29aa9fe6"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],ExpressionUUID->
  "69498ece-c4da-4ca9-9b87-c4ed93b904ea"],
 " + n , n \[Element] {1, ... , 16} "
}], "Section",
 CellChangeTimes->{
  3.740150367321843*^9},ExpressionUUID->"347140be-364b-4973-91bf-\
e1cdef13cb7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7398308503147326`*^9, 
  3.7398308564023104`*^9}},ExpressionUUID->"f3b4343c-27a3-43ec-a35a-\
cd9141eee23e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "==", 
      RowBox[{
       SuperscriptBox["y", "2"], "+", "  ", "#"}]}], " ", "&"}], "  ", "/@", 
    " ", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "16"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7397912228159165`*^9, 3.7397912713790417`*^9}, 
   3.7398310907114067`*^9, 
   3.739976078440345*^9},ExpressionUUID->"6d934582-797a-4799-8b26-\
1d34a359e832"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{{3.739791283390772*^9, 3.7397913364355774`*^9}, {
   3.739791421217955*^9, 3.7397914780387654`*^9}, {3.7397919786446767`*^9, 
   3.73979201727779*^9}, {3.7398263787516174`*^9, 3.739826379223507*^9}, 
   3.73982682887179*^9, {3.739831128935212*^9, 3.7398311361502666`*^9}, 
   3.739976074382819*^9, {3.73997619919528*^9, 
   3.739976199540865*^9}},ExpressionUUID->"7fb33a27-58e0-4cd3-bf32-\
2b6c9f0e23a1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       SuperscriptBox["y", "2"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"2", "+", 
       SuperscriptBox["y", "2"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"4", "+", 
       SuperscriptBox["y", "2"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"5", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"6", "+", 
       SuperscriptBox["y", "2"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"7", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"8", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"9", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"10", "+", 
       SuperscriptBox["y", "2"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"11", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"6", ",", "5"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"12", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"13", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"7", ",", "6"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"14", "+", 
       SuperscriptBox["y", "2"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"15", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"16", "+", 
       SuperscriptBox["y", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.739831143329836*^9, 3.739877649055767*^9, 
  3.7399749250973554`*^9, 3.739976080206645*^9, 3.7399762002511435`*^9, 
  3.739996968400998*^9},ExpressionUUID->"8028010b-ba55-4fad-890a-\
28a9e3f5dd75"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "3.     ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "e377cd45-9bb9-428e-99c2-ba5c880be5c1"],
 " = n ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],ExpressionUUID->
  "7e3d1f12-fe0b-427e-b78a-780759a220cb"],
 " + 1 , n \[Element] {1, ... , 20}"
}], "Section",
 CellChangeTimes->{{3.7398390407922907`*^9, 
  3.739839057709566*^9}},ExpressionUUID->"fc4ceddb-6066-45f5-9f34-\
204052a82be3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.739976093705542*^9, 
  3.739976105575556*^9}},ExpressionUUID->"643be52c-510b-4fec-b7cc-\
624b0eed326d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", " ", 
      RowBox[{
       RowBox[{"#", " ", 
        SuperscriptBox["y", "2"]}], "+", " ", "1"}]}], " ", "&"}], "  ", "/@",
     " ", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "20"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.739976376042098*^9, 3.7399763815313587`*^9}, {
  3.739976426600999*^9, 
  3.739976428533224*^9}},ExpressionUUID->"af7b8d91-02af-47cf-b5bd-\
00aa57275aa2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{{3.7397990122733946`*^9, 3.739799014387868*^9}, {
   3.7398390702136273`*^9, 3.7398390797309723`*^9}, {3.7398391197868958`*^9, 
   3.7398391208026085`*^9}, 3.739976088620878*^9, 3.739976121058066*^9, {
   3.7399762045149355`*^9, 
   3.7399762048496904`*^9}},ExpressionUUID->"f652d494-a85c-4337-b84b-\
e40f440ef53e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       SuperscriptBox["y", "2"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"9", ",", "4"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["y", "2"]}]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"19", ",", "6"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"11", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"10", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"13", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"649", ",", "180"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"14", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"15", ",", "4"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"15", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["y", "2"]}]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"17", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"33", ",", "8"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"18", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"17", ",", "4"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"19", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"170", ",", "39"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"20", " ", 
        SuperscriptBox["y", "2"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"9", ",", "2"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.739976121889996*^9, 3.7399762054706173`*^9, 
  3.7399763839043694`*^9, 3.7399764322508082`*^9, 
  3.7399969766997657`*^9},ExpressionUUID->"19dbfb1b-de4e-42e6-8853-\
15df8b46799d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "4.     ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "d7426046-077c-40e5-b975-dbf7212bc8c9"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "3"], TraditionalForm]],ExpressionUUID->
  "8d3a2e6b-e4ea-4b8e-ac5f-6ec08ccad037"],
 " + n , n \[Element] {-20, ... , 20}"
}], "Section",ExpressionUUID->"a5d04d30-37ac-4700-a2eb-d91b8a4e0a03"],

Cell["This is Mordell\[CloseCurlyQuote]s equation. ", "Text",
 CellChangeTimes->{{3.739974939619612*^9, 3.739974950265374*^9}, 
   3.73997632267735*^9, {3.7399940818992825`*^9, 
   3.7399940828784723`*^9}},ExpressionUUID->"0a7fb831-29a1-4a5b-966f-\
3a59ea20d73c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7397990584905853`*^9, 3.73979907527975*^9}, {
   3.739877633365006*^9, 3.7398776506910152`*^9}, 3.739973608441579*^9, 
   3.7399763273007927`*^9},ExpressionUUID->"b10812eb-2f49-47b2-b534-\
366327d9e904"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "==", 
      RowBox[{
       SuperscriptBox["y", "3"], "+", " ", "#"}]}], " ", "&"}], "  ", "/@", 
    " ", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "20"}], ",", "20"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7397990584905853`*^9, 3.73979907527975*^9}, {
   3.739877633365006*^9, 3.7398776506910152`*^9}, 3.739973608441579*^9, {
   3.739976329159792*^9, 
   3.7399763340492744`*^9}},ExpressionUUID->"68443d67-9833-4384-851a-\
390f69107a21"],

Cell[TextData[{
 "For the following values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "589064e7-1ed8-47ff-8900-de908c03ac7f"],
 ", Mordell\[CloseCurlyQuote]s equation is known to have no solutions, \
according to ",
 ButtonBox["https://oeis.org/A081121 ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A081121"], None},
  ButtonNote->"https://oeis.org/A081121"],
 "and ",
 ButtonBox["https://oeis.org/A054504 ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A054504 "], None},
  ButtonNote->"https://oeis.org/A054504 "],
 "."
}], "Text",
 CellChangeTimes->{{3.739877677230907*^9, 3.739877782726299*^9}, {
   3.7398779711386476`*^9, 3.739877984867879*^9}, 3.7399749336252794`*^9, {
   3.7399749963712893`*^9, 3.7399750416989727`*^9}, {3.7399750908007383`*^9, 
   3.7399751256016197`*^9}, {3.739976449275838*^9, 3.7399764803549085`*^9}, {
   3.7399931671417027`*^9, 3.7399931671417027`*^9}, {3.7399932036846046`*^9, 
   3.7399932036846046`*^9}, 3.7399940997199726`*^9, 3.7399942090985827`*^9, 
   3.739994251920499*^9, 
   3.7399949201990614`*^9},ExpressionUUID->"47c2823e-f62a-4150-9ad9-\
aff021672cad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MordellNoSol", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3"}], ",", " ", 
      RowBox[{"-", "5"}], ",", " ", 
      RowBox[{"-", "6"}], ",", " ", 
      RowBox[{"-", "9"}], ",", " ", 
      RowBox[{"-", "10"}], ",", " ", 
      RowBox[{"-", "12"}], ",", " ", 
      RowBox[{"-", "14"}], ",", " ", 
      RowBox[{"-", "16"}], ",", " ", 
      RowBox[{"-", "17"}], ",", " ", "6", ",", " ", "7", ",", " ", "11", ",", 
      " ", "13", ",", " ", "14", ",", " ", "20"}], "}"}]}], ";"}], 
  " "}]], "Code",
 CellChangeTimes->{{3.739975024973589*^9, 3.739975084684532*^9}, {
   3.739975197383762*^9, 3.7399752004580297`*^9}, 
   3.7399942704192104`*^9},ExpressionUUID->"fd7d8c07-a1ed-4ebf-9b48-\
baeb7dfd973d"],

Cell[TextData[{
 "And according to ",
 ButtonBox["https://oeis.org/A001014/a001014.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A001014/a001014.txt"], None},
  ButtonNote->"https://oeis.org/A001014/a001014.txt"],
 ", all solutions when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b88b39cb-58ad-45b5-b39d-4ff06a26810c"],
 ", ",
 Cell[BoxData[
  FormBox["5", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f2a8aa30-cc42-4a35-b3c0-f69b46900999"],
 ", ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "11b56570-ce45-490b-b11f-189368dedcdb"],
 ", or ",
 Cell[BoxData[
  FormBox["16", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6607624b-7870-4703-9527-570bf1bf4cb1"],
 " are non-positive."
}], "Text",
 CellChangeTimes->{{3.7399949275521364`*^9, 
  3.739995033352414*^9}},ExpressionUUID->"095401a3-9830-4fac-ac38-\
c63ce11a2284"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MordellNonPos", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "10", ",", "16"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.739995074513858*^9, 3.7399950919811783`*^9}, 
   3.739995480512748*^9},ExpressionUUID->"ee7eb0cf-7e13-4d29-8ab7-\
0712f91e1208"],

Cell[TextData[{
 " In addition, according to ",
 ButtonBox["https://oeis.org/A081120",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://oeis.org/A081120"], None},
  ButtonNote->"https://oeis.org/A081120"],
 ", when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", 
    RowBox[{"-", "8"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "07cbea9f-e480-4903-bd28-f1d7f8ff1004"],
 " there is exactly one solution.  Evidently, this is the solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fa603829-c90c-4f11-8630-f91d769eb30e"],
 ", which is non-positive."
}], "Text",
 CellChangeTimes->{{3.739877677230907*^9, 3.739877782726299*^9}, {
   3.7398779711386476`*^9, 3.739877984867879*^9}, 3.7399749336252794`*^9, {
   3.7399749963712893`*^9, 3.7399750416989727`*^9}, {3.7399750908007383`*^9, 
   3.7399751256016197`*^9}, {3.739976449275838*^9, 3.7399764803549085`*^9}, {
   3.7399931671417027`*^9, 3.7399931671417027`*^9}, {3.7399932036846046`*^9, 
   3.7399932036846046`*^9}, 3.7399940997199726`*^9, 3.7399942090985827`*^9, {
   3.739994290107695*^9, 3.739994298970765*^9}, 3.7399948330665197`*^9, {
   3.739995169651619*^9, 3.7399951752064395`*^9}, {3.7399952566091776`*^9, 
   3.7399952566091776`*^9}, {3.7399953264785376`*^9, 
   3.7399953835267534`*^9}},ExpressionUUID->"3aa1ccba-35eb-42db-9eac-\
85b70743b6c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqnMordellTest", "[", 
    RowBox[{"eqn_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ":=", "\n", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "==", 
          RowBox[{
           SuperscriptBox["y", "3"], "+", " ", "#"}]}], " ", "&"}], "  ", "/@",
         " ", 
        RowBox[{"Join", "[", 
         RowBox[{"MordellNoSol", ",", " ", "MordellNonPos", ",", " ", 
          RowBox[{"{", 
           RowBox[{"-", "8"}], "}"}]}], "]"}]}], ",", " ", "eqn"}], "]"}], 
     ",", "\"\<No Solution\>\"", ",", "\"\<Unknown\>\""}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7399768476888065`*^9, 3.7399768568695517`*^9}, {
  3.7399943377246685`*^9, 3.7399943953155622`*^9}, {3.7399946423869166`*^9, 
  3.7399947109118953`*^9}, {3.7399953940802865`*^9, 3.739995416612357*^9}, {
  3.739995456570247*^9, 
  3.7399954918384075`*^9}},ExpressionUUID->"2cd91771-5f5e-4f2c-82a3-\
0299ed1a6563"],

Cell["Now, to obtain our answers, we use the code below. ", "Text",
 CellChangeTimes->{{3.740276229565579*^9, 
  3.7402762372124634`*^9}},ExpressionUUID->"eb920d52-60bf-4195-a801-\
ba206477fd40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars", ",", " ", "eqnMordellTest"}], "]"}], " ", 
    "&"}], " ", "/@", " ", "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{
  3.7398391445788174`*^9, 3.739976490335992*^9, 3.7399943276837835`*^9, {
   3.7399947205906153`*^9, 
   3.7399947210746613`*^9}},ExpressionUUID->"9dcb9c1e-958d-43a8-a875-\
e08aad704479"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   136,88,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.739976495737132*^9, 3.7399765709132442`*^9, 3.7399766610358553`*^9, 
   3.7399767141693363`*^9, 3.7399947274355*^9, {3.739994789790906*^9, 
   3.739994813148122*^9}, 3.739995497795228*^9, 
   3.7399969878207893`*^9},ExpressionUUID->"dd3ff295-bd58-4d8f-a63b-\
fe9ee172a4ef"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   136,89,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.739976495737132*^9, 3.7399765709132442`*^9, 3.7399766610358553`*^9, 
   3.7399767141693363`*^9, 3.7399947274355*^9, {3.739994789790906*^9, 
   3.739994813148122*^9}, 3.739995497795228*^9, 
   3.739996989227275*^9},ExpressionUUID->"d457be69-74cd-4300-9241-\
7bd1143d7b59"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   136,90,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.739976495737132*^9, 3.7399765709132442`*^9, 3.7399766610358553`*^9, 
   3.7399767141693363`*^9, 3.7399947274355*^9, {3.739994789790906*^9, 
   3.739994813148122*^9}, 3.739995497795228*^9, 
   3.739996990630822*^9},ExpressionUUID->"84009aa6-b16e-4b52-b43a-\
15327bf71d5d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Reduce\\\", \\\"::\\\", \
\\\"nsmet\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,136,91,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.739976495737132*^9, 3.7399765709132442`*^9, 3.7399766610358553`*^9, 
   3.7399767141693363`*^9, 3.7399947274355*^9, {3.739994789790906*^9, 
   3.739994813148122*^9}, 3.739995497795228*^9, 
   3.739996990693304*^9},ExpressionUUID->"eed615c6-981a-4f34-969f-\
5ab0766a3872"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "20"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"14", ",", "6"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "19"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"18", ",", "7"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "18"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "17"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "16"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "15"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"7", ",", "4"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "14"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "13"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"70", ",", "17"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "12"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "11"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "10"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "9"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "8"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "7"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      SuperscriptBox["y", "3"]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"2", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"4", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"5", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"6", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"7", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"8", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"9", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"10", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"11", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"12", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"47", ",", "13"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"13", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"14", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"15", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"16", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"17", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"18", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"19", ",", "7"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"19", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"12", ",", "5"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"20", "+", 
       SuperscriptBox["y", "3"]}]}], "\<\"No Solution\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.739976600657653*^9, 3.739976667324836*^9, 
  3.7399767439613347`*^9, 3.7399947307178755`*^9, 3.7399947926132607`*^9, 
  3.7399948380314093`*^9, 3.739995522631303*^9, 
  3.7399970130009575`*^9},ExpressionUUID->"484afd7c-52cb-488a-8bd1-\
7de99192badb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.     ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "be5c6dd4-877f-4bd9-9aa4-9bf74614bda9"],
 " = n ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "3"], TraditionalForm]],ExpressionUUID->
  "012b1e34-278a-482e-a111-368df8341dad"],
 " + 1 , n \[Element] {1, ... , 10} "
}], "Section",
 CellChangeTimes->{
  3.739993393936803*^9},ExpressionUUID->"a0d05ea4-cfdf-42c9-a1df-\
430d6273c90e"],

Cell[TextData[{
 "This equation is a elliptic curve. This paper (",
 ButtonBox["https://doi.org/10.1112/jlms/s1-43.1.1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1112/jlms/s1-43.1.1"], None},
  ButtonNote->"https://doi.org/10.1112/jlms/s1-43.1.1"],
 ") comprehensively overviews Diophantine Equations of the general form ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "2"], "\[Equal]", 
   RowBox[{
    SuperscriptBox["ay", "3"], "+", 
    SuperscriptBox["by", "2"], "+", "cy", "+", "d"}]}]],
  CellChangeTimes->{{3.739799102508488*^9, 3.739799120255617*^9}, {
   3.739877791506769*^9, 3.739877796256263*^9}, {3.739976588084386*^9, 
   3.739976591176737*^9}},ExpressionUUID->
  "b1562b1c-0dcb-4e77-9591-f440a744d25e"],
 ". Our equation is a special case of the former, with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "n"}], ",", " ", 
    RowBox[{"b", "=", "0"}], ",", " ", 
    RowBox[{"c", "=", "0"}], ",", 
    RowBox[{
     RowBox[{"and", " ", "d"}], "=", 
     RowBox[{"1.", " "}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d6536c38-af56-4a86-aeb5-3d83795fa934"],
 "No external resources were found to explain why the original chart lists \
all of the present \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox["Unknown", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "23acf30e-2130-48e6-9797-4057e7110c1c"],
 "\[CloseCurlyDoubleQuote] answers as ",
 Cell[BoxData[
  FormBox["\"\<No Solution\>", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ac71ba79-342a-4180-8856-924a31557b59"],
 "\[CloseCurlyDoubleQuote]. "
}], "Text",
 CellChangeTimes->{
  3.7401563978585005`*^9, {3.7401568481965537`*^9, 3.7401569057826967`*^9}, {
   3.740156942433671*^9, 3.7401571604058867`*^9}, {3.7401576153516064`*^9, 
   3.7401576228002653`*^9}, {3.7401576720816803`*^9, 3.740157847270536*^9}, {
   3.74015794676061*^9, 3.7401579625972614`*^9}, {3.740157995044078*^9, 
   3.740158007555572*^9}, {3.7401630680969095`*^9, 3.7401630683397627`*^9}, {
   3.740163145501999*^9, 3.7401631678593073`*^9}, {3.7402762601654606`*^9, 
   3.740276371722337*^9}},ExpressionUUID->"64f950b2-214e-4188-9b33-\
03373aa66e70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.739799102508488*^9, 3.739799120255617*^9}, {
  3.739877791506769*^9, 3.739877796256263*^9}, {3.739976588084386*^9, 
  3.739976592920472*^9}},ExpressionUUID->"6c36bde2-dd8f-4b1e-8756-\
9508051b9345"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", " ", 
      RowBox[{
       RowBox[{"#", " ", 
        SuperscriptBox["y", "3"]}], "+", " ", "1"}]}], " ", "&"}], "  ", "/@",
     " ", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "10"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.739799102508488*^9, 3.739799120255617*^9}, {
  3.739877791506769*^9, 3.739877796256263*^9}, {3.739976588084386*^9, 
  3.739976591176737*^9}},ExpressionUUID->"8e215334-55db-4272-a4cb-\
54c7a92de63f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{{3.739839303360553*^9, 3.7398393040586095`*^9}, 
   3.7399765837452116`*^9},ExpressionUUID->"a02e8ae0-80be-4d15-87e4-\
c8c73c99e1a5"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   139,92,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7398393059899607`*^9, 3.739839313864505*^9}, 
   3.739877801692173*^9, 3.739974959435252*^9, 3.739976602587044*^9, 
   3.7399768994859657`*^9, 
   3.7399970281225667`*^9},ExpressionUUID->"ca48aea6-12f6-4ea7-a12a-\
59f4a19163a2"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   139,93,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7398393059899607`*^9, 3.739839313864505*^9}, 
   3.739877801692173*^9, 3.739974959435252*^9, 3.739976602587044*^9, 
   3.7399768994859657`*^9, 
   3.739997029544756*^9},ExpressionUUID->"ee295fa6-96fa-4d3e-a751-\
8a7c73153706"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   139,94,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7398393059899607`*^9, 3.739839313864505*^9}, 
   3.739877801692173*^9, 3.739974959435252*^9, 3.739976602587044*^9, 
   3.7399768994859657`*^9, 
   3.739997030910598*^9},ExpressionUUID->"a9fb99fa-9d7e-4f45-a1e3-\
66fe7086f9ea"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Reduce\\\", \\\"::\\\", \
\\\"nsmet\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,139,95,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7398393059899607`*^9, 3.739839313864505*^9}, 
   3.739877801692173*^9, 3.739974959435252*^9, 3.739976602587044*^9, 
   3.7399768994859657`*^9, 
   3.739997030973072*^9},ExpressionUUID->"513c34cb-180f-46be-a8b0-\
1c8c55b39a95"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       SuperscriptBox["y", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["y", "3"]}]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["y", "3"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "3"]}]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["y", "3"]}]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["y", "3"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["y", "3"]}]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["y", "3"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["y", "3"]}]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["y", "3"]}]}]}], 
     RowBox[{"{", 
      RowBox[{"9", ",", "2"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.739839311724847*^9, 3.7398393215327635`*^9}, 
   3.739877807802456*^9, 3.739974966567375*^9, 3.73997660891319*^9, 
   3.7399769056772494`*^9, 
   3.739997033610077*^9},ExpressionUUID->"98101f85-db52-4be4-b82d-\
d78553b1e384"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ContourPlot3D", "[", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "\[Equal]", " ", 
     RowBox[{
      RowBox[{"n", " ", 
       SuperscriptBox["y", "3"]}], " ", "+", "  ", "1"}]}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{
       "{", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)\[Equal] \
n*\!\(\*SuperscriptBox[\(y\), \(3\)]\) +  1\>\"", "}"}], ",", "Above"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7401564052721624`*^9, 3.7401564521300993`*^9}, {
  3.7401564896576624`*^9, 3.740156531458577*^9}, {3.7401566999136977`*^9, 
  3.7401567345994463`*^9}, {3.740253849082254*^9, 3.7402539462375393`*^9}, {
  3.740254007937954*^9, 3.740254024740048*^9}, {3.740254278904626*^9, 
  3.7402543119372587`*^9}, {3.7402548346240654`*^9, 3.740254868162733*^9}, {
  3.740254914791988*^9, 3.740254931324687*^9}, {3.740254997053839*^9, 
  3.74025501252604*^9}, {3.7402550504885826`*^9, 
  3.740255051506639*^9}},ExpressionUUID->"e9211686-9fe1-4c40-b051-\
4b598c815053"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJx0nXc819/3wO1kr4giJGlJNJTq9VYKpZKGdkLRVFraaG8a2vJpL7RkpF4v
DSkj2avsjBDZ++f7+7zPubrvj88/78fn6XTuveeO173n3KHj6Ga3WkRISGiH
lJCQaNevz8g/+RNrClneMJWY7c1pzOwZ4z+e8h7GcQcHH5D7kczyJO+k2OzO
RE7Lpy/TiHeaMhTluYZfS8IispCjfLFJ/sDWbGZ6L0mDn8JaRP6p9LY1kbnI
afmFw7+Mu+DVD+UDvg5pd92fJ8Ahn9HjFr0JeTecE0p8/MXR0ImB/PTE6XIB
16jRlelvrk30v3tf2bLnB3Ja/twPc7FpXjoC8sAxXX55QQ9wKBfYATith7aD
69xTllOE1VE+L3oW56+VjxzkgXvsmG1f7amK8tpvtxxMeUs42p+fLs0h/8eu
Kbj4C6mgftuQi9OlVhYIcKiXyYN2hvwQMSTl6oH7PAnvzeskeuhyQb1jfpL3
uJw1+y5QXqiXUq+cHMV3g0m6/HYFHPPJ55svvCkq9dIXkAeO6aovm50/PgP1
0Bzk6fysdGtNmSAyREA/cDo/zff8K1jzQaT98MsLHPXzuVf4gTo/YT0BeeB0
PkEP1ju/XgT0UP2aTrd3nEPbxihdgXYLnB43oLx0urQ8NzHOXCo8lUlqKEt4
km9E0uXnHzgtr+qZZXfZXFAeOMg7zD702t8jhRnzSCGxs9OE2J+fT+C0fNS3
wWzHKkF54LT8mY3NM6K8RgnkB7jQvcaRQVwuu/mmW5DP70LGo0/Q8LmdkigP
/EHloKrf6bKoH/rvotghsvWdsiifePt73PabhchBHvop6M+7Ljzo1ySin5YH
bjVp7Prn+mKkPfDz35MdxJf2nVoeZSwgD5y2T098RpHkp1QdYwH9wLG9UfVF
p0vLC9ifGpd6aj8hSn6BvaaOFJAHTrfDnjiMezSH7xRwGOevckk7bDwVMT8w
TgKH/GA7uTl+xLC9CsihPdDykH/oRw9ulQ9oVKxmhRys5F8NdmHBnjSH+qI5
2JPmYE+agx1oDt9lmsO4QXMYb2kO4xjND590zQj3HsWjebvH0cSCd8Y8z8P2
yikttdgOQR543sqJY0xMkxmQp/XI+1vn+UwxEtADXGig+NnZ5kXYvy6vNLYJ
7BDFele4JuzzmClC3kO9COQHOC0P31OaQ38XqJcjann7Dg0T0GO4akHiVzFD
TBfbM1+e5iBP68HyDvZUeepdjnbgSrarxnb9e5AHLiTEFgYqrmSAB0zdeVyv
tRY59hfgEkPj7g1MZdGeC3QeLjYvQ/047+LL8+4FTw5IykPOqWl2frtVKSBv
6xayMsyhBOsF+blB8/Jzi5ie7EmXCziWa4ZbtvuUP1he3ieXynlSdQzYE7jR
oWMBU/1F0M6Jy9uLB/5TKiCPdnj4YpxHfhJDp9v39S2P8F5yAvXiqhx/3VNM
hbQr/rwL5IHD9x3kBdrVnMehWyTESD7he8TntDzMb2kO82GaQ3lp7l6/XP6Y
qJ6AfofEa52ZB/VJ++SP5yCP5eJ/R0BewD78eabAePU48/cwsSECeoDT8laf
rfbpiasLcL0DH5bHiGuRfPLnVyCPnD8fA3laj7eG9oCxB3VIfvjjPPAL/tte
SPTW4gn1HXhFZXkbjpNh5XPfKRzW4ZlWpLnq7O9EDvKXqy2OShh2Yr2A/ASH
af0vzRHmgP87Dg3krXPc+/j4YGEO9ABfOGPAIc08EZQH/Q8WB2xiPwlzMF6B
/tGTUg02JYoK8LxE3tIbvVU4nlel4R+7Qhb0Aw/QO9aLPV/GgnzaiCmHfsjL
cUL7X1sMjm1AeeAKl1dfkXzSjvItdW+eD2mR5KC/g7xeyqHZtXbSyJfJjj0x
MEuHVxEuYuctIyaQT+ANYw4sPWqjjHqqdc3d5Z+JozxwkK/SVGqwnqTOXQ5v
+dC5Sh05pAt2A55o0RkaaSnDRbpMK/jVSx3rEfQDB3uCHuCgxyda//eNI0Q/
2OdplvaGJSeqWeAdaob37HZJCOQH7M/5FV6/fieHVXhl8Xjwo9+M0KkjjI1S
HY57HrNDvAcNqmbo8ZDmMG7AeAt6uN+lpYpOuQxwBaGU2F5nS1DeobSpIW9t
FYP1ztcP+YHyAgc9KB8z1OFR7UXkKD9R7LlzW5BAPqE/0hzGGVx3r9W75y2T
h/I4H6sPYwwvf0d5Wg+Mt1je6S+fLz5dgLy6zV5t2bESJvWEw7aZ0upYrmqb
VWfmlf1ioF7o8qI8VV6U53Ptisn+521ymC8WnqebZbQE9CCn9MQZLzqRM1Cb
66l+of3YjtLdISJXR9rJsIrs+beTWOA+o9tMP8YXCshjvZQ+v71N8RxL64f2
D/JcoVD0lYwfyJctO1Oltk+UB+livz7i9n1sbzHk3NAFTtlrxJFz74rN2gyq
iR4+33w433fbCUE9mE/+/ATyg+2Nn3+QR+6b/ajiSBjKY71Q8shtYpKtpQNR
nmd2Rd/TLwPHcyzXd6eMH/LlyFG+7xATe7VsHOdRPqK2KMSnAjltZ9BDc5D/
8KtFNyldHu0JXKEu/sAGaTnka6RHVbnv0+DyjFQVv0mo8J4uvrjK63GjgLyP
2+vmFo0GtD/IHxuSrfSwfyvyGMuRCddXSKF+4KCnye+KdO8Ztaj/bdZ007VG
SigP5QL9th6Xxn7cXY8c9HDanak/Ilux3oGbPhvxzmVtjYA81q9t0C+RgYks
cGwnSvc7S5LLkWP98tsD5Ae45+jVqm8topGDfhiHgYN+XkFZmPPjJoH+Aus4
msN6DduhW9T5SakpKI/tZ0VvjYd90lAe8o/jDL99Qn6Q88tFpwvrUNDv4LVL
NulCMnJaHtaJ2N9t5gaoLExHDu05cZh2W8vGItQD3FbD1XtNUDGWC7iP4qlp
12f/FCgX/7uN/RHKRXOQd+ickzzvqI6APM0hXVoP8J7kcRym0qU5yKP9qfyg
PFVf0C9MhYcpDlpkQNr/zZWG9luq0D5oz8bGM5NGlqL9UZ4/fgIH/WE3t1sl
P/yDeoCbnnmTMLm89j/0fNXxrP6F9Qjyl0Ou5dmo1yAHed4ztQe/jCqxfkE+
4wl72zu8BjnM3wysvpdU/GpCPTBP0x60se79hlbkIP9g7KBNi4a3oB6QD1AO
2T0ysA05zJeM1s/K7rO+AfUAV1gh6rlmaaOA/DGbmRJJ15rQPpAu5Ac4zqv5
+QG74fxZKnPS6lntyLFcIu1C1yrbif0/HjmWZ0PqHeRh3gj5pDnYDca9zTsY
I7Ed6qgHygvywANWHElusyMc6h3kL795MWy6uirKQz5BvnrrkL55X+oFONgH
xnmo96vOLybs7RQSmA/jeMufhwCHcTXAeobaRuUSXEdklLjOmJjQKWAH6F8w
PgPH/svvX1BfyPnjIchjf+RzkAfuub9sjIZFFHIcN/j6od574nS6oAfzX57X
sGpaLOaH1uPedM3p/jc1rBdot9hOvLZuPZtVJ9AvIF3IP+QHy8W3G8ijHfjf
TeCYH37+QQ+Ob/x6BHng3Ou7T2boZbFVQefn6yTq8CL7tO6oEhLjwbwa9ABP
CTTzXWurjFzsSvysrA+iKA92A3mf0R4DvebIILd6sUpsfJGwgLzpgzHffqh2
4roe9MtETjIXtRDmAQf5gK/KhRXT2tCPAfIZtz89b17TiRza+YPjEx7OEOsa
L1W6PvoFOQzUC/AAScOP+41LGJCP6YjcmCyqwvM0qosXi4pGeeDgXwJ5KC8X
lX22MqIJ5YHbvrq5xPGMKOYf0jWKUJpaeKWaAQ76MZ9tIYtbZxE9sL4D+cSt
+rFvN0ogBzvE2L5Kv1gliRzqvW7kvq0rLaUFOLd//KU9d8UF6h3y6bk8sN/T
rAYG5IHbVq2puLu0Aznkc+/WpBmj1qqT/PDLxeN9yxF1L0R54AGF60MSn5ch
b7qdp36pTQTrHfjEt9sS6/sJ86B+4Tv70r3t5sheXetJ/voLvnc0B/n5qmdy
Nh3SEZDviUeG5RzxEu8ap/nrX6x34Meb1XcfCEeO6VLytH5qniOQLs0v97ql
WjO9iUE9/HVl3vGVmf+4tKL9gHMejUJ2O+oZzA/4Afj6sT3z8w/5Qc7PP3As
Lz8/uC5QPPJ48YVG7L84zmf8HhB6txU5yFePPOZ5w6ke+ynIu7auVM7Taxbo
vwb5scu8xFvR7wry0N+Bg/wG7vHK0lohbOcgD+MVcGq+iuUCebQb3z7A0f58
+2B/59vHc7dHpQMXhf0a+U+3oAdRschBPy2P+ql06XxC/7Kq6hNm1KcF4zUg
x4u9+6GXXxty7I+d8aM+pjRh3ATHgZzlk68vaEUO8sAhroHfr5ADw8/odyAH
eTr/1HcZ7UZ9lwU42oc/DoMc6Ae7Ud9BTBf+H/Xw7Y/fNWjP/PEcxzE+58Zv
lNzkmMVECrlx5uKqPIgvQHkj9yud9n+ohhzsDO1qkf2ac4/P/UF54B7OTyuX
3KpBeajfp33qPk+2aET/OdittOz+lZmrW5CDvM8wDcewF/WoH78j/PrFfIJ+
U+c3Lu/rBNKF/B/nTbTvuGKC+TTdeGroIJEabA/Y76YF9VVLrkU+1Kb9Wbqe
CuqBfOL6gi9Pc5BfUXKuWfetAbYfz3efj04a247yUC+n4usjLokK8Wj7wPgD
5cLvo+7kQVXzGkj++d9TSBf4nQKxvvILRJHD+ADraDquBJyO78B6nI7TAYfv
I3DQg5z6LiA/VDP4y6pU5AqTkrJtttZhusAh3bzUVJlHb8Ux/3TcCuSbtru6
/F5VjRzkcdzjr4uBY7/mc/Bz9sSxP1J6BPiY7Byrj9UMzCvAPpflVYr2hdQw
+D2i7IbyfLsBR3nKnijPHx/QT0LFlUCeNyTVY41jBXKUp+JoKG8zbcPZ/DKm
Jz82tFuaQz9FfzjfDwnyGJ8dkv/kV1omytN6oP2jHr7/E3gP/iWin+8vAs4l
uk9Lm1bL4DhJ+b3RzlS9ozzF0f4U76m99c979rpvjIZAutgv+Osv9FOtydSt
EirFcQP9nPx2Dhz7kYfvdW/uJ46T6CeRWH14UmGVAIdxG+q3QFMk3rm/EvY7
4NhOqP0A6Mej9ldgP6Xip1iu49aqap7FAvL0/gcsF38fBXAcZ6j5G5TLU7vZ
7LpIJepHv7TxsxCjd79QD/DLs08syDeuxX6hkHC38fxYKbQDjCcgD3x+/2ZP
52YNnoz7FpvPwfLIUQ9f3mjwk6nJog0CerDev50IbP5TjvmHeSaMh8CxvSVs
t9RflYj7BGj/Lc3Bf4L7WCi/6zYjqSc3O0U52r+HcWrK7wrydNwB49RUnALk
ab+rvr/r7FRhOY72HwKn/e0oT/knMf+Uvxc47R++U5EhdYtR4ui4QM7FizUT
EuQ5Oq5RedjJQ1xEhaPjBcDpuAbkk44LQH7oeBDI0/ECkKfjTSBPxzuA0/EX
yCcdTwF5Ov4CnI5TQH7o+BTop+MXwOn4BXA6fpE3UUU5qzObpeOS2G4pPzmM
nzQHedpPDpz2w1Pfd+RQXtqvDnp64nRcD/TQ+QE70/EU4LQ86KHLC5zOP9iZ
9vODftp/DvK0fx447c+3vftubueqEpaOU9vWx8Y0vPvF0nFq0t//9vODftrP
D5z25+M+GWofAtifjjsDt52Usf3sCBJ3xvGNiiNvkxjyxnOrKEfHkXHco+LI
wOk4Muin49ogT8eXN68ILv5y8DdL72fgfJxGHZpaxdL7H37UfL4uvkCKo+Oh
aGcqjgn2pP3kWC4qLozjORVHBk7HuyddbKp/5K3D0fGLgNooDTMxLY6Od4A8
Hb8AeTreAe2b9s8Dp/cpgX56H9T+2FOXTLeoc3T84lPkOWttUcJHu3w82Wpl
gvmh4zvA6fgO6KH95CBP79eCfNLxKeA9xKFQD83puA/kh46nAN/suMV/pjSJ
+yyWMhybl6fG0f7/A1+ndew3UOXoeE2lRspvFSsyzoAe0E/Hj4DT8SDIP+3P
Bzv04P/n6H1i2K7+e18ZR8cdQJ6OU0B90XET4PT+KOB0HAfSpeMjkC4drwF5
Og4C8nS8BtKl9QCn5cH+dBwKxgc6XgzydPwL5Om4P8jTcTdsn1S8FeTpOBpw
Ov+Qbk/fO/r7CHrouCHYh94PieMPtY8R2y21Hw/GE3pfH+gBvvl4467njdKo
h96/B5yOS4Ieev8eyIN+I+kBz86PJenS+/rgu0DbBzhtT/h/el8ltMMe9mFy
9L5KkKf3YRaE5rx5k67D0fstQb6H/ZZcD/stOXq/Jeih952CPL1/FeTpfbBg
H3r9Bd9N2g8D8nQ8AuTpeATI0+tBkKf9ZjA/of17IA/cUyMh4eYmceS0f8zA
gxfdNlyKo9e5kB/gdybXr1r5TQM5vZ4FTq+jIV3a7wTytP8B5Sm/E/RrOu4J
nI5vAqfjmDBvof1swGk/G3Dan+l5XGG3xvNqlvbvmdovM1z1p4al/XsKfu1x
ko7VLO0vhfLS/k/o13S8BspFx+NAno7jgDwdp4PxgY5rUN8LAf10vAb00/Ep
HGcoPwY1bqMe0E/Ho4HTcSisXypeCfmn41PA6fiUfn+Zfsb35DnabwP66Tgd
+gGo+GCV+5zRV9SUONpvBvJ0fHBR39dnw7272hXlh8T2Rvm1quOG+w90qmfp
uCeOD5Q8cDpeDPptCkpnSAcQP2TM0vQX70yaWDoOC3ro9gP1S+sH3pM8Xe/U
ulXA702vr4HT62LKDy/A6e+dwo8LO7bOh/kHiS9DfdHxLMg/7VfE9TIVV0I/
DOVvBHk6joby8ubvek0lflr0m1H+Uhw3KL8ocsoPjOtoKm6FfiTKnwzy0J6P
NCms035kQPJD+aXx+0XtK8D1C7XvAudX1L4RkKf3e4A8vT8E6hv0+Oy03+z7
uh3bAb0fA/VT+zdAP71fBeTp/UI4zlD7gkCe3ucD8vS+IJCn9/mAPL0vCOTp
fUogT+9H2rZ4wrHX8ST/wME+Peyf4ej9Mzg/p/Y/4LjNj89CPoHT+xluyVkN
H71cnaP3/+A4T+0vAk7vc4B80vtzYHyj4y8g38M+HI7ehwN66Dgg5T9Eftvn
zsr0MDWOjptD/oEPsN4j337WhNiHijvHLIgcvENIlaPj8iBPx7uB03Hz6Lmi
USOtSbqgf+w/M9RltEm/hv6L+ql4PbQrOh6N/ZGKR2M/ouL10G7p/Q/A6XkI
1EsP+yLI94IvT62LcfzBdkLtf8B+/d/7JTh6fwVwOl4PenqI73P0fhKQp/ef
gN3ofRFQL/S+PtBP74cB/T3sn+Ho/TA4HlL7Z7Q1AyJ/+fxiOZMcBf9BCYyM
V2jAwGMm3GbTo8v/BP1ihUaMc4q+kcAYrdZbrzHdmBNyW3Czs7yLa1f2Ujvz
lfmzpK1T/tBIbrOjq42iWQXLO6phae6SyDwIZNPX7RrKcaU/tksqV7ABJ4+t
1ldLZGzEfqx/0zGcs32pOXLQxQrWof3Wu339vjGb808cObxxEKedU6Or4VTB
5nk/MVgWmsiI2P8ztW/dYI6bt6mjKe4X66l/LqSqz1dmvrXvGEWxUdzmPGn1
TbmVLG/xpaNLnyYzthNfaMw6rMhpq5csuJtZxfKqF7kkSCcxicaZxSvde3NC
X2ZIbl15kVVYMPRIYmARk3Hds7A0QJYTutBv3KIVPizPflWf94eLGCHpufc7
ZshxPs7bLc2aK1jPP2cbuMJvzMyG5TIODtrc5lPWZkafuvK588qymwe+Md/X
b/v856cu53Nm4dglhytZ7UI5mQFtSUye1j85W6+rcj7NxW9nMJUst26OcLVb
EhN5OKjlSlA/jtOPnl7CZDJCPkWfNasymN3LFy1cv2U4l9eHbb+jnME4aAu3
hUWlM//UBCW4vjPieIuzdYI+5DDcjzMmNltzGCHv96tyxulyeSV6D5jELEZo
99tRd/ZnMfKTdk/5YN9lt/3mJ9fLpzMBQT/9V71JYy5fHP85e4YJ5xBq2GSg
XsA4tG6wLa7OZ3w2Fzzv0ynH8YaZx1l55TIOpjZrxxnlMvMHhiYUq2pwnst7
WR2zLWUcnG+dbzUoZTxl+t3yOvSbfbBq4pFBRdUs98l6W7nKZzbB7GrHzhhD
zlPLq2ZIUzXrmTjo2cttMWxrxNUbsgWjuLCw/Av9QqtZoZdL1jvt+8Ku+7k0
aEuSHhdzp1FDJ7GLsxvHaYd8Zu8Kd0alxA3hNm9VF2+Q6dKzVmbN8K9fWd6c
QU9qbXJZ08ywVWKzu+SPpD/eFx3PGoyXvTvocS/Oc5pVp1fTD1b7+9K+72xz
2Q/zLVqsdDV4my2e+35MyWe5+Lr7Q4UL2M3Jbb1z+sjzeNNK3LaZZLF5N9ca
GJzMYl/WmQq/WjGYF/DqRlnB4Bw2QGzC0MQDOey98d7aCZN1eULWI9QGq5ay
RjuWWVpMLWV5D0XcLsf+ZjbfaKlVudJlh3sKCi83xrITUlYdvfF8AFdtN8VU
dkdX/i+dHaR0JI7drd4mmvGuD7eoeY/abvdW1jaj9sA08TImLNp2kYS1As9q
dX5qk0FzFy+/lXC5kjHy9DPwedbOeBS9dqk5085uVo66mhVbxJS/c78T7q/D
iwmVXnk64g+rbczK+5jVM54LXn1/zvvAWDVc/hkV2sbmvR6ltn73TyZnn9XM
8PvqvKcucxyMnnSwAX98lPv5FjDRM4dND1s0jLcoNj9KZWQHW623S8XtZCGj
ca189aKd+rwmtfse0xU6WZ/227npMfnMyZm3dg3XNuIFTDjJW7y6E8+bXxlw
W/b7RWMeb6vXx8wd6Sxv+pM/ExPS2e2z5ILyPxrx8njxu7RDM1hudJ3HA7lM
1rhBq6L/zuE8oYO7gxttA1ifxddq0iJEeULCulkN4s/YvMtWb+8cSWMd5jXM
qviextbn97/wcpZJ1/z9f/9xkfPlRKzswsh9UDTH+6P4fF32y9ox+7rd1wTy
MTqrhCK63e/E5wL3QfF5+ee2Xf+86XYvE58/Ssp4tV6T3OOEeuh7k/h8SZiF
kGxHt3uTKD1wbxLqoe874vOUNuuEN03kfiSa4/1FUN5fvvOHjCf3EQEXuI8I
OHWPEOrPzMy6sIvcF4T6R7mb7RlH7o2hOdw/g+Wi74Gh5PEeGMgPfQ8M5GdA
RNTPneReF5rDfSbA4X6GPS5msma7FJBfDXZ9P8W/270rlB64dwU4zK++7LOc
fSsujwUuGiW64qZ/t/so+PyzjGJM2PJu91Hw+cqKO8dTsoqYNfav2BUNssgP
PV1Z1qtfCTPi64Z2t0Yx5BHWj8rEf5D7K4B/K3g7LUqkiPlyv2qUky0p19Ox
Qz4uTylirJkbS072luOqLsildR7Q4YX5LFDuZ0P8n8BtSnSPxu4kcTTgV5PD
f8+JI/7V2Z19wzo7NfF8Ykb6wGEPx8kgr1l/YbjKB+JXBz3gT74X33fg/rcN
LPBJeqtG9a0nfmPgEF9YMdjU8ptVIcpDutNGndrQZ4oyZ/L/7agWzyN7lT9t
6bM6iQVePNBotfZREhcGjnHYzSPd5L/6orzFz9xvIetIvHj0/3Ny7lj8ot62
YXPEkb8d/rlwtE61gLzd5Pobp71J/Bc4pGsnusNlgmIqCxzsY3dm8HTPbWGY
H+Cv1vBuBqT7ojzYZ661itv3pifIT05Sjcj3JnFe4BdT+z4bJUr284D+9rwH
zSWvslAeeLzxobW9GbLP5189yrwHa0f1Tu/TSpVXmafgL3T46F2yT+bf9iCL
dovLNf5guVYDeV3czc65FrVUPpV5g4dfTjq5nezDAfklcjEv778k8W7gm0VU
rB+okP0twMHOqRcd6xZFlbPAwZ4tQw+ZXFJLRA72bFn/7I/nnjDk27RfXHJx
rhGwA+jJf71O/vz5HBY46En4tS6j/7ho5JAfD1ujefLXm7B+/Q+tzBz6KRXj
rcDvjZjla3aS7PsCPeA3m22Vv2HmLtJOzqZNsLaZQ/Z9AX+VvUVHQ5Ts74L2
0NRm7tjrTjGlX5TXbvV++Uhnsp8KuGnd6kGTLMj+LsgP7X8DTvvrwJ60PPCe
5Gl/IHCwwx/hbU7udU8wXZC/FpFs36uacGiHS3a//CJjZYDt5HrCUG97PbI/
DbhHaFmErGuVQL1A/Z7YWG+/r9AX9dtO3m+pU1xL2VmZl/ArMV/37h/KbqK8
KmdmfejAUgH5igshy5mQGoF6f3LD92rvPmT/DORzvIiO6mIDss8HeLhy5tnK
ErIPB8bP5NjrkXf0yX4D4Ot3eq7J/tkkID8zomiKggvZ7wG8TnzQMnlLsq8j
KkXlQ2dnX97oa1//7PpJ9gMAX1Iq9at4QaOA/N0VGq/HR5N9C/Ad0Y6e82vq
4BaqXjR5QjnbD77xaxKQF3d/0id3YRs1bmjyCoP3HeQNJvFfSDcxp8wwaU2r
ADfa6CpivJPEf4FD/71vtfGc2R5R5E3Rz1OaYkmcFziMD9FDm4f5ipewwKH9
vFys8nnrpSQW8nlefJqi/zYSzwUOeu6fm2c536sa5UFPkIT1PJ9zOagf+oVG
zFW7ktHRKA/9YufY/ooqZlHIoT9WC5mvyuv67oAe7Ed6iiV9dobh95fehwCc
juODfsjPzlvKSUsnxmJ/CbJ5WGfaKiRgN9BvstXE5vqvJ6iH1g/ywEEeOPT3
eaeDuH6WJqi/Te3a7s/FZF8K8JJNW9e4p9ZR/UiTN+XY/n0FCxsFeMuXG6O3
rWkQ6C9gN/+sYMMbE6LRPmAHrW9j60yuJCEHP+fAh1a3Gqcp84DvaPs0XDaK
+IFx/uOv/O22A/EnAz9RMcv0KI/4paFc4Pd+mZ6tdyk1iQEOfqfospzMW3ol
yCE/LqY/2zu9RXlQXtATdEgh+EViDgMc9Ax2n6b13acaeb2U7QCttcSfDxz0
t0oNv/GMkcH8g/4VP/vVF7gUMsBBv36gVItEQgNyac/FCw+VSVL6ZQXOLQKn
41nQDoFfeyQ/Vjc/CDn4D2fzOrMztoQj70k/HeeCcR74ikLenNNphIOeQUtk
hs7NIRzy0zqatczMJfkE+ySUNJ91ehGN6UI+/9QEm58uDkIO8i1OX1fJbQvH
+u37ImdWlRY5twj8ZV3D8ek3if8fx0m9xTZSDsTPD/W48kNlriWPxC+ATxJh
Zz1UIHEQ4KM9RnhPyyPxC2yfuo+bnTni/6fmD2hPkAe7mTi5DQ3NCUKO9dh/
5MLbbuHYDoHvNH4csyQ0CjnYbdPCVOfrwbHIQX9104rEjRuJ3XrKD+iZZXH+
5PawKIYaD9FfDZz2hwOHfPqnTf5Z+CoaOejXmtMxxz49iaHGQ15Ov69aNhlB
yI/W3TfU/kr888Dv//Dyu7eS+J8h/125mJn3lsQdgGfKGFUbBZO4A/DrX09+
+CeBxB2Aw7p4x8fj9oWnCa8TVrX6NZnEHaBcojLCb07YEj858Mf25mnHjdoF
5KVHbnn64ivxYwM/qRk+doAC8YfjeBXw1GDa2UYB/szgwNOtc0hcA+Z1MC5d
2VXkXP/4IgMcyuXN6pya7J+E/RTk7bwmvV8+JxV5Tpzb1sEbyX4P7NdTXGb/
WEz25wAH/dK/Od9BD8QxP3QcCjgdtwL+4cOtZlU5cm4O+KDzis2Ji8i5P+C4
H6NaynXwXlJe3PfCeSXb+JNxCeTnjred1VQWhBzk7Y5MC5Ht6i+gZx+7Xsd6
CTmnBvKpFi0WBSlk/w/w2CeNs87NJ/uIQM8sRUvfdQXpKA+cjgMCPyJvrX/2
Adn/AONhk+ZvxbrMKqpfyPJGF1dO/L2MxMeBq4zbYdd5vYbKpzJvA7PMxvUM
ie8Dr/Lt/XxNAom7AYf6vffLLGV2oAHmX19GIfy6ITlXBVzLSVf41LpUSr8o
b7T2rZazIT8FuGGKdqdLfQmVrihvUtidmtwxZP8AruM2DGwI3V4skK58SPvm
wD9Jgv2CP/60MbE7dU5fIO2f2pcCdtu1ReRR75YK1A92KPz58/nVFfUC9rRZ
4F2U315N5VOZd8rm3n01/xqq/8rymr0jBvqHk30XwC8c8rEeOqKW+u7Iov2n
eg5QvlekgVzmcOCdd+311HdNFvt16vzpt9bllWO5Wj6GdRy40crQ3ykrHd15
wR0tVL9W5nk++Ef97m8hge8a6G8aqTv08uMm/L5DP8ofb7z+1bcc7EdjI0Zb
77mXJtCuQurWuOw90yhQXtDT8mDm2YgFicy4f/Wwc2vs+924Qfw5wI/33ip1
ahnxDwCXeHrB1DGbnC+z/Vc/Z7wzzvSqK/GHjP23PXBj7S8Kmyh0u6eOLz+r
9KfDpG7nv0C+epRpyMlu59FAPrN8lUemG1l3g7yRTdz68m7nyyCfjibTt8pn
Ez8J8MkxwYPnXiX+kH9/lTnxPOfrrx8SPxXwvQPCf+rvqhfIP55jMp5sXJlY
zkJ+gO+ImKiXq5fKgjys1yr9Gz1H6CSiPPB1S83VNh6DfeDK3IEJ4iNvaxB/
GuiB9V1lrh5P7XAY6gE+ZlRrbymZQNQD+uNkzKrP3MxBDvJvVv4Y9IIXjRzy
X2Rsty7jXhP6qwXOYfH51C8HAux1yf2QwGm/Ddgf0tU3Xzw4th/h9L4v4AL7
vvh2APnMsiUd/r0C0Q7A1z3vq1CvRORpPSBPc0iXLi/w/94vrYznICzdeXcM
5hlgfR14/WP2yZHEDwPpLukTejeo27lF0FOj8d0porSWOueizDmeTDJze/BH
oN91xvnFDPhN/DmgP0vfbcDUTUUC7dy9cXH95LAagXSNhcYa9+5L/EhQj2DP
PsMkXswqvIj1C3bT23iZWZ1xEceTslx75RkmxK8OXKS31cX5+cR/Dhz3sT8r
5gyciZ3BnpI/a0RqPydhe3OU9R3XSyaPHfZRaly70P/2Rf7Lh96cPCvmeAEr
9M0iSkpGBXn7jm0mIqLd7mvl8wFLjz9d6k3uXwV+vl3x2PtTBezmxco7Qv7n
HwQ7aAcHqhwvYcV2n3g/Q0kMuffAF4/kvMi9tcADjwdpnlTNZu0S9i6LFh6C
fG/nhzFvzn9nrw9elb9OUg+53yB2w9xe3c7L83lM75SyR0fIvbLAsz63Wzz3
+87u6Cu8V1eY8DXR91crSeWx/apW7z8lR8oL44D3ikUhoiWkHqE/bmOvXcor
JlxtULhPh3QdW6XnHnprby5yPCf1WG36NlvCl2veyvc7W8KuyR63LrtNFNOF
+h2ZMkJtWHkQA+323AmDYadfE789tNvgvNAX4d3Ox4G8qPcC1UZ14s8HecjP
gS+/Pta7iGN7Hh0865RpB/EjgXy6wvxr44ZUC4yroMd6ZHL9mN0ayONvbB2k
ZU3iEaDH8UUvFVVfEk+Bdnv506Hn6gOyBTjY3+Zq5yMd/XPg5+H2uH6ulZtB
/KXAP+YO6/t+LfGvzvl3ncIFbXb1sVpM/E7AK9mVEuWuAn4nLtn6k1bsboH4
HTerptDXfoiAv5dLX7lul3kZ8feC/qrTt0VeDCF+V+C7hd8s2nyF+F3f/bu+
4x4lqfjN7038usBfOeuubI+pFyjXVcUgt2FLiJ8W5KFe6sbEiahYmCDfMalg
zt5S4q8D3qviuJZLRp1AuaCdL8qv2Xh9FsYN8XvR92S1RucN9L/hd+HyhbUL
XBn01wmctwJO+yEhP6BfdqJcwL7J0chB/5nLh0Y/8QxjwQ6Qz5u7IwP0r+cg
Bz2bl8U36ZvHoh6Qf1Q99OAd/ySUB/2bq1PH5TJRyCH/edteBu3YT9LtKf8g
r7FUoySm4wlykKf51nCrmevXEf858M8TvtlElxH/P6T72eNPv17RJC4M/PCp
nJuZQ4l/HjiMJy4TTxvaVUuj/qr3Xred9xD/PHDodxON3gbXyZZgefG8lY3s
pgFHqpGfcRs8Q2Un8beDHkh3Fe/9SktjMi7R8wQYH2gO8vT8AeR7mldAvU+K
nB+R703mh1C/u29F/DERJfXlXtH88HECiTuAPJ0f4HS60J6hvPI5WyfnTFfG
fvRQZqbF/kaBuDzaU6vBU3nvB4zjc1vz1HKnJIjScX/uoMNCXtQsst8A7AP+
hMr0KcF39oUzYB/gY3TGleq1k+8IrGsq+7M5tisTUR74unkrj7R4hqM8rLN4
NTp5Hb/LUR74DlMxTxGnVJzPnBFpf3/4+A9Ga19ha7mwCg/4jkFuS9T08plH
6Ytj9/SWQ24r9PSu8e1CRiGkwl9HXgy5vvNib8nDxA8D/Kha3C2xu8QPA3zN
rrOjm+prmVPTX182nJaM+YF1q6Rz+ApVScIdi/0OrntYyHzUzdg+XZjo8Vy/
z21McyGz+t2e4gNXRZCbW3aaq98rZUR+PQpsUK5D++C62OSfSs0EDR7wpe7p
rZki5PwX8NwvFSH7/yH+ELCnjITr5bJu57lAfuMCZ7eGUWQ9DvK3dMvuR3c7
LwbtE+r9zdKN35sj4f40ZazfuBMiNs+/5yCHenRWsjBf9aoJ7QN69HW+FQp1
kPkq6LHZvdPFXtIPOegx8l2+b8V0wr3PvJ9rPjWDmTW0bPIkET205+GK0B+d
3pnMlswdzRYHdZAfm/Fk/dt3WcwQxd6uVyS1kH/7qjG1g0fuXwLe955l1u53
xD8GPGlR6xWvj1lMVmlWpLEo4RKVmzd8t/jOnHfu/eKQuDryAaGPF5w89IOx
yhv3MK2XCg/GB/ATasxc+LHwdxADHPxmZ3xu3R6/K5yhvgu8t6Kvwj1+BSEH
PXkbkjTFdoaj/SWkpz+784f4N6jvBfqFgIO/yLLD5jnvTRRyqK9Hm/78+JST
hOlCPjdXOP8eFBmFHPSs/GL13Dg8FvNze+vdVdfPNQq0qwF/6j32iJJzXtAO
7byLXQc7En8syLtMrBbRcawXaOfQXwb+OWYf5SaO7dx4ivr21XeIXwjk51x+
0O7b7dwftjfKbwY8OOT9u5NPiN8S9NPxJtBPc5Cn41wgT3PquyDAe9JPy1Pf
NeTgv4LvWug5v+B/fpN9VvBdG3336sbsVrKvifYPAKfX76CH/t5R/nMBPf+9
X0VUYP8J2CEpVH9vvhA5/wVcKXgGo/ZPDbUPX5kTmfr+sKUv8Q+D3ZiJHssS
OeK3BLtp+Nm+qO1+/xVfnh3KFZgJk/NoIH/10OXxK7vfrwX61SXX3jcn/m3U
vzWP/dLtvBjk03uUtMyLb7XUuQZlbOcFTq9ejLtrgPr/mPX6odPtHBnoj86T
spkiTM6L4feX384zM/1ywpuCyPeXz9ed84kbWk/aG7TP3ecaEmfXBZFxni8/
6aX7ELc94dhf3J9HKe7nUpnefnmdh0QNeTS/99sixPXQMOSbRva+O1sonZlq
/XCdjfgQ5D/33vxpyBJ/O/DepWOMKzuJ3xX4kHw9mwDhdGZInvOAfBFBPmbb
+IfJB/WRj7r3cOta8wzGXFLOJFqMjP85YSL5Dw+kMLWDDDerdNUjzVcHJKV4
TjFCbnR8968DXfkMHFPlniVO8lmg2Pva5v0kjgC86dXOWCEmmdnzSuvz0q52
RfMPEiIbEt4ZIx+7onhkdpeeezKXd449SPS8vec+5/kkcm8bzOvge+qf6l4u
loJxeW6n69S15b9IXB44jPOLAlL7BW3A+D5+xyuNTHXLZuD+B26rcJjrbSeB
fQ7cgsjZq0dMIfscUP+6xojMd2S/BHwvJnz2DxedSuLUwJP+4e7XK5M4NfBz
AyOSVhSQODV8p9b+ifLzTyLn4IA7y71wHX6bxM2Bn9njXjnRmcTNgU+x+pOg
9p7Eu/G7xrfDpFbV6EZLGZQH/sbEV7zoOPG3gD3Pf/1eFCNB/LTo/z/M3msT
Jxz0vF7yoj6q+Qnh/P51b6Go2+1exC8H/dH5/eHW6k++KP/D0TpxwsUMtpdm
hNxRr1GYH4PGnXE3kjNZ67l5L09IGSJfbf7od+NRcq8j8H0vRgfd+UTuhwR+
+pdSyKvUTNb4UNPEdSKEV+UoFJioZLMnM8v09/cmfrOWLfN3u9vWM/M1w1ZZ
38rFfBZZDJ6r2ybKsxcZNbTGMRD5mj2vF1kvSGdTL/0akdRBzhfcNPv8xe98
BjukoW3Bu8MknzZfB4yaaUXumQT7wPcxLvv2+tomYh86LgmcjucCp+O5lP+Z
98xYLc9B9Byu+1Trk67M/0bi78Bh3M7eObRR9CThDYEHlnpHkfg+8N2qDyOr
npH4PvCvs+Mv600h8Xpon60eY5+mzCVxc+BTohvbG31JnB24nL1N9ICkJjq+
L3AeEDjY7bJPk0zw62ic70E7v9l0sM06K4eh/DD0/gr8XvTtHbZDt2s+Cdyt
rvxrtZ3AfgNu0L5jjyeatAuU947jXNUT6yUE+in0L+3hnRYPLlbjPBb4xN//
LJcYUYL5NzTXN7zn2ELvZ+AaxW9bH1Yi+xZw/FRb+l49iexzcD0pc11cuhrb
S8UxK2mLD8YczXW/1VWd7zDhgiKc6q3FCIdzGTQHf9rmsgcbZ3XT88pjwGKZ
Q6ME+IXzj1U8OEE94H97rXczIq2bfNTHEu+JvQwF+N2wjXr6PCPuJucuoSRO
OPgJaQ7nOOxKJEK8ZAh3WJpx0E5iiADf8Hql64MDwzhJpaM7PnTTA/5JmsN5
Iquzz3JGdNOzpVd0WvQRQb7M78ails4RXHVC6RQTWcKPxDkkrRbXE+BnxIuO
ih3Q53KNS/vXSxAO/rHSPR5XnLtxOO/j5uvontQt3bnGNTtyDwvyfXk6Hgs7
Dbg9Vu4a57vZ2W6qp1rqVCMBrnnvVP85nqO43ACxKTb9CId3cjU0zXe81iAc
2ifN4Z1cWg/eV1Cx746dPOG2n24PDJGW42j+Yd/ywNQWZW7WuMm6MlKEwzkX
u0TpR5q9CQf/0qjtCWPNuuUH+jXN4d1brc/aJ+YpEB465traozJiHM2/nn1/
xalOlruXrardt5vdBN755XNYr707qlEeIkc4nAPaqdJ644ca4TAfCD+sFTG+
G4f3W0e0ZkWcUe1mB/74c97OaG5pt3a11v2i429JLY7mT+e43nfYr8Mpe82/
+rsX4eB/K5hTaujRjcN5N+eOj1/OdtPzWdXnd+UhQX5z6L1LzzsGcrrX5o04
oEI4vPc6cPbLlBj1bv2U/06rhVTxCMduHOZRKxY3NcR1s5uM8Vy1CgkVjuZ3
TDJP72rtyxXWVWYvk+xmT/75OzpdGG8Pni0+/Kwv4TBPC4288lurG4f3W08k
/BBa0S3d7Q/LW8p7qXM09y6bv0mzTZN7oZh7QrxbuvB+K3yfYB3zYtK3xssp
ZdT7PsrcemZlvONh8i4qrJ/eOj4ITSsh75wC33Ob0UoWasR3f2BdNXKMarPT
MRmuI1Rp6OQ56sjp95KAf39+m7txk7wHCvp/i5y4sPp1NfU+kTJnubzv2McV
OXifKsxTomVTpj5i8pgXHZXt4Y9+I6fvwQb9znPNVvU18WOW2+v65ayvQk7L
Qz6fjBq1+Fmvp/geKMYD+fJgH+DrLkf06eWuzB16Ffd0Qwzh9PutwL85p1Ro
bVbHd6IxHsX3Yzj3zjScdK6EcCqfuC+AL/+P5MlonapfhFPyMC8A+X1lciVj
9+UQTt0bD/bc6Tcw+MY/yXjvDeTfPOVoX3e383ivOMiPmLt8TOEbcc46PvKd
4gZR5PR7l6DnFWvfj0lNRT1QL31Wbnui+JO8a4n19Z/v3ylzSmVLRcNGBVL3
9igLvHMH+WnRM/oc/lWDOzZj5MZWnhTxp/LryzHN+yMXKI8cxrGJC5jImxpK
yOl3GzGumxgos3sFebcR8jM0VkTqc3IY9Q6gMud89H5Zx1HyPiPoGXGU07qh
/B05tIddR3b3VnoZhvqBbzd3MXYzDUQO8zvabj1x0FObVO3Arifv/UE7ybji
vkqfIfqBRxzsxY7YReRB//HRWprXjxD92N6o9wTBnj9CTr/PvGuA4wb6IX4W
J/a6ZcJN3C8XHTqVcJhP9ivYv/XHcKIH5l1rL5+KXNTRBzn9biC0w41Lh84d
W95EvV+mzLXr2i8fnkHed4N6OSYRtejOuhLkYLerG5ZpXl0TjeMY2EHXeezx
sXfIe23AmT/7fL5PC0QO9vn+47Dp5wjyzhpwt7tv90quIO+4oX99yVcxjeOx
WC9QriY15vAB5he738DEv89LNbQD/c4a5Mf49RbR3pvJO2vAp43zdfGMwntE
MT9VOw4a10xMRHngxVV3PG+vJ++yQT4vbapwDF+WhfLAPbRPTtidmIQc/KNB
yy1qRs9T5kmuGKvfmEA4/T4a8I5f00oD58vgOyywb9Fi38fXBxrIe2TAJV7Y
no7JJu+XwX5G3f1/pFVnkPfOgO91jrSLFvrO/J1ul5692jobO3OQg/wGL+OZ
g+/DPtOByKUf3zDIWNeB3xHghXkdF0eXkXfEQL/+mphtF+LLmL/to8zTu7Xw
ieqRQkpelKe78OOR9RvVedQ4IPDeB83/Lq8mL1GpYJGWejC+IwD83vafgZoj
/Biqv/OW6bdLn5rgxyiIyr2rM2/C8wT4DhdfHvbpO/WK8917MRz1A18VkTbE
RSkY8wk8+sPXOcED/JDj+TzqXSqww6lhttMYH1He3/UuylNJyGi8xjYxy5Nn
yRTbEHn6PSzI/9D1lUdTBwRT9avJK19dwr1JiKLajyZv3TbXyrTT5F0n0HNJ
u+qQsS/hUC7lO8McnxTEoh7gBU0zVjulRTFUf+QZhhX8Lr9F3m8Crqa0cZF6
EpEHPY6DjwTvbkyi2qEmT8JEnPUpjqXaoSbP31dD2ieNvCcFel7bj9aq2ZfF
XNe9OlvzuRru14b1mrS/eYvCcHIOgH7PCHitcfL55EADtDPwH9qfp4ueNuE9
P+124KO9OnUugbzTAdxMt8hs/Hfy3hDUo+2ob2NYWT98VwjP61PvDeE5ez6H
doXnJMxMhku4pTJM2I1h9stEMT/0+0fYzvnfNUvuo5DssGrcvwbjFb4vQ63j
/s6/MrbnjP43Z0a/rCGcksfz7nz5SQGBY8Q+VhP+n+VS5ok4xrYESwdT/UiW
V1Ez3GXslXBmntnT0txu+aff/QE7XGFMlHKfiPNUXgX7+Awn8rDOOuOzyEZU
mXDwY9BcrTSZ8ZEcwn2q9/d/IEU4fMezO18rKksSDt9x6x2LDp1RJBz8DDQ/
nbrg5/3ehtzyK2kuFyUIh+/gvvPnZz9SJRzWmzT3Xfp6vI2MFif7bI/+AznC
YX6YmyEz7LM04TA/XD2/3C5KhXDwn9Dcb5No1qpeelyzWrzPcAXCr85ZnOzb
YSLARR0KMpcdHsW98dLbUyVGOO6z5c//8Xwq7MOZPvqXpkUt4dR6Adsb9Z4F
3c7/boeavLfSaxQNin1RHsdnvry3/c35o7fWE85P94javPeS/Un+wT9D89pv
CzriZcQ4c/XsZl4fwmF9MXx19Nhr3eod5vOtEZVbq/t2qxf+Oprmbxsv5l/9
3/3if+Vflmd1cGj6dd1z7PK0w28X6hB5eb24jH61ohzNN+lbRChPXI52wHP8
e9afbEvIY/+2sygv8Ytsyh2dQLY8RjqzbATRA+NqsM3XO7sNBeoXxx+sR+rd
Ikh36tNU7ZhSDZwP4H0AlnpmHS3knSCcz6QefazgH05992V5536HNJptSWRq
m/ePa+zW32Gcj9/xrVH5tTymS9/bTK/v4J5Pet2021PzwpA78hy9/hqw71r6
7CFKHL3++vveV7Ie/PueWLL++vveYLL+wvt4qfUX1f45XuQopaz7vnh/I72e
Ao7rd+qdDnqdBfL0+gjkaQ7lotd9wOl1Geih8wnlpddfH55NXZu3voSl/Q+T
JhQt3WdE9o0C9724xa1GsRrjSD77zrkU3TBmfSfbHFrWUEvOW1yVNY14Rt5P
AR6YG79f4moyC35O2p8D+af9DKCH9kuAPO1n8FqR0HDu0G+W9ucIP6sX+vjp
F0v7T7beOyWswXMn50hkOF3rwFzG44nmsmBJks/dn6QNM4YeYd50nko8MK2K
pf1LUC/0ugzsT69D/es+mzmPk+JovwToof0Y+B4N5Sf5+35R4g9xCa3ZeFpG
laPXxe7bvy97/k6No9eJcG8kcHZe1LPL10046+SlIyomEw7fHbgHkl7fwX4X
ej0I8j2sHzl6vQn3W9LrX+D0ehn097Ce5ej1L+ih1+9QX7Q/BOxDr9+B0/4B
0EP7c0Ce9g+APO1XydV61DBziTpH+10h/8B/fqrtqzxBhvv73nXi3wAO7WeS
d1jpA1fyTgTtp4V2SI8noAfSlbhoITfZgbzXQPuTwf60//nve+OJH/jve1mJ
H9tgXFyWkgEZx+h3fGh/OOih/bdSq7YWSUQTTr/vQPtvYZyh59VgH/p7CvL0
fBvk6e8scPie+nlV+OhGafB+ZL79pjtWCjl9nzzt3wBO+zFgfKDXHcDp9YXp
2z5OG2pqWHo90vh2l37Ts2qWXndAeXH9teWNsKKDOO/l1oPnh+4iHNZTkC69
vvs7n2R997f9yXptk831pc31RE+6+7jFnmwS83vPop+W/auRt6i8Mqzz2MLc
kfnuZuFYjfp5vabuEJN0YLbvEpn2slu6iY/uLjkv7MecOvv5hJQS0YPfx/v/
LBLupoe+B572k1D9Hf0Mf7cfMk/7u36JHwM47VcB/bQ/ATjtr4B+R/s3qPEQ
/Rh/tyviL4L6ouelR87sHSPs1Y1T7YT251DzFuQ8+6krow2bWNq/RI1LAnpo
PxLMn+l5GnB63kWt9wXmUdAehm3UlFS9aoD32NN+rb/7O/Gn/W1/4j+E8Yr2
E+J7NP/tD0T+odaMuxlXhvppvyXIg37f24YP3sa2Yzuh/WkGltJLE5YSTt+r
T/tj/x5PNHnxBybsGlXiy+aG5vzpI0f60T+WtpNmtixnZPt9UT9cUYj8fkyf
YVsGpLIGzxzvHCx1xPXU1ICq2Q1d66mrA3Ybtw/r1n+1+zgsGmpL2Yf4k89I
fl/sG0c4fY897Uel5vk8+nsH+fn6UqY/76AJ79qeK9mZnBpH+8ceNE8tq5NU
RQ77B9Rqz6yaNpi0H/o+cNrvB3am/Yd/txMBPx5H+/1Avgc/IUf7/aj5Evob
/x5PiP/87/ZD/PDX7zR4cbKqPNoO7ffuar4ZQtaV0K6Eda5cWdttXQzyIlaq
lkIDlVAP+J2iR+qJRjBSPPr7mDf2/MM2R7KOgPlSifaG6L3P5Dl63Sp3wylo
tJYSR+ufOP24/1CHepb2Y2QrH763tnQFrutn2B8cY9c/kI0siPzZbEfayd/3
SGiS+Hj84Os8Dxm0L8yL5uq1y/Wva6DuPVPmiuV/hertIfeUgp5xNclrx7qQ
e0qhvBklQRWrHZKxX+E8Z6as30GD89h/QF71lvW++rvk3lGQT3Q/c+XWO3KP
KORTarlI0Kxkcj8k8P13DKTPd7tHFPKfmHt8osGAQJw34P7lloZihdfk3k7Q
o6Olc7XYjtyfCXqO68851C8mjLoHUpmTsIhwGbub3IcJetQeFC6dJfIdOYz/
Zn1HSNvdI/dw0uM8cJB3aVR6d0knEPXA92Kr5P7iwoGEg56CRzcOth0mekDe
KsljUagHfY5Ambvpx51d0+2+R7CPVPLg5F3nDbB/Qr1scH1v/OoC+c6BnocZ
yrnD48i9f2CHluVtFfOeV+P3GM+X9J1k6reshLoHT5mz8K6dsjeL3PsHdpAx
27rn2UJy7x+UVynlGjP0HLnfD8r7I+2xy+dHYSgPfM3yGnuRBeSeQNQ/PDo2
7UAs2g3vOXC19E8Y/gv1Q7ru6mWSRvrE/niPhX7j4JisJpQHex752Gew1nly
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
I5X4IA==
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1:eJwtl3mUl2UVx5/5be87v2ERFCRhYNg8HisJs0VTFmFmRFmHZXCDYZyUFJjC
RmKtjqg1AxRHItSSkgABQWBwS6BEIxRLXAIj83giz6mOqCAILkCfL9/nj/v7
3ve+97nPfe57n3vvr2d9Y82MTAhhZkkIWTDh50bwAM+vJCEshf91GsKd0D5k
M8GxuRC2Ix8PNvG8Evm14EuFEKqRXc66ttj5MTo/h/ojO4ZOFfgX3i1B9hv0
D0LPInulNIT26P8UeTM0Atmz4HXgcGgn/EhwB9QZve3gn5C9AD0P/QQ7pVoP
HoAe4/3L2FwPdkK+CdzI8yD2vr0YQgdkc7UOmpcP4TQBmAuORm8bsjHgG4n9
eST6qX3/Ab4FdYF/G+yJzZvQXQfuyln+XM4+aN/9Uf+PyPahUwGNgl8TeZ3r
XfYZh2wr8akBx+PHJOQTwGrWrlDcwI/x8VLkl0FX8+4DngeDddAdyCaBl7Pn
OL0Hj7LmAvAjMMe7bvBZ8HH2uxmdzeDpnHVOgb151wO+F3gc273R6QP15bkC
eR9wL2sWIvsdNj9B50r4q4J54WDoNOdqQLcncT6JfACyQdC3o5/yd3fi3FiJ
nXZZ2/xRtHN1sN2n0LkV3JnYjmzo3XM8/wDclXiv78LvgH8eug3+SXB26jye
Cw4GZyMfCN7F3qew1ZR37iqHJ4C9sHNHxt+rDL/L4O9PffYniH938HVkr0EH
dG7WHELeF3yGnL+E90sTx6kOm1Og5ay/HXw6sX/y8xfIXkice8vgL2TdUyWO
7VDstMF2JViGnbYZr5E/Q5CNL1ou2ZzgvbTPVKgcfjrYAPXAVis2K/QN8s4r
5ddibNyp7w6+DO1DNhdfumd9H6dBW5Hfpe9eMK9caEGnPNqU7ScSnzFPzLYn
3jeB/wBq5nlm0fFS3LrlfUd0p86AxzjzGfZ9V/rwmzPOzwx69cHv8pGXrEH3
HZ26nPN3PfwGqJh1Dh9kjwJ63wnO7QWp61YLeANrWpHfmPP9133cCJ6TdU1b
BtXGOqN68zprzuPd31Lzq5Htxc+1OcvXgAOQL8X+VfqO+LEX2gX9N7Vvx1P7
dlOwf5+w5mfgZ+AK5To6D6Z+lvzznO9gi/IcLOEMjfCf5kziT+Rc2ybDv8Xe
81KfW7WuOXWtfiyxjurG5FgPtb/u+vuqh+x7JLX9riryYFrqb5/E7yK5/Fdd
+Toq3wzmhVXQENZMDK45H2Ysq461qBYcmrcf8mdjYh29vwJ6n+fduhfYX5X6
G6iurgb7cZZVWct1Fx/Fn9+mroVrI6/eoH6h+qx6oRo6Iu84jwI/Yq8x8CXy
g/zrQu7WoX8k43o5Cro2b9+uAY9lXNu+CA3j+Qb1GtVb6Hr4SrAqnlfnPppx
b/wKtImzjAbXJrYv26OjH/JndNSXL1ozMu9vMVz1Fd8mg8+oVuBjHoUe4MOp
+6X67Fp016jGQvs5/6uqzWAd7/+FbDbYCl3DBtvAQqnvv+7jKGTDoW9A5TyP
QX4FuJw997D2Ad0tZO+oX4B7eNeC/T3su5B3G5DfDW6ByrGxFeyvvpl1ve2G
rzn4rmCadXwUL+WS6s0RsLJoPX3rEQX32uHgMOS9wVtTY0G9Jp5dfX41a29B
pxVZJ3As8hR+IHwePENMc+A5UIa17QvWUZDHqdexvlp3AGzDuxL4MrAjlIXv
AL6J3vcz7uMTef4qfC24TvkG1rLXlLzrdlOcCzh26B7cOxaDs8B9CO+Df1X1
j+fP0JsGfg/6XHU75o/ugHJpVlyrGeNi9lgMBvC15OxVDA+BY2IeK39GxBxS
zig/lWfK20tZs0K9H/2xcU7QvKDeqh6pvtua+M6tSZzTyu2J8oUzfiHrOqDZ
QLXn38RqS+K8XpU4N09kPEtcH++C7oTqmNaejPVZtVgzxe9Z0wWdDYn7nOKm
3JaNmuDer31Vww6xVzf8r8179lAfVlzPD5Zp5tDMMy7vGlYT76nu6JeC49of
bAe9mFj2CPjnxPp7wEbW3Bsc/6+x19vK39SzycDg+aRr0bFWjdI8MSjOG0Xk
g8iBm8Gpyi32mwG247kJnAReAq1UPFh7ZeIeo9yeHvdtjPOFzqS4XFT0fKk8
GRLnEM0j+kaa506V+jvqnDrvZejvBkvAPkXnk861gHXzoXnQjLxzb1rMuzYu
52d5xUbPQ+MMobmhP3Y2o1BM3WPUazRz625qzqkCO6OzDWwo+l7ru+8vMS98
M/Kq87rzmq+ksxXfmrDVDzuzwPKC63yvWCc0i44Pvuuzguc28Zox9Ky7Pp+1
S8DbsPkg+0wF7+F5AfKFYGnRNbIarE9tQzNgyvNL8Ifhm3l/vub/guvBSNVb
6BD6jdh5B+yYddwu4PmXPLfJeh7rpBgj+1becs1dD6ieYPc/6JxAvgLZMs2E
Gc91Wqs+vijx3PxX9u0L7Swxr3pznXqOenDqvr0Z3JQ6V5Wzqtuajz4stW/K
H/l3bta1QnfpUdVc8Bb1SvVN9n9I/3VKPaurTuq8XYPPrLrYC6yAfpVYXqNZ
uOh6ObjoOnoh8i8H19K/604VrHNM+ZNaR+/Lgvkyl6uzNbWD1kW+I9hPvYq9
Lta3Tp0nyhfliurwQbBtjEml+mkwLxwWXJ/fk33wJPKnNdOpzrDhYemmrv/y
raC+UXRdH1R03ih/WsD/4cOW4P6iOFwUHAvFSjNvfYyV8mJC9F/n0BnWJ/5e
6iP6H3e3Yq+5q2AfEnBl4rhNiPZ1Xu2xiHdz8OG+gs+gs6hvyX/1qwGKuWYw
9cSi/VfMjydeq7yV/5tijipPFB/lTmXMB+WCZkfNofqfMg1aRJyWQMtL/F9H
dV7zTXnRtVu15eHE36sh9f8p1bsn491RD68qurfrf5f+H63jzPcE/39ujrOs
Zuk/8Hx/8P/Yjqw/iPxw3jXt04z/b1ZoBtUsgd03WDM941la/8F/qB4B1iGb
ov6ScXwVZ83ZmoPOk+/BvHK+c/DsLX/k13zsbgbr2eef2J2Z8X/w96DH4TuX
ulYo3z5GZ07q2qX/gFtS3/tW8N6C/VGt2Jr6zqmf52J9Vs3qyXN79noRnXOh
o8Hzg3yTX/J1R4yJYiM7+k6yr7lOdal7wXVJ/7n03+v//rn3Jw==
             "]], 
            Polygon3DBox[CompressedData["
1:eJxF3QW4dVX1NfBz68SlSwlpEJAW/5TSSAhKg1LS3Y2IEoKUIC2CICkhSCiC
IEpIt4KEdImUdMs3fu9cPN/zvOu9a561dpx9dsw5xphzz7rFrmvvMtzpdM7p
dzqj+TtV2jRpX0ybKW32kU6nm7+TpM2R/oJp86Q/V9oC6W+a5S4cyjKZtPx4
p/OH9P+YdnXa79O+PFLrs965Rmod1jVZ2pzp/6rX6Uyf/tzpzzvodPbK+v6R
5abKzhw7qHnmT5w2aVuHdWVa5yttXfZvrM35ddY3Z/7On7H5s/zM6c9q332X
tF/2atn86Zye/w6M8Wi2N322d1LmzztS8y03n36a45Ohzmzpb9Sv7+i7bZz+
Pm1/p8jyPxvUd50ubdp2DOcZKdvnjsUN2dHn0z8r/Xey47/O3y9n+QXSzhmp
7dhezM5aaeukLZO2dNra7Tg5Xt9OWyz9XbL92zL5C9n+8Vn4/9rYGmlfa3PY
Pl88/VWy/Y3S3zBt1fT3zfKXZfn3MvbzQc21/jXbOi7q1f77HgtmfJHM36H9
PsfEXiX2me37Hx174vy9J/bdaf30xx2X9A9Pmyj9RTP/sPQ/yfqOyPxvxT47
9n1pe6d/aa/271vZtxlyPu2ez+7N2CRZ9kjfz3fI+IppX03/m5n3vfS/m7ZS
+munfT/9TR27sfq9u+08ni/L75T1/S7reyf2cbHPz/jXM75o7IViz5LxhTJ+
QewtYs8ae8HY58fePPZTmX9x5q8S+2uDWs7y9sm+LdH2bSXHu1P7f3OWvyVt
v/R/mTlzpf+VtLPT/yz7eEn60+b7fbmdm1O1a885unrGN8nfjf2u6T+eD891
vab9q1e/zzrt3Lgk/T2ygvuzvkmzvqOyf/Ply/899tSx58z4Hd061sZnjX1P
5m+aE26ffL7peC3veD+Qtmf6y43Vsd0gbfn05828h1zvWX6OXp1Tzq1F0r7u
GGaZ7TI+ZcZPGNT1PWjn8m/S3zzLL5ftHZDxVWMvkPlbZf4XY5+YiQ9lG+vG
vnakDsA/bT/2dbGHYv8j9nqx/+S69Fvk7+Kxv+W+k/6jGd8s/b+mP+L7xV7J
/Sj2/7LtQbbXc/3m84XyfaePPX3sn2X8u9n+XLFXbevaNvaf83fj2OunXZP+
37PcGukvlnab45H5a6e/VNrs6T+Qz9ZKf820B/1eaZunf2OWHXVvypwlYl8S
e+us/7mM7+r8jz2e8Rvy9/uxN037S/pv5bOHcii+5zzL/Psy/zsZ+3ba/WN1
8/tV+pPn+M2VuXNn/avEvirzt8n8uzNnxdiXx/44c++IvVzsK2N/Enu2fn2X
1dPmSf+RjG+Y/j3uRVnfr2L/w+8f+7HMPyP2A7HXd6y7dQ46F7/lPMj2js74
VbEvTzsm/c/y2e/TvzLt2cw9LJ9d1uY/kOV/HPvM2KvFfjD2c5lzfew/pT2f
/kkZvzH9v6SdnP5L+ey69K9N+3f6Lzhm6f857cX0j8yca9K/Ou2o9F/LZ3e6
n2X9i2Vfzstn/469dewnsr2PM/5s7M1iL5fx92I/5v4Ye+nY78Z+NPZGsZeK
fXqWfzD2erEfyfIfZPzx2JvEXibj7zhn3Y9ifyP2uZn/YuytYv8r8z+zz67f
fD5/zr+3Yz8S+/sZXzbzX4l9l+vZvST2/2I/HXuL2MvH/jD2M7HPzvILZPlJ
8ptN7FyJvUjsf+XvFrFvzvyxzH0gf3eKvZF7cvpv5LN7PScz76uZP1vOm2cy
9qzzN/3hfPb1dn5ume19kvlPuv84L2PPlO3N4XnjnpL+1VnPbOmflPGX8/3+
EHvW2CfE/nfsL2XOU1n+564jz2P3wNinpk3RLx9irvaM9uw9pF/7Y79+6f6V
/sJpX0ub13U0Vp+dkbnvZf1D43U9uRa/lv5fx2r+fG3uj7O+J9KfIes7Oev7
Wz77v9gXZfkPsvz7+X5PZNvHxd4w4zc7Lhm/MPb7Gb8l9qJDtYxlD876nk5/
lqzvF5n/p7F6fnuOv535N/kdhmod1nVQ5j+Z/kyZf0rmP5PPdo59b+ZPlG3P
kPFZYh/Lt3C/cV7EPjP2m1nfghnfPvatsbfP+BMZ3zL2TfyyLD9/xre2b7G3
y/jtGV/S/S12P+NfzfiOse+MvXPGF272045Djtc+6e/r2Zu2l+Oc8f09q3zn
9F/MvBXSvyLLT5z1zZHPvhH79tg7ZH135e8msTdIu54v06/z5470d8z46Hj5
C7a/U+zrsr65Y5/uXOzW7zhf+21/lf71GZ8n/dPS/2/Grx2r56Xn5uux/xh7
9tgnxn4l9i9j35ffb3P3ytjXxJ4z47+I/VrsO2MvG/t3sT/q1j3avfrS2Ftl
fz7Kd3ouyx8R+3uxD8/83zk/Y7/arfPS+Tlv8yFfyefnZ/nz0l4dKf/Bs++r
aRe0+9Utnv/5vReLfXK2t1vsSfLMOzX936Y9nmWny/gfsr2ft/vbN2N/PfNP
iH2T+33sJXt1P3S/2yD2hZl/UZZ/JctvHfvK2Ie5vmJ/KfblsS+NPV22tW3s
38f+Wr7DGxlfIPZ8Wde6sT+JvUjsb/Zq/KXYc8f+SuylY/8v9qKxF4l9ledj
1vdT9/D0z0ibOvZ3Mu97+W0vjv0afybzL8v21snnM2R8u9grZvnLM/6vofLJ
Lkv/6LR/DpWPd5RnoXuw8y7zF8z8hdr+zB97/tg/y5x33ANi/yrrXyh/34v9
oWvMMXMNO1fTXyjzN439jWz/B7FXif37LD9N7NXy+Xezvz9tz6cNM/6NjO/I
78r4nGk7pb+L45D+PGm7pv8X/l/662f5DbP8L2NPGnuHrOOU9P+YNlPs7TP3
j9m/7/Xr+bVO7N/EvrqNz5J2vdghbcb0d8/4te4fsb8Ue76069K/IW3+9PfM
+J8yfm3smWPvFvu62BtlP5aIvXjaxn6DtP9L/2tpG6Z/Qea/nuOxWeZfnPlr
5rNpM7ZF7GXyfTeJvWTs/WOv3KvnteflJrGX7tX+2p8dYl89qOfpHz3PYi+V
8Q2y/BwZnz3tu+53mT9X+vtm/M+DGl+EPxl7pV4dn9liz5p2Tfp/7tfxdtyv
b9/f8Xbcr4m9VPpLpy2btozPs751XDsZ/17W93z2Z/d8v4dy7U0W++Ys/9WM
H5HxGwb1u1nfvGmrpG2d5VfK3wMzvjr/N/Pnjr1X7Jsy/6exn3d+Zd4G+X13
9oyOvXjG18384zPezfzl8/m6GV8jf78Ye9OML5fxbWKvGvvQ2N+OvW3s1WMf
FnuN2IvGfot/GXud2FvF/mbGD4q9Wq+Ws/y30n4yWn4x/3j5tB+mv0Xmr5j+
j9L/VuZvGXuF2IfE/k7sn/NnYy/nOI3Xdm1/tbTD0/+/fP5mtn9w+mtl/t8y
/zsZO8q5ne8/ie8U+8jYf419S8a/7XqPfaN4yXGJfVzstflXGX9sqGKSI9L/
frd+L7/bZukvlXkj6fftk3Om3U9OTn/9LH9rllkzY8fEvjnr3zXjGzl3nePd
uv84/qdkfINe/f7rZ2wt95T0F097N+NL+m69+r2+m7FfxP5ur/2N/b2009r2
3f/mTX9hvlW2v9lwxTxin3v79f1Oz/jfBrVe6/8g7evpT5rjs0XGf5X+bRnf
Pev7euz9Ym+Y9R3br+/re5+Z8eNijzl/Y58d+8TR2hf7dLxjLL5Mf72sZ+Os
ezxt1LmesV9n/gkZH4+9Quxz+PuxF3Y/yPxNxGf5u1jsRZ3D6d/Ih0p/j8y/
dVDLWX6QtqJ7eItJF4MHpH+4Z3q+2xwZO4M/G3vyzF0569o+698u19cPOvXM
2masfAC+wFNZdq/MvzXf+aCM7eA5nPnfzvgFGT83bbX0V0r7RfovZv4P+I+Z
95vY/439hSz7ceyLYr8Ve1rxauwjsr4D0rZN/39pp2f8hYx/MeOrZn2nxX49
9v6D2q7t/yRtx/R3Gqtn0+FpO6f/adoZmf8S3IX/26vxXfgd2d9/5vM9M76L
+ImPms9/lP4PLJP+q2mHuF7SXk5/9X7Fk+LKJbL8gfl7UtZ3fNr+6T+btlvG
H866psi2Vsz8E/m/aSukv2fGj8rcI9P2GqvPjD1tP/J9/uP7xD4w7RWxVq/W
bzvzZHt39er4OE5zjhdeclbm/ifL7zco3AH+sGTayu13XqJhD4u2uFx8/rXm
o6zYsIqVG0YBQ1mxLeNceQdm0n6/qXr1ezr+p6at3C9fCP43X/OJns+8k/n/
ac+lv0CnMDtY3cKdwvjYPl8YPjBSOCOMC7YGp4PX+czY8tnGMlnXb9PfO99v
77F61v4sbZ+x2gf78n762+V4HJS/Z4tn0g5O//Ze+Rrrpj9Hxl/L359k/hNZ
35S9wgdhe7Onndur7dr+Qmkgh7N79f3gnAsMyl6gfZdz0v9mtn9U1vdIxvdx
fceeyP3bfSrbezhzTuHPZfyrGf9n7NNjn5b2UPpX9gqv+l72a8bMvz72TrG3
jD1L7I3zdyvnspgv/ct7da/9TvpfGq/vfWr7/afP2BSeLxl/NW3K9NeAoWX8
3Yz/0PM49lX897Tv9ss/uTL9y9M2TH+thr+9nPk/4i/wUWO/HfvA2DdlG/tl
3UvHXtjz2e/iWm2fLZht/jvz58mBnKdX8bl4fPXY52f+T7K+5/hqmbd29v/v
WeaA2Huk/SP972T81+m/5vPMfxieF/vB2JNmXX9J29P5n/bX9L/hPtSpfbAv
27b+7u5XaUP80fwdZHvLZHuPZX3LZ32XZe4kvbrWf5z2w3bNH5r5L+TvnNnf
0/lrvVqndf0x/eUyvs5QnZPOTb+T3+vYtP3cE/LZTzP2ZNa/h+dH7CNjPx57
19iLxz7C/SP2LoPCP2GhzsnF0n/UM8t1mfFFMv6Cczxjf4g9uf2NfVanMBJY
ybJZZtuM35Lx3TP/nl7dX9xnvpzvu0zGl874bRnfze8V++exj0tbWmzWL/z1
0LRvpL8hfCrLb5a2UfrX9up62zz9meH5vTofnZczxd7EddepZSz7r2zn2Kzr
mHaNLZ+2rntj2grp38dHSf8H4rjx+ss+OG17sVKvnjeeO7Nl/JmRiknFos+O
VDzE//xD2oljhWfCH6dteNeTaWe4l2Xuovm+l+XzHzlWaRenf0HaIekflvYb
z/he2T6/a9Bwz1y/m/Nhu+WPbNL8gU0y99L8PbBT67TuO3tl+/zuLP9IjuEe
mf/72Pe6n8e+KPZrsZ+KfVbWtx3fN/Ze7j+xz4r9ZOy9Yz+Y+VvFPjP2HZn/
O5hZ1v9M7P0yfknsIc+L2Ps6ljCzzL8l9vaxz8YhxH4q9j6wq/w9gn+Y9nj6
9zf/e2f7nvUf4Dkf+9zYm2X+wbF/wD/mw8KKxazZ/vUZv8/1m8924q/zaeGF
+eySjG0rdsrvNaljIHbJ2N5+3/zdIfafMmcb947Y28S+NvbWfIfY+8F/7WO3
tmN7J6b92W9nPRm7Ov0t+Zvd+i3dA45Kf/+0rTN+dsY3zfiPY+8b+4+xt4Jt
iaEz90bffVB/2Yem3ZT+0d36rr7zMfBLcWX6Z6Q9nP6z/C7rT3su/XP9Nmm/
5E+al2VOzd+T+YTpv+D6T/+2zP0nfqDZD8Z+pB2/H8X+e+zds2+n+Q58e+tM
/9nMPzb9u9LfOcdv9iyDkLsv8x/m7+TzlWP/OPbGWf6+2P+0fudU+jMNCot9
EVaU5S/P+TKS82X/fPZSPnsi69+5re8fmdvln7oHuvfGnqhf+DJ889uxr7dM
5v9f1nNCttfP+MOdwp9Xz/ijsXcfrn2270+n7er7OE+y/duzncNiH5x2c/ov
ioPTPz/tpfRfatfHv9N/LOs7M8udHvuR2Htke//J30tiX5z26mhdT5el/0b6
T2T+xXxEfkfs/Xu1Put+Jfbj7Xnn+TZr5r0Z+5jYf8v8mz3nY/8j804SL6Q9
5H6Q9hPnftqt6U+R73B4+z0fGNR2bO/TtBcsm/09MuN3pr+jZ33sY2LfHXun
2KfG/pnfM/bOrqXYR8W+I/Yu7Xnm+XVFPt8i27o3f2+AB2V/j8nYl7PNL6Z/
ZPq7Z/yi0br2ph6p+5dz3rl/Ttr32/Xl/vLrZt/R4rsz2/W+veeucy32Rr26
Pl2Plt+8V/cA94Lzmo1fgeXhOvAveBB8CEwR1zKe8euy/B/EeOmPwiP5Kmlj
YxWfiOfOaPHRhbGvjN3jhzX7Gtdr2kXd4jBwGfiZz2JPme/8+7buFwcVn9n/
o7O+2wcVv67R4rE7Wjy2nvOxXR8Ht/vLte3+c0C7X1zd7g/uH9va/3Z/Oahd
j9e0+xO85O3sz89HC284vt0v3V92iH2nmLcdT/Hi+zCN2BNnf19q18eesa/I
+D2DavpXtufDTm1/z2jPFzGqWH31FsO6jlxPv0t/C+fLaD1fvjBS98fjunVv
v7nd/3/a7t/ut9s5vqN1vU87Uve7Xr/4hm38jviD2DdmfBI8CDw69nGxpxL7
xJ47bYb0j+V35beYY6z4fJz3nOl/Acbeln/LuRr7ntjXp32UdX2cdpPjm/3a
Smw7qGvtxLS54DNZ7n73o7SvpD+Ra9L+Z/5emf/vLH/hcH1mbDhtWjFe9mfX
jI8M6lo5IvZusT/o17btw/ig+Hn+7oyZ89/Yf8x6787Y3PyOLPOVQd3T3cvn
gZdm/Pb0p8n4YRn/LMvf6XqL/XrGX+zX/YD9WuzX2v3ozRzbZ2J/4LrO8T0u
7UP3una+X512SfrX9WrcvOcyfyTr2b5T14xr539Z322ZO3n6/3G/4a/FnjL2
K7E/df+KPVnslwedCWSq/bXfm+f7n5+/V8R+O+s/KNs6r53fZzmXYn+av8dk
saPT/pf+iRnfp53/h/A9Yx8d+z3P3ti/T9u605kgqHgh27q7V8tbz/ODOv8O
yvx3Y/+4V/PM35XvPVZ4JHwCPgJfxLf2xbc5/741KL4K//qj2GvEXizLPJP5
T6Z9baz+sp9Oeyrtz1nftfm7aMZOFFu059PzaX9J/6/tfjIQl7fx52IvHvvk
2JP7DWO/kDZF+lOm3ZD+vc759G/O/DtcX5l/WuZPk8/+4tyL/X76U6e9HHvJ
2O8NanvW/2zajelP4ppPf+mMfwg/y2f/ib2UOC3ruzj2VbG/EfsXsd/r173z
67E/4B/yoXPsNs3xeLxbz98n23e/qVsx8kQZn7/Fx+LpKdOfvFNami/CZDJ3
0qznY+dn+q97dnomug/ks3979qZNl/5kaf9Kf4nM/2RQepqps64vdEqfckb2
MafVBK0LPQ5+bu7YX2kxMY5utk59ZuzMzJ+xU1oc+grrsK4vdUoz8gU+bbZ3
rvMuK35FfDpcPiPfkcZmlk6t07rP6pXtc/od67V++zhXww8ciy93Cjs4L/MX
7BS2IF6fIe3b6T+U7c07XpjXqmKRTuEbNBrfSn+1Tmk3lkxbr1MxyxIjpWdY
XbzdKe2Mpj9Dp7Q31mFd3+wUdjJBg9KpdVr3hb1an/XSy1wce/1O00a0+Hnf
2Pt0KpaFCZzW4j94wXL5u1zsj4Yrfro54x+mv2yLv8VXxpZr+2u91m+f7fsy
IzXfuHU9kuV/1eIj8aXj5Hg5h5xLX8pna4wUlz+f+CvzL7K+keLzYSq/jr3q
SPH1v4h9T+y1Yj/cLb7s0jaOv381y9/u+DmWWf6UjN/Wqd/kH3yj2Oe39f+9
W+ewc3mKTml0/tsrPm8dv82g+HR8OP4eH09/cIffa6T490PGan9Xjn1/t/jA
+9v4P2OfOVZ6BXw9/QK+Hf+NX8fP01fg6/H9+P03e8XH4+/pLZbN8o/neD6W
tsxYXReuD9ekaxN/jN/Gjy/T/FPx2z6xn+lW/EY/QW/wbOxLPZdi7xT7udjD
uR7ejb1L7JWy/M75+3bs19N2hLWMlO/JB90r/T39vul/nLbHSMWL4sN9038h
69stf9/L2PvuyXzGtCkyPuVQaZrwqfhV/Db+/MKx0kNsF/vpbulh8NH4cHzo
p73Sq+FXV4g9mvEPYu8ee2X3037hXfQzGwzqPuZ+RjNAs3B6+z22HCn9Az0J
/QQ9BP3FZFl+6mzv8NhrDUoTQBsAP1s79hj+BVYTe5VBaQ5oD34aex2+Qezp
Yh/pOo59aP4OYk+Udoj7T7/0PfjddQfFL+PX8f/4/UkzPhr7gNhrZnya2NPE
Ptp1NSi9xjOd0mes6Pmb8TfyZwfXfezD8neSzJ8MpjNS+pIXM75t+k9m/ReN
dSaI+faL/Xy34jLx2XOd0pzQh7yU/vbpP5Xxg51fQ6XpOMi1ke1NBV8ZKT3a
FXBAeHvsdzP/N/yCTukv8N30GPjxU0aKv76AH5Hx40eKL3+04SX0a/QG9Af0
bPQZ9A83tP3xe+HTZ+yXnoNecbNB8ev0Hvhx+gR8Pr6dXgFfj0+np6CHoaeZ
OO3hXDuLZN674uH8/W3bH/qQ34rTOsXX0wPQxNFC0lTg/GkCaOVoAGgF6C3o
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
l4aUZpT+lF6WnpaelB6RPpb+V34RDSUtKY0ibSV9Jj0lfSG9ID0lPSZ9KH0l
HSs9K43r3qOl+12w9elZ6Wfp//Cx9Js0orSi7l/r9er+7F55QrPpkelt6T3p
NelF6TfpOelD6S3pIekv6TFpNmlBaUJpOfG/6w6XfpR+k36P3pp+kj4TZ4lr
xbniMt3/cGVrZu5G48VXO1+dt3v2Su9C/0ffSS9LP0vvSQ9KD2u/7b97/kmj
1WgYaReN7dj2B99GD0pfS19KX07feUm/9Mb0urcMaj79Jj6N/pWelR6XHpS+
E+eL+3207Z/7gPsBTn6ClqFbegL85G690g9enO29MVJ6Qno/ekL6QnrB7fFP
Q5VfeMigcjQn5KFmPavLtxkrfSB94dS9yr+TL/PmSOkR5SjJVbrV7zxeGn/a
RhpH2n96RHolein6ux3wabE/jH3QoPIL/xL7I75y7N36lQsp91G+43C38iX/
PVL6Lflb8v/oIekV5TDJZfow+7XkeOU4yXUact8fr5zK2zP/zqHKtZT/+bf0
h9I/bFD6L/mNH49UvmQ3n98l9kn7YKTyg+SP9PL5zL06Lo6PfN250p+7W/Mt
N2Ov/G/anlMco7HSe4kXxeP0/e+NVf4ZveU0saeFacR+H+4RezTzbhVPpI2k
v2u/9t/3+Omg9Gf0avI75SvOk+Uf5N+NVn7izv1a3noOz/hXupXPKN9ttl4d
V8dXzqlc0zfGKn4bpD9Lr/JzrU8+onxV+TTyZeSvyE/5YKx+X7/zDJm/Y8b/
GvvT2IcO6h5PI0Ib4hrCY+Az/pv+AZn/cr+eb6+bNyjNAi3Cy6OlZZh5ULEF
rc/3x0v/QX9Ah0AP9PeMXzVa+iH6jOf6pa/wmTF84Amx74/90KD4SHztvaOl
N/lHv/Q5nkH0IjQQtv9q2x/8Hr6OXoj+gH7I/cJ9gz4B/4tvvCf2g4PSK9AX
0S/QM+Br8LH0GvQXrzb+hh7jydiv9+t57nn/dOxzuqWfoaP5Qa/yHeQvyI+4
uo3TK9E30W/8rl/5JfJV5MPI+ZP7N5J5S42XHlF+snxdekb+Mb2h/BL5K/SD
9Ir0jvSLNBq0O/aBdoPeSnwnf5F+iiaLNuv1tr+OFf0IjYrfjOZHbgmfzHfA
R583XNoVehV6K/oteiz6rDkGpeWivdpsvOaZf8FwaV+4zm6pI+VWdmYeK23n
jCPFUYsDxAP/G6nzdbrY1w8VX30c/3GsuAccxMLpzzVW3DkOfd70v9itXCRc
On57/rHSBv09bb6x+ty4nCXc+x2Z84nn5VjpY1ccK53wG8OV3yuf+r/DTU/M
H+iVFpIWfNbM3zR/3x+ufPTNxkqDZHu2e3yvNIFbdorjphXEf+OGaVnpW/1l
b90pTeGferW+74+V3hBe/FDsBWK/PSj+3vf1vWkSLuuW/oSv8rNe8Z/414Vi
fzQo/hZfi4/Fh9Lj0PbglumZ8KG4UVwO/hNfS8+DX8bP0p/hx+l78LfmmY9T
xQX5zr77B7G3Hiv9Gb0avhd/LF/asVwpc1ZIf6ax0lbOMlL6Cbof+h/c39G9
4pfxsfBx/PG6o6UtnWmkNEz4Zfj5gum/Myj+1vngvICn02dY93ZZ5stjpZGl
laWlp6fcday02B8Plz6eXl5fmEMTL79K/pQ8Kvkt8Ff46kTwjm7lv8jPkqcl
vwQGC5uF0cJmP8dI5WjBTuHp9DxylOVCn9Qvbf9KGVtvvHKS4e7wd7nW8smm
bOuin4bhwpZhzLBdGDMsFiYLe5YjAXuCQcmthBHDgu2zfbcd24NRfrtbmCcs
EiYJC4WJwqZh1LBSGCXsGIYMu6QHwN/j60/pFQcqVxkmD5tfb6zyAN8ZrvoC
3017b7j09auNlYZ2i05dA64F+ftvDZe+nIab/vTQTmlf5U/QW5hvOfpaOQ2H
dUqjKtfBdef6o2+mkVXfwLbp72nc1xir+4ptqA/gnHPuuYbVQ1jfeTJc+2zf
r+iVvcFY6cnts31/c7jqQXw6qO/je9Gnr+k6HK5t2Jb6EeaqD6FGw2W9Gl9r
rOo1XDooLBwmPvF46Tfo4+gx6DNch65HmjvajwfFZOn/cKzyM3DIuBUcC26Z
HpV2Re6EfAga6F93SvNPG42fPqdTNRHkAsjJoCWlKZVD4TpwPfywUzkUp6Xd
3SlOGjcNs4Jd/btT3B1OC5eF08J14cBwn893ihtT8wF3hkOjPcbJ/LphcLAe
HAyuDGeGm8HRnedeP1Tc3awNX1N/QL72ofl7Yac4MdzYAWN1PNR/2HeszhPn
Cw0r7TROGzeOI8d1y3GnjaaRlquHE8d147xx5fShxs3D78sxx2U+06lccvnv
8tflk8tHx5F7Vnpmwkbln+P78f7yxXG4uFscLm6XJsD14TfwW8jX+HS46p/Q
kPvd/H40RDTqR4xVbQA5mHIxfUff1TLyO2jqaalopmjt6Y/YPqdvp+/1+/qd
6cnleMu1lnMt9xunjSfEF+K65WDL3ZbDLTcb54grvKQdb5zghNz1TmGZOEW8
I/4R14hDPLld/7hFnCruEweKa73SeT9UHJ/fF8eKa4TBwmJhyLBkGCgsdLqG
t8JD1Z/AAeIacY64QXpS+lH6W/olOiF6Ic88GjV4Lf6YzheeSt9E30PPQ5+0
21g9393z3fvp1d1P3FfkD9E/0UPRM9E30bPSp9Kv0lfxV//aKa09PTEMGZb8
Yqe4ahwv7hUHi/vFgeLSceq4UTnychXkLMidV18CH4oXlZ+Pk8Rd4jBxlThM
WBXMCrep5oDaA3L65fZ/joHTP9BW4OxpF2gYcPk4Y9woDA+WB9OGbcP8YH8w
P9gfjQQtBs0BLQZNBi0CjA/WR7NBSwGj3aNh7rB4nDpuGmYOO4cR7tecOVgh
DHbJFjOL/SdgeqOFAcL61ORRmwf+Cg+VTyY+EietGPsng3IQb2vxqRhsLPZn
IxWbicHEumJesdlMvaptIidtet+lX/rhOd035YeNVw7Xu2Nly6mRWyOeFD/+
eFBxoHhwM1xqt7Q3Q7Du9Lvd0lZ9xkfoVowoNhYjix3lBMkNGmr+ea9b2igO
rpwb9aDgiXDFFTK+dr/GzVs69my2MVI5RTM6t/plz57+qhnfsl/asZk8y8er
nolzA66pXgFODZeF08K14bRwSzgmXBcODReHk8Ot4eRw7Th3XB0OEVeIM8Qt
4ghxbzg43OF6/dK6TZrtLzteNQvULlAzQe0EManaOWrsiFW3gCeLddP/ZuZ/
v1/4KRx1lfGqwUBzoCaLmgu+l+83xt/vFgYgl0tOH2wABiCWFlPDBrbq1+/j
d1pZ/k2/8Fi4rHpb8r9GRkrjNlX6493StvlMPpiaVGJpMbBY+IB+cV9y0Pbv
V8wt9lbzR+0fnABuAIYBy5AjKrcf5gR7gs/j13DmuPOft/Mbp4BbgNnD7vHZ
sH4YBCxCDSS1kNQEUusHB4oLxdfN1Pw53CLODjeAI8CFi9nF7jhX3CsOb4Y2
bv04B9wDTgI3oYaQ2B8GgMvFaeA2YF6wLxwxrgRngjvGmeO2cdy4dPoFOfR4
9ksGxfHj+uW0zTIoPAY+w5brJsd/7dHKOZBb93zDa9RsULsBpgALcc3DGtbv
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
Jj06PTz+z7s2YLJ8UBgorJbGmJaWppb22G/kt/KOCO96oLGlDZYTRHtLM+z+
S0NNS/zbXr3bZnyk6sHTGNMW0xjTHqv3ILdSjqV3T8jx9x4J7+GR+y+HXe0J
NSjktuPoaQXE6bh7Oe+XtPhdLrycXXw+fgyfTFOAl8fP0xrIR5Vvq0amWp1y
ZOWyymmVO6sestqU3pfgXQlyQOWC2kf7KkdSrqQcUbmiNC/eTeEdK7QwND+0
XzRgtEA0PLRANEG0PWoMyNWXs6/2gBocaleoYaE2hxoNanOo0aF2gxoOcvnl
9Kvt4Nio5XBxp46RnEW5i3JG5Y7KGZU7KqdSbiVN0uUNB6NVwo+J1b2DRm1n
ORC4MJyYes40JLQfNCC0JTTZtNc02LTaNCG4RpwjrQj9By3JePNPcG5wANuw
LRwbbQqNCu5NTjPuBoejvqkcRtwnDpR2AAdKM43jx43i1N5ruAZ8RH1d77bq
jZS+Ybt++ZI0JrQmNBQzd0t/sVXTQ5grR1iusBzF6Vu8T3+AQ8IV4YxwS2rA
qt+sxrPasDQ8dDj0OLQ9N/aq9ilNCG2IGrR0MfQx6/RL32JsvfZ8onGZoVuf
GaPpgJvAT2g9aEroZOhlrI+GiFbIM8mzicYGbgI/ob3xnXy3GZv/p960+t3e
6aE2tZxyud9ywOWa0wDRIsFlaIPkUMvNlqMtt5qmXq6LnBdaexqe0W79pn5b
OdhqY6iRITcb5yIGEqPiYuS7ykelL9m9HV/6DcdbbqicGLk6cnbkyuCs4Wpw
Hlw2Tu5znAdXRw+C38bX0bPIIZF7IwdHbgm9CT2LnBK5MHLQ5d7LwZebLp9e
/ryauGrhLtgwRTEb7ZucbLnZcpjlOsuZljstZ1vuthyUoeYPyE2R0y23Ww6y
XGQ5pXJL1ThT+0zOstxlOeVyy+UEyw2WgyoXVc4Ovc1tzb+QQyR3iP5GbhFN
1EdjVZPb+UvPIidYzqncXRy7HNSnmr+C46c1o8nB/dPv0L/I8fWuA/X7ByOV
syt3F74ll5dPw7f5Xa/enWaO+v4ntevhsTafPgceRrNDu0PjBFeDr9E+0ZzR
os3RLS2aHCj6HzlJ9ET0O/LuH27XG80bnRu9Gy2cmgNqD9As0S7RI8n9kANC
XySnS26OHB25XnIy5KZMyFHpV06l3Eo1F+Wiqrmn9p580//2KydYbjC9idqS
coi9m0KNXLnFajpOqP07XLUeNX2albv7laMnV07OnNw970xTQ9g7ArwrgEZk
+xaX046o2U8LQhOi1r+cO++qkNNNjyTnhX7J7yEXRg6l3Ek5lHIrb+vX+y+8
+0A+n5oschTlJKrVoua/3Eo5lt4VQHNCu0LDQovi/StTjlSOjfXLGZT7Rw9F
zyVHz3sYaIJog+QAyuWU0yk3kJ6LHovmi/aLPoj+iP6LXotGY7GGa9Fu0Cep
c6LeCX2YnAJ5AfID5BrQ+NPh0+PT/sspoOun75drQJNA90//T6sgf0AughrR
akV7n87EsXfEh/Rq3+VC0qf5Drf16l0AvrP3zcg5WKFb67Cua3q1rHV4fwsM
FharZssv+qWX8pm+WjO/6letGDWr1bKmx1I3xmdn9uv9OFON1PJqv6j5Ipdp
+ma7hl3LrnHXuhw4uXty4OS0uWe5d7mnuLeo101rQHMg/8yzwL0dRg5bpw2V
SycnzjVD/wn7dw26Ft3PaTs9kzybYPawdpg7LN891r3WPdO9E8YOy4fpw97d
09zbPF9cjzB9XArNCazfM8mziYbU88I179r3DPIs2tw52alnlmeXe6x7rWvW
tbtN7Cs6dU9zb5NvRxvoHuFeQXMl59Y7LGix5AyrRaQmkVxiOcVyfeX8yjX2
Thnv1vGOHe+aoeGSxyGfg7br/l69O8Bv5P1FctDkFssxlpvm/RewavE6/Z+c
Y3nF8ovlIssp9q4aOcE3NX/CvRin4/7mHuRe5J7t3u0dP97l4x063qUDS/Ls
VvNP7T/v+PFuGu+o8e4bOc1y4+TIyXWmR8Ap4BLoJ+SvqqegpqnapvSK8AUa
QVpB76yhtRKvejfUJ67p4eL81WKV4y2XXE653G81z9U+V0/477Gf7FetWDVj
1YqWU0g/gh+Xa6hGptqZNOO042poqiVJc057TnNOS/5is+UkyWWS0yRXCT6l
Zt6gxd/qQar9eGnz/2lUjm84Ke0KTbrc9Bva9tSApQ04r93f8YH0AHKi5IrR
B8DD5IDJlcKHyI2UIym3UY1qWI+avGrzyqmEZ6uxK9dSTVO1TeW7v9UvvkS+
P/2MWgB+gwsaTkXb8na/5sqRl8v/br9qG8gBlQv6Zr+eNXIi5UaqoQq8Mued
fuWc0eo7fnLR1M9WS3v3tj/qBcv93L3tL74HvyNHUy7o5zXN/Wb/6lfOp9re
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
ndJn4Kvx0/3GZ/0/ujiIjQ==
             "]], 
            Polygon3DBox[CompressedData["
1:eJwt1Xt0z3Ucx/GvMfttdkIdR8lxbUc66pTTyUhtpXKQmks6RSmX0fkhtygp
nVMxl82hU6J0XEZiDkUlHVlxrDYMG8KYU61OUo0RZ1g9Pmf98Tyfz+v1eb3f
n8/39vu1H/HiwAkJURSNQiKWxqLofSxDasMoWmJskBxFxUIbG0fR20lR1Col
it7k1Vnf3SCKdiEuN5iXw/tZn4a8lrxDGKF2mtrpaKq2Ie9C2I9uhETeUGTp
XajHHutFmIOz+vyF2xpF0YfWJshNkiujD+EY7yf6U/1yXMAc/JtcT5j3tDZM
rj1djlLzcMGbjGX0OP1mOsNE3v7QkxfnjVE3FjnWmtGlzpIgU+UsOXJ75Abz
+tk3RSaGQfT3aibZdyJmWyuiD2Im/SpyeQfol9WfCfdXv6Xoo/ZG+8SsnZaL
87ryxtmro31vQSfE6b38EuzDcF6x8Qq2m2/FLlwNzw/H7Ncs3Hck6X9R/+O8
VLoJGvNeQG/zVONq58rHFJlZeB0zMRlVarcas5zhcbST28GL80Y78yjU8ap5
+3h1xgfpXqgwX8M7GfbHCWTQ96EnMnE/ursnD0T1a4PQgz7iOloY19tzAzro
d5g33nWuo9eEZxmrz8V5n9AFOEpfk33KuXqjh35b7NuFX0YXobv7nEafwFS1
36j7Gsfpbe7JYV5XubtQSmfrd81YQj+s9la5R/ScpiZZNgVDrJ/iTzbfyS9E
RXhX1P5mbZXaKmdJ4p1WW4m7rR2wNtoz6ByyevdFOjrQA2UW6jMg9A/vgWwn
Na30WmhtU/iW6HOyBdZrZS+hmk7Tc3Ji/XN8DcXyO+lUvVOQ795eVL9Y/fXh
G+B1prPUPWp8mjcUTfTtT6+Vv1OmNW7Gx/Q/ehbr3c56WySrzdTvhPkKe+23
ViOT7TwdeR2wh3eGlyZXqf8M8278BTK5vOa8j/RP4PUP7y5/vTMkhG/c2gX6
S/MCfdbhXec4I1vLL5T73PwLtFT7TvgeeA/RvcK7zysM36q6lzAVO+k35CrD
tydzD73COc4a/0B38yP8MWp/D8/D3nlYrvZHepXaueZPONsQrKZPOtNb+s1G
LirozbJPqhuCZ+U30UvC+2i+N7z3MkfDfVOfRw/WayBW0vOc4TrzUr1WYgDv
T0xxbYtQbe2UTAaG6XNKfQUu22O53CLz/jL9wr2N1d//8Bweky0P77dr62O8
Qa+m6CuXLvMdMmUy8Ir8t/QWe4wM72S4p/Rn9Aasxzq9nw/fofkH1t/Tq5w+
jH3hN5//nD5tXHdrNKa7GNfK5eMgbqe/0nd4uE+J9b8z28Izk93tHNmu/29+
N2eexWtt7Sa9t/Ofsf9y3h28dN6lcP95rcx3mJcgyVnaWI/kfgi/m+Gc9GV6
OlqY1+h/HmPtcc74S/h/w3z11fS08JsZvh31zena8L9Dz8bc8O7JLjC2kGtr
3lFmgb4j6Y3GAXQWhjlGAT1D/a9yy/Sv5d8rl8Qbb70t3Q4xusa1bLbnFddw
Fefp+f/vN8+Yizz8B0jmDCQ=
             "]], 
            
            Polygon3DBox[{{1742, 1315, 1314, 1714, 1572, 1573}, {2581, 1715, 
             1678, 1677, 1712, 2313}, {2145, 1564, 1563, 2568, 2029, 2030}}]},
            Annotation[#, "Charting`Private`Tag$510205#1"]& ]], 
         Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0Tso7mEcB/AHx7XcMhjkIAwuKby9R53kksFls7hkcFnxKrdFLnGshmNB
0nuI3aSOQbKxmIiNDFZKKOUjw7fP7/k9z/95ep5/yXCsezwhhLAgvyQqbckh
9PDaROmPEO7YyhZJSzTPdM6wnr0p1nHUuJwxVrBdquR/WgjVPGYxj1jCS44w
OyOEWXsMqQflXP9CBtQT+v2cYpT9jHCADV/r2cgmaZY5Z7dyhZ1cZRc32Me/
XJcE9W++ulsd33jPuP4DP9x/Okmfk3znP9ZYF2clt1nFiNTKiXer5ymjPOOO
7+YZ5yJ3eZsawo3sqw9kTf/ReEt9xU0WuX+ZPX4yn3nMYZZkyh9n5/KABTy0
RyH3jDO4xHQu88V+E3zmGJ+Y5906GEn6/u+f7M459Q==
         "]], 
        Line3DBox[CompressedData["
1:eJwt0TlIHVEYBtDfFX3YhBRiaaO4NEIgrYKdG760EcFKQbQIGkSJRhRstBHt
kiZEEXutVNzABZdgIbjggktcwd7C88Di43z3zty5d2YKWzqTHWkR8VOasiLa
mM3Z9Ij7zIg7mdZvOMVy1w54KHvZERXGx3oln/kkD1KQG3HLD7zmR+4ywR3m
JyLmrN/W1+Q1J2I1dZ/5WfNz+gznucxLLvGKKzzjuVzIZ3sPcd0Zh7nBER7x
F094Kr/1P1LqDGXW7Osl/OsDPGR4P9Y5RzMXjb9ygU3cZjv/8RsP2csD9rFf
fsh/zxvgPQf5yMbUOtZzj6X2qNFLWMuG1HPMlxsn9TJ+YRXHWc0efmIXv0u3
XNh7gld8sX5SH5MT41EmvPMO87jFDG4yi8Wpb6zPS5G1re///w3mm0yu
         "]]}, {}, {}, {
        GrayLevel[0.2], 
        Line3DBox[{820, 819, 818, 821, 822, 2352, 827, 824, 823, 808, 2347, 
         802, 801, 816, 813, 2349, 812, 811, 814, 815, 2350, 817, 805, 804, 
         803, 2348, 810, 807, 806, 809, 2351, 826, 825, 834, 835, 833, 831, 
         832, 2353, 830, 829, 828, 1931, 1314, 1315, 1932, 1305, 1928, 1304, 
         1927, 1303, 1929, 1306, 1935, 1320, 1936, 1322, 1321}], 
        Line3DBox[{877, 875, 2373, 874, 2374, 878, 2381, 859, 2365, 858, 2366,
          848, 2359, 2360, 846, 1748, 845, 1749, 847, 1753, 854, 1766, 892, 
         1909, 1246, 1910, 1247, 1914, 1250, 1251}], 
        Line3DBox[{880, 879, 2375, 881, 2382, 895, 2380, 857, 2363, 856, 2364,
          850, 2361, 1750, 849, 2362, 851, 1751, 852, 1752, 853, 1754, 855, 
         1911, 1248, 1912, 1249, 1913, 1252, 1253}], 
        Line3DBox[{883, 882, 1764, 888, 1763, 876, 1760, 872, 1758, 871, 1759,
          873, 1780, 927, 2400, 2399, 860, 2367, 861, 2369, 864, 889, 1767, 
         2379, 893, 2378, 894, 2383, 896, 897}], 
        Line3DBox[{885, 884, 1761, 886, 1765, 887, 1762, 869, 1757, 868, 1756,
          867, 1778, 865, 2371, 2370, 866, 862, 1755, 2368, 863, 2372, 870, 
         2377, 890, 2376, 891, 2384, 898, 899}], 
        Line3DBox[{901, 900, 2385, 902, 2387, 903, 2386, 837, 2354, 836, 2355,
          838, 2358, 1747, 844, 2357, 842, 1745, 841, 1746, 843, 1784, 937, 
         1783, 936, 1782, 924, 925}], 
        Line3DBox[{929, 922, 1774, 921, 1776, 926, 1777, 919, 1772, 918, 1770,
          917, 2398, 839, 1744, 2356, 840, 2395, 910, 2392, 909, 2391, 907, 
         2390, 908, 2402, 934, 935}], 
        Line3DBox[{930, 928, 1779, 923, 1775, 920, 1773, 916, 1769, 915, 1771,
          913, 1768, 914, 2397, 2396, 912, 2394, 911, 2393, 904, 2388, 905, 
         2389, 906, 2401, 933, 931, 1781, 932}], 
        Line3DBox[{957, 952, 1792, 953, 1798, 962, 1797, 963, 1830, 1048, 
         1831, 1040, 1826, 2443, 1041, 2445, 1039, 1825, 1038, 2442, 1037, 
         2441, 1019, 2433, 1018, 2432, 1017, 2439, 1032, 1036}], 
        Line3DBox[{958, 959, 1795, 960, 1822, 1031, 1823, 1009, 1816, 1010, 
         1817, 999, 1813, 2423, 1000, 1818, 1002, 2424, 1001, 2430, 1013, 
         2428, 1012, 2447, 1026, 2437, 1025, 2438, 1028, 1027}], 
        Line3DBox[{971, 956, 1794, 954, 1793, 955, 1796, 961, 1828, 1045, 
         1829, 1044, 1827, 2446, 1043, 2444, 1042, 2450, 1047, 2451, 1033, 
         1824, 1022, 2435, 1021, 2434, 1020, 2440, 1035, 1034}], 
        Line3DBox[{977, 972, 1801, 973, 1806, 978, 1805, 942, 1786, 943, 1787,
          944, 1799, 2412, 970, 2413, 966, 2409, 965, 2408, 964, 2417, 990, 
         2418, 987, 2415, 986, 1810, 989, 988}], 
        Line3DBox[{979, 980, 1807, 981, 1809, 982, 1808, 949, 1790, 950, 1791,
          2407, 951, 938, 1785, 2403, 939, 2405, 941, 2404, 940, 2421, 992, 
         2419, 991, 2420, 994, 993}], 
        Line3DBox[{983, 976, 1803, 974, 1802, 975, 1804, 945, 1788, 946, 1789,
          2406, 947, 948, 1800, 2584, 969, 2411, 968, 2410, 967, 2416, 985, 
         2414, 984, 2422, 995, 996}], 
        Line3DBox[{1003, 1004, 1819, 1015, 1820, 2431, 1016, 1030, 1821, 1007,
          1814, 1008, 1815, 997, 1812, 1811, 998, 2426, 1006, 2425, 1005, 
         2427, 1011, 2429, 1014, 2448, 1046, 2449, 1024, 2436, 1023, 1029}], 
        Line3DBox[{1059, 1058, 2458, 1051, 2453, 1050, 2452, 1049, 2485, 1127,
          2484, 1096, 2467, 2468, 1095, 1849, 1098, 1848, 1097, 1860, 1128, 
         1861, 1075, 1839, 1076, 1840, 1077, 1845, 1082, 1083}], 
        Line3DBox[{1074, 1072, 1838, 2461, 1073, 1094, 1847, 1093, 1851, 1113,
          1850, 1112, 1853, 1117, 1854, 1115, 1114, 1852, 1116, 2473, 1105, 
         1104, 1103, 2470, 1102, 1100, 2469, 1099, 1101, 1111, 2472, 1110, 
         1109, 1107, 2471, 1106, 1108, 1313, 2545, 1312, 1311, 1309, 2544, 
         1308, 1310, 1317, 1316, 1318}], 
        Line3DBox[{1089, 1085, 2462, 1056, 2456, 1054, 2454, 1052, 2480, 1125,
          2482, 1859, 1124, 1120, 2474, 2475, 1118, 1857, 1062, 1832, 1064, 
         1834, 1067, 1841, 1078, 1843, 1080, 1876, 1169, 1171}], 
        Line3DBox[{1092, 1091, 2466, 1088, 2465, 1087, 2464, 1846, 1084, 1061,
          2459, 1060, 2460, 1066, 2478, 2479, 1122, 1855, 1071, 1837, 1069, 
         1836, 1070, 1878, 1173, 1879, 1174, 1880, 1176, 1177}], 
        Line3DBox[{1132, 1131, 2492, 1137, 2489, 1136, 2491, 1140, 2498, 1162,
          2495, 1161, 2496, 1872, 1163, 2504, 1167, 1874, 1166, 1884, 1151, 
         1867, 1152, 1870, 1154, 1869, 1155, 1156}], 
        Line3DBox[{1135, 1134, 2488, 1130, 2486, 1129, 2487, 1133, 2506, 1182,
          2505, 1181, 2503, 1883, 1178, 2501, 1179, 1885, 1180, 1882, 1144, 
         1863, 1145, 1864, 1146, 1865, 1147, 1148}], 
        Line3DBox[{1142, 1862, 1141, 1143, 2493, 1139, 2490, 1138, 2502, 1160,
          2494, 1159, 2497, 1164, 2499, 2500, 1175, 1881, 1168, 1875, 1165, 
         1873, 1153, 1868, 1149, 1866, 1150, 1871, 1157, 1158}], 
        Line3DBox[{1172, 1170, 1877, 1081, 1844, 1079, 1842, 1068, 1835, 1065,
          1833, 1063, 1858, 1119, 2476, 1121, 1856, 2477, 1123, 2483, 1126, 
         2481, 1053, 2455, 1055, 2457, 1057, 2463, 1086, 1090}], 
        Line3DBox[{1221, 1222, 1901, 1227, 1900, 1228, 1939, 1334, 1944, 1340,
          1942, 2552, 1339, 1301, 1925, 2586, 1296, 2538, 1295, 2537, 1294, 
         2555, 1342, 2553, 1331, 2549, 1330, 1329}], 
        Line3DBox[{1224, 1219, 1897, 1220, 1902, 1225, 1899, 1226, 1943, 1341,
          1945, 1302, 1926, 2542, 1300, 2541, 1299, 2540, 1298, 2539, 1297, 
         2554, 1328, 2548, 1327, 2547, 1326, 1937, 1325, 1324}], 
        Line3DBox[{1242, 1243, 1919, 1269, 1918, 1270, 1922, 1205, 1891, 1206,
          1892, 1207, 1898, 2513, 1223, 2519, 1230, 2514, 1229, 2517, 1232, 
         1915, 1264, 2526, 1263, 2525, 1256, 2522, 1255, 1254}], 
        Line3DBox[{1245, 1239, 1907, 1241, 1921, 1268, 1917, 1184, 1887, 1186,
          1889, 1188, 1904, 2585, 1235, 1905, 1233, 2518, 1231, 2516, 1204, 
         2510, 1202, 2530, 1266, 2528, 1262, 2524, 1260, 1258}], 
        Line3DBox[{1257, 1259, 2523, 1261, 2527, 1265, 2529, 1201, 2509, 1203,
          2515, 1199, 1890, 1200, 2521, 1234, 2520, 1903, 1187, 1888, 1185, 
         1886, 1183, 1916, 1267, 1920, 1240, 1906, 1238, 1244}], 
        Line3DBox[{1286, 1283, 1284, 1285, 1282, 1279, 2533, 1280, 1281, 1274,
          1271, 2531, 1272, 1273, 1275, 1276, 2532, 1277, 1278, 1214, 1211, 
         2511, 1212, 1213, 1215, 1216, 2512, 1217, 1218, 1192, 1189, 2507, 
         1190, 1191, 1193, 1196, 2508, 1197, 1198, 1194, 1195, 1895, 1896, 
         1210, 1894, 1209, 1893, 1208, 1908, 1236, 1237, 2543, 1930, 1307, 
         1934, 1319, 1323}], 
        Line3DBox[{1335, 1332, 1938, 1333, 1941, 1336, 1940, 1289, 1924, 1287,
          1923, 2534, 1288, 1290, 1933, 2546, 1293, 2536, 1292, 2535, 1291, 
         2551, 1338, 2550, 1337, 2556, 1343, 1344}]}, {
        GrayLevel[0.2], 
        Line3DBox[CompressedData["
1:eJwNydk6QmEYhuHfRjtOgcoylA4DRbSaVlGIyJRplTHEubs37ut5r++LRpMk
XQghxJQzIWyzxQ67VNjjmOxiCH2tsU+VA5bc29qiSZ2YBst+PT3ikA4JXdb9
XnTKhGeeSNn0+9U5Mz754JK831DPueCGayL3Wx2zat/pKxv2oz6wZt/rD0X7
W/8o2e/6RsH+0itW7JEOyNmnesIZ/7vNHGg=
         "]], 
        Line3DBox[{1406, 1407, 1746, 1414, 1772, 1462, 1769, 1445, 1758, 1444,
          1757, 1437, 1754, 1438, 1766, 2607, 1427, 1426, 1850, 1611, 2648, 
         1620, 1861, 1587, 1835, 1834, 1588, 1836, 1589, 1873, 1642, 1884, 
         1649, 1882, 1650, 1652}], 
        Line3DBox[{1408, 1409, 1745, 1413, 1770, 1463, 1771, 1446, 1759, 1443,
          1756, 1435, 1752, 1436, 1753, 2604, 1418, 1417, 1853, 1614, 2649, 
         1619, 1860, 1583, 1833, 1832, 1584, 1837, 1590, 1875, 1643, 1874, 
         1644, 1885, 1647, 1648}], 
        Line3DBox[{1458, 1457, 1781, 1471, 2611, 1460, 2608, 1459, 2609, 1456,
          1767, 1442, 2605, 1441, 2606, 1439, 1755, 1440, 2610, 1432, 1750, 
         2663, 1433, 1430, 1748, 2662, 1416, 1415, 1852, 1612, 1613, 1606, 
         2645, 1603, 1604, 1605, 1849, 1738, 2665, 1607, 1856, 2666, 1617, 
         1859, 1618, 2647, 1585, 2642, 1586, 1846, 1600, 2653, 1651, 2652, 
         1621, 2650, 1622, 1862, 1623, 1624}], 
        Line3DBox[{1472, 1473, 1782, 1465, 1774, 1466, 1779, 1454, 1764, 1449,
          1761, 1450, 1913, 1698, 1914, 1591, 1838, 1592, 1845, 1599, 1877, 
         1876, 1645, 1880, 1639, 1871, 1638, 1869, 1633, 1865, 1631, 1632}], 
        Line3DBox[{1474, 1475, 1783, 1468, 1776, 1467, 1775, 1452, 1763, 1453,
          1765, 1455, 1912, 1697, 1910, 2656, 1429, 1428, 1847, 1602, 2644, 
         1595, 1840, 1596, 1844, 1843, 1598, 1879, 1634, 1866, 1635, 1870, 
         1630, 1864, 1627, 1628}], 
        Line3DBox[{1476, 1477, 1784, 1469, 1777, 1464, 1773, 1447, 1760, 1448,
          1762, 1451, 1911, 1696, 1909, 2655, 1425, 1424, 1851, 1601, 2643, 
         1593, 1839, 1594, 1842, 1841, 1597, 1878, 1637, 1868, 1636, 1867, 
         1629, 1863, 1625, 1626}], 
        Line3DBox[{1489, 1490, 1790, 1485, 1788, 1481, 1786, 1482, 1828, 1579,
          1830, 1535, 1816, 1531, 1814, 1532, 2627, 1558, 1927, 2671, 1666, 
         1664, 1893, 1656, 1887, 1886, 1657, 1891, 1662, 1943, 1732, 1944, 
         1706, 1924, 1704, 1705}], 
        Line3DBox[{1512, 1511, 1807, 1508, 1803, 1505, 1801, 1496, 1794, 1492,
          1792, 1493, 1795, 1497, 2617, 1528, 1819, 1559, 1936, 1719, 1934, 
         2675, 1693, 1692, 1907, 1906, 1694, 1919, 1679, 1897, 1680, 1901, 
         1687, 1938, 1724, 1730}], 
        Line3DBox[{1514, 1515, 1809, 1506, 1802, 1507, 1806, 1494, 1793, 1495,
          1798, 1501, 1822, 1562, 2628, 1560, 1820, 1561, 1935, 1711, 1930, 
         2674, 1741, 1691, 1921, 1920, 1701, 1918, 1688, 1902, 1685, 1900, 
         1686, 1941, 1726, 1727}], 
        Line3DBox[{1516, 1513, 1808, 1509, 1804, 1510, 1805, 1498, 1796, 1499,
          1797, 1500, 1823, 1576, 1821, 1557, 2626, 1556, 1929, 2673, 1690, 
         1689, 1908, 1695, 1917, 1916, 1700, 1922, 1683, 1899, 1684, 1939, 
         1725, 1940, 1728, 1729}], 
        Line3DBox[{1521, 1520, 1810, 1517, 2614, 1733, 2616, 1518, 2615, 1519,
          1824, 1736, 2641, 1582, 2640, 1577, 1825, 1737, 2637, 1538, 1818, 
         1527, 2664, 1522, 1811, 1524, 2634, 1572, 1714, 1931, 1713, 2658, 
         1712, 1677, 1674, 1673, 1670, 1895, 2667, 1669, 1668, 1905, 2670, 
         1661, 1890, 1660, 2668, 1739, 2669, 1740, 1915, 1699, 2678, 1723, 
         2677, 1722, 2676, 1721, 1937, 1720, 1743}], 
        Line3DBox[{1555, 1553, 1554, 1546, 1544, 2623, 1545, 1543, 2622, 1540,
          1541, 1542, 2625, 1551, 1552, 1550, 2624, 1547, 1548, 1549, 2631, 
         1567, 1568, 1566, 2630, 1563, 1564, 2629, 1565, 1570, 1571, 2633, 
         1530, 2619, 1734, 2618, 1529, 2620, 1537, 2621, 1539, 2638, 1581, 
         2639, 1735, 2636, 1574, 1575}], 
        Line3DBox[{1655, 1654, 2654, 1653, 1883, 1641, 1872, 2651, 1640, 1646,
          1881, 1616, 1855, 1615, 1857, 1858, 1609, 1848, 1608, 2646, 1610, 
         1854, 1419, 1420, 2603, 1749, 1431, 1751, 1434, 1778, 1470, 1780, 
         1461, 1768, 1412, 1411, 2661, 1744, 1410, 1747, 1421, 2602, 1422, 
         1423}], 
        Line3DBox[{1707, 1703, 1923, 1702, 1942, 1731, 1945, 1663, 1892, 1659,
          1888, 1889, 1658, 1894, 1665, 1667, 2672, 1928, 1569, 2632, 1534, 
         1815, 1533, 1817, 1536, 1831, 1580, 1829, 1484, 1787, 1483, 1789, 
         1486, 1791, 1488, 1487}], 
        Line3DBox[{1718, 1717, 2660, 1716, 1933, 1710, 1925, 1709, 2657, 1708,
          1926, 1682, 1898, 1681, 1903, 1904, 1672, 1896, 1671, 1676, 1675, 
         1678, 1715, 2659, 1932, 1742, 1573, 2635, 1525, 1812, 1523, 1813, 
         1526, 1826, 1578, 1827, 1503, 1799, 1502, 2613, 1504, 1800, 1480, 
         1785, 1478, 2612, 1479, 1491}]}, {
        GrayLevel[0.2], 
        Line3DBox[{2007, 2005, 2354, 2006, 2392, 2074, 2393, 2042, 2369, 2043,
          2605, 2047, 2372, 2033, 2363, 2034, 2365, 2037, 2566, 2624, 2133, 
         1956, 2350, 1953, 1954, 1993, 2596, 1992, 1991, 2222, 2224, 2223, 
         2485, 2220, 2481, 2480, 2181, 2642, 2180, 2459, 2179, 2494, 2243, 
         2498, 2249, 2506, 2256, 2257}], 
        Line3DBox[{2010, 2013, 2602, 2560, 2358, 2014, 2356, 2015, 2396, 2076,
          2399, 2044, 2370, 2046, 2610, 2031, 2361, 2027, 2359, 2029, 2568, 
         2630, 2147, 1960, 2351, 1961, 1963, 1978, 2591, 1977, 1976, 2198, 
         2202, 2200, 2467, 2572, 2477, 2666, 2216, 2474, 2214, 2478, 2218, 
         2499, 2246, 2496, 2573, 2503, 2574, 2654, 2253, 2251}], 
        Line3DBox[{2025, 2008, 2355, 2009, 2395, 2075, 2394, 2039, 2367, 2040,
          2606, 2041, 2368, 2035, 2364, 2036, 2366, 2038, 2569, 2631, 2148, 
         1950, 2348, 1946, 1947, 2002, 2600, 2001, 2000, 2226, 2227, 2225, 
         2484, 2221, 2483, 2482, 2217, 2647, 2183, 2460, 2182, 2497, 2244, 
         2495, 2245, 2505, 2258, 2575}], 
        Line3DBox[{2067, 2063, 2385, 2064, 2402, 2080, 2401, 2081, 2611, 2061,
          2383, 2062, 2384, 2052, 2375, 2048, 2373, 2049, 2623, 2131, 2132, 
         1962, 2352, 1957, 1958, 1971, 2557, 2589, 1970, 2169, 2171, 2170, 
         2458, 2178, 2463, 2462, 2190, 2466, 2194, 2650, 2239, 2493, 2242, 
         2492, 2237, 2488, 2234, 2235}], 
        Line3DBox[{2078, 2068, 2387, 2069, 2390, 2072, 2389, 2073, 2608, 2057,
          2378, 2053, 2376, 2054, 2382, 2050, 2374, 2051, 2565, 2622, 2130, 
         1948, 2347, 1949, 1959, 1966, 2587, 1965, 1964, 2186, 2187, 2174, 
         2453, 2175, 2457, 2456, 2177, 2465, 2191, 2652, 2240, 2490, 2238, 
         2489, 2229, 2486, 2230, 2236}], 
        Line3DBox[{2079, 2065, 2386, 2066, 2391, 2070, 2388, 2071, 2609, 2058,
          2379, 2055, 2377, 2056, 2380, 2059, 2381, 2060, 2567, 2625, 2134, 
         1951, 2349, 1952, 1955, 1969, 2588, 1968, 1967, 2184, 2185, 2172, 
         2452, 2173, 2455, 2454, 2176, 2464, 2570, 2653, 2255, 2502, 2241, 
         2491, 2233, 2487, 2231, 2232}], 
        Line3DBox[{2089, 2082, 2612, 2561, 2403, 2562, 2584, 2098, 2413, 2099,
          2444, 2166, 2445, 2637, 2165, 2122, 2424, 2121, 2425, 2618, 2022, 
         2021, 2336, 2470, 2207, 1990, 2595, 1989, 2507, 2259, 2261, 2260, 
         2518, 2339, 2670, 2521, 2277, 2519, 2278, 2541, 2305, 2586, 2580, 
         2546, 2582, 2660, 2299, 2300}], 
        Line3DBox[{2090, 2563, 2407, 2087, 2406, 2088, 2613, 2097, 2412, 2564,
          2446, 2164, 2443, 2120, 2423, 2664, 2119, 2118, 2426, 2619, 2018, 
         2559, 2337, 2473, 2212, 1995, 2597, 1994, 2508, 2263, 2262, 2338, 
         2667, 2576, 2585, 2520, 2271, 2513, 2577, 2542, 2303, 2657, 2304, 
         2552, 2294, 2534, 2578, 2579}], 
        Line3DBox[{2091, 2083, 2404, 2084, 2410, 2093, 2408, 2094, 2451, 2641,
          2168, 2161, 2441, 2127, 2428, 2128, 2429, 2621, 2020, 2019, 2472, 
         2211, 2210, 2004, 2601, 2003, 2511, 2266, 2267, 2264, 2510, 2509, 
         2265, 2274, 2669, 2517, 2276, 2539, 2301, 2537, 2295, 2535, 2296, 
         2314}], 
        Line3DBox[{2092, 2085, 2405, 2086, 2411, 2095, 2409, 2096, 2450, 2640,
          2163, 2162, 2442, 2129, 2430, 2126, 2427, 2620, 2024, 2023, 2469, 
         2206, 2205, 1999, 2599, 1998, 2512, 2268, 2270, 2269, 2516, 2515, 
         2275, 2272, 2668, 2514, 2273, 2540, 2302, 2538, 2297, 2536, 2298, 
         2583}], 
        Line3DBox[{2100, 2101, 2420, 2117, 2422, 2106, 2415, 2614, 2103, 2102,
          2440, 2160, 2439, 2159, 2438, 2157, 2436, 2636, 2140, 2139, 2544, 
         2310, 2309, 1973, 2590, 1972, 2533, 2292, 2293, 2281, 2524, 2523, 
         2279, 2522, 2280, 2315, 2676, 2547, 2316, 2549, 2319, 2556, 2328, 
         2329}], 
        Line3DBox[{2113, 2114, 2421, 2111, 2416, 2112, 2417, 2615, 2110, 2109,
          2435, 2155, 2433, 2156, 2447, 2167, 2448, 2638, 2138, 2137, 2471, 
         2209, 2208, 1997, 2598, 1996, 2532, 2290, 2291, 2287, 2530, 2529, 
         2285, 2526, 2284, 2326, 2678, 2554, 2327, 2555, 2325, 2551, 2322, 
         2323}], 
        Line3DBox[{2116, 2115, 2419, 2104, 2414, 2105, 2418, 2616, 2108, 2107,
          2434, 2153, 2432, 2154, 2437, 2158, 2449, 2639, 2136, 2135, 2545, 
         2312, 2311, 1980, 2592, 1979, 2531, 2288, 2289, 2286, 2528, 2527, 
         2282, 2525, 2283, 2318, 2677, 2548, 2317, 2553, 2324, 2550, 2320, 
         2321}], 
        Line3DBox[{2125, 2123, 2617, 2124, 2628, 2144, 2431, 2141, 2626, 2142,
          2627, 2143, 2632, 2149, 2635, 2634, 2152, 2151, 2633, 2150, 2026, 
         2662, 2331, 2603, 2332, 2604, 2334, 2607, 2335, 2655, 2340, 2656, 
         2341, 2188, 2461, 2189, 2644, 2193, 2643, 2192, 2648, 2228, 2649, 
         2204, 2646, 2195, 2571, 2645, 2196, 1988, 2594, 1984, 1983, 2658, 
         2313, 2581, 2659, 2307, 2672, 2306, 2671, 2342, 2673, 2343, 2308, 
         2543, 2674, 2344, 2675, 2345, 2346}], 
        Line3DBox[{2252, 2250, 2501, 2254, 2504, 2248, 2651, 2247, 2500, 2219,
          2479, 2215, 2475, 2476, 2213, 2203, 2665, 2468, 2201, 2199, 2197, 
         1981, 2558, 2593, 1982, 1975, 1974, 1987, 2353, 1986, 1985, 2146, 
         2629, 2145, 2030, 2360, 2028, 2663, 2333, 2362, 2032, 2371, 2045, 
         2400, 2077, 2397, 2016, 2661, 2330, 2398, 2017, 2357, 2012, 
         2011}]}}}, VertexNormals -> CompressedData["
1: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
0DC/3kvlpx6z5VHu7PHHexeutFD5LN8soXAqn3Vw59bQniMhuNSouvIqOQSy
rkttuLlMQJbWzrpbw3F4zuJacZR6IojE0plMEgTM21vs6rX2wVKlIA8q35qt
xXGByrfOHwi1zoi0x0V6NSUq/yX9Jp6Xyn9dkLyY6mlggSX5+fSewjYg78yx
o4jEf4ikGNvb2GNPyWeXb9+fQunZbSNU3m3mQWhmnuhz7Mp90nPM1hG8/OOF
+El8R/jRbutzOVi0ciDt1XIheMj1qHsWEJBg6mR9SDUS/RIK5D6/DgeHENXK
ol8EMNSZaXV7puFsxZ79yfpp8CL0Ye7MKJl/Z+q8CpKrxt9/N7/ucyKgUEbN
/YRmMhzMTBe21KrFAM6/+7I1yfmx3c+s/Ew2+JQnHH/1qQFjuQJi19GR4+L5
Je6ueBkYXuS/FH+8CmuuUFwPehEQXrvy4lA6mb/0TAk2i9Tg2afvvLjuE9Dy
W4uvOTEXyvKZLOT763Cb+uYwr40E0BrxvOa3q4Dy1sQSAfZW1I46uoF6/m/9
KiZAUrUDtgZ/9Lll4IKPyvvbqTxy5uyqK5VH9kmVbPvKGICShUs0hwWCIKfF
Nbh7hYC6U18jVyUi8JrVuj62y3HQO5y9ZWWRgDw/w4WL22Ow4P7fyIPn38FH
gWmLO3PkuPHda3y9Jx2fbteX0rldCDPBIR2HqglQuGY6eavnFQ5y8Q0804sG
/+4jsyeWCHjjuHYeXTxQK88w+h8/HnthhsqPvyy+cuTEpmQsKOmNYvmaAQoM
R6z0xwjgqHp3mjLgh/npPm3U8+oVt3OnHqwSkGkcsiQdH4bEa9NLj8yjoYCZ
Zpl6Hs61POobyxuPaof1FX9tzgLFvh/z7uME5OYscExwZKF3cq6pU185mN+6
+k7xNQHSa5mVp8N9MHZdb0yorT8sC+ssImnf0stppMGnHB0Zf/NUpBIQb9Ay
cNwiGt4ZTo1sC6/Amlf7zbZFE1Bm3Pvk18kEiIyrUG2aK8elHXevFr8jQMbm
6ZzT+lBYtfwd/25HJYqmGLMbRxFw47T5qw2WEaBR+0ff/WQ5hi7vSCvMJkCY
T81u10wgONyXW/JULkch2fhrlVkEWExxjZqHBsHWknz+h18rccf9lZ1fgwiw
YVfy2+4XC2qlg5ulpspQfssNhXvk9U6CTJOyJ2NBbyrLrLukHL2urpxXf0vA
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
ex+pxT6c89ODpuNyAtJAor6UTXaGCK887i7cxj1idWKNTfN4DoSZeYe315Fg
d1iHmTPuC48fuO3qLSiAMX4xEWpxF0QPc+ycxn2Ni/X4+cgPgxDF5BsQE0WC
8+//7viEe9B4B0Wf8V4WMC4w/YhcJMNKh9JNnqe4Z3lqqVk9zwGxPTOa+oRG
UNXynFbEPcjxbkJLn24emBz6JXv0M4J7s4YCTri/jG0LjxB7lAHDYo8t7enn
EH1TxO5YRyKRl0WRGdac0JA6OELfH3/6KUedXKGBgtaM93cHTGu/0arJLWg2
RZzXzzgo4jwgtCLfUKdagy6FiV2zy2pBXL/gYgYeV1enL4m2B1FQR00E46Oa
FlTIkZqwgPvsY87Fj+NeFBB19SI3D7ei9bqr2+XYMbggIRDL+6gRnFMOMgrW
diDthiqfxqFFWPe9xLvIMAysa9Z+cil9KOiruwyNQIU9Pz55c5N64dPNsBb6
/f9pKfXpOX8DkTY1Yt5NgBt6bvW//g9/zv68InxYyR39XFNhPXmZA/Zs5Z+a
xJ8n/kj7rPzrLnq8s0T7rjgXFFR55NO5TyTio/zvrhNINUN5xWvLmrbyo0tb
NujnIe0/Wan+tkdxNsiV34QVonSjqhIqm6D95aXr8zjvib/GTLPeZ6KzzEK6
4lMzcO28w5+qSFcI9mQQNbo0gx63fR4cwDnn9VEFfhacc9w/mPfOXSxDedqZ
JzTF2+AF6zWOVDxvVv3WfV7n1IhG/7XVHEtvgRX/RUcK3p99anWEKbw/GzP4
YhJ4KbDdTrDS0QNDer7bXfTsaxELxW3pxdgQUNuchN7qUuHkY/XEtV0UaJbi
iTVI7IOu3SFqPnj8T+7d2G6P99tk2JJ4QHUHrMs5fPmJ9zOHhfyjXYzDIPr+
sbvWoXZwanUaZHyAxxn0Laf7vxHYm/HRe+lDK9x8XTNki39fnb37BJXx78uQ
YeeZPQpEuLdTIPjcJjPaxmwTerwBA5tdzhedqluAcNZqjgufX1sPunn9wb/3
g7OmProjZMD1kUfjFgZndR8cCXlcC5erAzo8Prei7n2C28Xx9kO6SOpMYY1w
PS9M1hd/r5KKMmId/l615IbJ47sp8OaL9K3ij62whjAJa/zz11ae/TMMb4Si
nuep9HqXOfZZnPnZD1CSJp/ZeBw7tOXynCvHn6/1tvK+yAxFtgZ2JqbS3OC0
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
ugLuoYwjJf8R8Tj/P3OwG1k=
      "]], Axes -> True, AxesLabel -> {None, None, None}, 
    BoxRatios -> {1, 1, 1}, DisplayFunction -> Identity, FaceGridsStyle -> 
    Automatic, ImageSize -> {204.20590095126255`, 230.625}, 
    Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]]}, PlotRange -> {{-10, 10}, {-10, 10}, {-20, 20}}, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {2.5587787362696846`, 0.1600853961879836, 2.20839852489116}, 
    ViewVertical -> {-0.03157592391465761, 0.40744442408364206`, 
     0.9126839553274096}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\[Equal] \
n*\\!\\(\\*SuperscriptBox[\\(y\\), \\(3\\)]\\) +  1\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Specularity", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Lighting", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.740156452598754*^9, {3.7401564934712844`*^9, 3.7401565319278564`*^9}, 
   3.740156703658978*^9, 3.7401567351625633`*^9, {3.7402538875869894`*^9, 
   3.7402539471519337`*^9}, {3.7402543001054*^9, 3.7402543126198034`*^9}, {
   3.7402548470769815`*^9, 3.740254868797037*^9}, {3.740254920746664*^9, 
   3.740254925293584*^9}, {3.7402549982790766`*^9, 3.740255014046447*^9}, 
   3.7402550522596116`*^9},ExpressionUUID->"0fc06574-94ca-4e10-864a-\
8d503e8d9fc4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "6.     ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "8e73bd64-a327-4ec1-b774-6898b460585f"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "4"], TraditionalForm]],ExpressionUUID->
  "e0713ecb-78c0-486c-a7d0-5c8500931602"],
 " + n y x - 1  , n \[Element] {-20, ... , 20}"
}], "Section",ExpressionUUID->"72c0b736-ca46-46db-be01-131065e20168"],

Cell[TextData[{
 "Diophantine equations of this form are described in NKS: ",
 ButtonBox["http://www.wolframscience.com/nks/notes-12-9--properties-of-\
diophantine-equations/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolframscience.com/nks/notes-12-9--properties-of-\
diophantine-equations/"], None},
  ButtonNote->
   "http://www.wolframscience.com/nks/notes-12-9--properties-of-diophantine-\
equations/"],
 ":\n\n\t",
 StyleBox["\[OpenCurlyDoubleQuote] ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], "==", 
    SuperscriptBox["y", "4"]}], TraditionalForm]],ExpressionUUID->
  "da1f84d9-665e-49d8-bc2c-e7829c116e9e"],
 StyleBox["+x y + a. For most values of a (including specifically a=1) the \
continuous version of this equation defines a surface of genus 3, \tso there \
are at most a finite number of integer solutions. (An equation of degree d \
generically defines a surface of genus (d-1)(d-2)/2.) \tNote that ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "b759df71-1c26-403c-80d8-4bff1a9bdc61"],
 StyleBox[" ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{"==", 
    SuperscriptBox["y", "4"]}], TraditionalForm]],ExpressionUUID->
  "2d27dcdf-1075-4a6b-b7f5-da52c5d90391"],
 StyleBox["+a is equivalent to ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], "==", 
    SuperscriptBox["z", "2"]}], TraditionalForm]],ExpressionUUID->
  "c5a6fff5-79f6-4d9d-a055-d964187a2c29"],
 StyleBox["+a by a simple substitution.\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.7400081469567804`*^9, 3.7400083366208057`*^9}, {
   3.7400096637391267`*^9, 3.740009700369189*^9}, {3.740010310232595*^9, 
   3.740010354744625*^9}, {3.7400104494736133`*^9, 3.740010487867881*^9}, 
   3.740013455407787*^9, {3.740276399491726*^9, 
   3.7402764849588757`*^9}},ExpressionUUID->"8f39cdc4-c144-4e8b-b2e0-\
2d9d7d22d4f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7397991326644683`*^9, 3.739799158224616*^9}, {
  3.7398778085942526`*^9, 3.7398778133351316`*^9}, {3.7399769205748653`*^9, 
  3.739976921678718*^9}},ExpressionUUID->"9e39ca71-78f8-4b7b-8f64-\
fdf2acc7e9ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "==", 
      RowBox[{
       SuperscriptBox["y", "4"], "+", " ", 
       RowBox[{"#", " ", "y", " ", "x"}], " ", "-", " ", "1"}]}], " ", "&"}], 
    "  ", "/@", " ", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "20"}], ",", "20"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7397991326644683`*^9, 3.739799158224616*^9}, {
  3.7398778085942526`*^9, 3.7398778133351316`*^9}, {3.7399769205748653`*^9, 
  3.7399769260334373`*^9}},ExpressionUUID->"45e7deaf-7df7-40c4-9737-\
d2789d056b8d"],

Cell[TextData[{
 "Note that the table on page 790 of ",
 StyleBox["NKS",
  FontSlant->"Italic"],
 " contains a typographical error.  The smallest solution for ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "3"], "\[Equal]", 
   RowBox[{
    SuperscriptBox["y", "4"], "-", 
    RowBox[{"12", " ", "x", " ", "y"}], "-", "1"}]}]],
  CellChangeTimes->{3.7398393930628347`*^9, 3.73997501166395*^9, 
   3.739976975709977*^9},ExpressionUUID->
  "3c01469a-8e25-4172-aed7-531291348c08"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "25ff58c3-77cd-4c46-b5ed-2cbad3d049fb"],
 ", not ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "30161d6e-6183-4315-824e-028565c643a4"],
 ".  In fact, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f4afbc47-4b2a-4202-9302-2d2f102a9fc8"],
 " is not even a solution for the equation."
}], "Text",
 CellChangeTimes->{{3.7399959573660965`*^9, 3.739996162485614*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"bb716cb5-4c66-4201-98c8-e22d1dd3b912"],

Cell[TextData[{
 "The algorithm can find the solution ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "3"], "\[Equal]", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"9", " ", "x", " ", "y"}], "+", 
      SuperscriptBox["y", "4"]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"80", ",", "27"}], "}"}]}], "}"}]],
  CellChangeTimes->{3.7398393930628347`*^9},ExpressionUUID->
  "5881f7e8-3c11-4707-a275-21b8627358b4"],
 " despite the solution being relatively large. In later sections of this \
notebook, some solutions become too large for FindInstance to find them."
}], "Text",
 CellChangeTimes->{{3.739877894125646*^9, 3.7398779419656935`*^9}, {
  3.739878003689388*^9, 
  3.739878008440564*^9}},ExpressionUUID->"e06e89f9-273b-4cb9-9fdc-\
638ba6195434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{3.7398393539329042`*^9, 
  3.7399769337005806`*^9},ExpressionUUID->"66804618-0257-4fb3-aeb4-\
adde3c51bd76"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   142,96,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739839356845935*^9, 3.7399749689695835`*^9, 
  3.7399769369504275`*^9, 
  3.7399970421038656`*^9},ExpressionUUID->"782b4cd9-9fb4-4d59-9d02-\
eaebdd6f2b02"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   142,97,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739839356845935*^9, 3.7399749689695835`*^9, 
  3.7399769369504275`*^9, 
  3.7399970438226967`*^9},ExpressionUUID->"cef8215f-7053-464e-bb96-\
1237ee5042f9"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   142,98,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739839356845935*^9, 3.7399749689695835`*^9, 
  3.7399769369504275`*^9, 
  3.739997047229258*^9},ExpressionUUID->"51cc50a4-114c-4152-9f4e-\
b5b76c1b86a2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Reduce\\\", \\\"::\\\", \
\\\"nsmet\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,142,99,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739839356845935*^9, 3.7399749689695835`*^9, 
  3.7399769369504275`*^9, 
  3.7399970472917414`*^9},ExpressionUUID->"3b511fd5-55c8-41a2-8fe2-\
62de874f8cfa"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"20", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"10", ",", "7"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"19", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"18", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"75", ",", "26"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"17", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"16", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"15", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"624", ",", "125"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"14", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"13", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"12", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"11", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"10", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"9", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"80", ",", "27"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"8", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"12", ",", "7"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"7", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"6", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"15", ",", "8"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"5", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"4", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"30", ",", "13"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"3", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"2", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"3", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"5", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"6", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"7", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"8", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"20", ",", "9"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"9", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"10", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"11", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"12", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"13", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"14", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"15", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"16", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"17", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"18", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"19", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "3"], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"20", " ", "x", " ", "y"}], "+", 
       SuperscriptBox["y", "4"]}]}], "\<\"Unknown\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7398393930628347`*^9, 3.73997501166395*^9, 
  3.739976975709977*^9, 
  3.7399970751886654`*^9},ExpressionUUID->"7d5b8e81-a745-4149-bcb3-\
c485c3981219"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ContourPlot3D", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "3"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"y", "^", "4"}], " ", "+", " ", 
     RowBox[{"n", " ", "y", " ", "x"}], " ", "-", " ", "1"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", 
     RowBox[{"-", "100"}], ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", "True"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.7402764310581098`*^9, 
  3.7402764327192907`*^9}},ExpressionUUID->"c2e1f822-6a02-4a5b-8b10-\
1236e752b075"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "7.    ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "35417cb1-b1f8-460e-9a47-c62f4e6919a4"],
 "  = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "5"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ca529eba-88c0-4a2f-b186-c074e6e2fd3c"],
 " + n y + 3  , n \[Element] {0, ... , 9}"
}], "Section",ExpressionUUID->"9923d2e0-5c44-4beb-9bbc-25f53bee327e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.739799196200268*^9, 3.7397992156584616`*^9}, 
   3.7398145912560854`*^9, 3.7398179317251387`*^9, {3.739877830229951*^9, 
   3.7398778360655603`*^9}, {3.739977038427045*^9, 
   3.7399770410459504`*^9}},ExpressionUUID->"13b12273-953b-460f-9dc1-\
fa265fb06140"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "==", 
      RowBox[{
       SuperscriptBox["y", "5"], "+", " ", 
       RowBox[{"#", " ", "y"}], " ", "+", " ", "3"}]}], "  ", "&"}], "  ", "/@",
     " ", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "9"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.739799196200268*^9, 3.7397992156584616`*^9}, 
   3.7398145912560854`*^9, 3.7398179317251387`*^9, {3.739877830229951*^9, 
   3.7398778360655603`*^9}, {3.739977038427045*^9, 
   3.7399770410459504`*^9}},ExpressionUUID->"a3204965-e77f-4955-b332-\
b899e00a11dd"],

Cell[TextData[{
 "As described in the table on page 790, the calculations that were performed \
for ",
 StyleBox["NKS",
  FontSlant->"Italic"],
 " were unable to determine whether the Diophantine equations ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    SuperscriptBox["x", "2"], "\[Equal]", 
    RowBox[{"3", "+", 
     RowBox[{"4", " ", "y"}], "+", 
     SuperscriptBox["y", "5"]}]}],
   FontWeight->"Bold"]],
  CellChangeTimes->{3.7398179324136057`*^9, 3.739821904293965*^9, 
   3.739823221476779*^9, 3.7398394631100197`*^9},ExpressionUUID->
  "5fd56815-5f15-4a44-9aa9-2d1fdeda1aa1"],
 " and ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "2"], "\[Equal]", 
   RowBox[{"3", "+", 
    RowBox[{"9", " ", "y"}], "+", 
    SuperscriptBox["y", "5"]}]}]],
  CellChangeTimes->{3.7398179324136057`*^9, 3.739821904293965*^9, 
   3.739823221476779*^9, 3.7398394631100197`*^9},
  FontWeight->"Bold",ExpressionUUID->"162de713-c331-4a01-aaf7-d677e198c5a3"],
 " have positive solutions.  We show below that they have no solutions."
}], "Text",
 CellChangeTimes->{{3.7399959573660965`*^9, 3.739996162485614*^9}, {
  3.739996425572727*^9, 3.739996576380108*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"895f91e4-3919-424c-9b73-adb05584e8bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{
  3.739821896133253*^9, {3.7398220206623025`*^9, 3.739822040963761*^9}, 
   3.7398268336837387`*^9, {3.739826904673292*^9, 3.739826905472756*^9}, 
   3.7398394669638553`*^9, 
   3.7399770528945894`*^9},ExpressionUUID->"0dff978e-6e3d-41ed-ba7d-\
caf2b52838c5"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   145,100,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7398394735680466`*^9, 3.7399750199518704`*^9, 
  3.7399770605231495`*^9, 3.7399963353314495`*^9, 
  3.7399971599845934`*^9},ExpressionUUID->"f76c97e7-bac1-47de-b34b-\
72073a18ea20"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   145,101,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7398394735680466`*^9, 3.7399750199518704`*^9, 
  3.7399770605231495`*^9, 3.7399963353314495`*^9, 
  3.739997162859774*^9},ExpressionUUID->"b769ef2d-6480-49cf-94af-\
c3dbf0adaad9"],

Cell[BoxData[
 TemplateBox[{
  "Reduce","nsmet",
   "\"This system cannot be solved with the methods available to Reduce.\"",2,
   145,102,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7398394735680466`*^9, 3.7399750199518704`*^9, 
  3.7399770605231495`*^9, 3.7399963353314495`*^9, 
  3.739997165687003*^9},ExpressionUUID->"1832a4b6-e0ba-4693-a634-\
2183eb956b61"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Reduce\\\", \\\"::\\\", \
\\\"nsmet\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,145,103,23587324452981772921,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7398394735680466`*^9, 3.7399750199518704`*^9, 
  3.7399770605231495`*^9, 3.7399963353314495`*^9, 
  3.739997165749487*^9},ExpressionUUID->"dce8fe50-7a65-4645-9fc7-\
3f18b5816b27"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       SuperscriptBox["y", "5"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", "y", "+", 
       SuperscriptBox["y", "5"]}]}], 
     RowBox[{"{", 
      RowBox[{"2537", ",", "23"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"2", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"3", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"4", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"5", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"6", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"7", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}]},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"8", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      SuperscriptBox["x", "2"], "\[Equal]", 
      RowBox[{"3", "+", 
       RowBox[{"9", " ", "y"}], "+", 
       SuperscriptBox["y", "5"]}]}], "\<\"No Solution\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.739839482258275*^9, 3.73997502946136*^9, 
  3.739977070511788*^9, 3.7399963436495323`*^9, 
  3.739997168311941*^9},ExpressionUUID->"8124cabe-425a-4705-8246-\
b1eaaa0d9f41"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ContourPlot3D", "[", " ", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "==", 
    RowBox[{
     SuperscriptBox["y", "5"], "+", " ", 
     RowBox[{"n", " ", "y"}], " ", "+", " ", "3"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "True"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.740274968508418*^9, 
  3.740274973203149*^9}},ExpressionUUID->"d6e619be-73b9-4db1-8cc0-\
067d85dd6981"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "8.    ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "8f8da1b0-dc11-4bc2-91de-6e8d3239f1c4"],
 " + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "3"], TraditionalForm]],ExpressionUUID->
  "b2b134f6-c2b1-4cb6-8e50-fed197cbec8a"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", 
    RowBox[{"2", " "}]], TraditionalForm]],ExpressionUUID->
  "c8ff7055-26e9-4d22-8b36-1bcc9236812e"],
 "+ n , n \[Element] {1, ... , 10}"
}], "Section",
 CellChangeTimes->{
  3.740143290450832*^9},ExpressionUUID->"162e092b-9f1d-4ae8-bb24-\
0106494458b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7398033636310053`*^9, 3.739803400673943*^9}, 
   3.7398394791722517`*^9, 3.739839524354382*^9, {3.739877180749775*^9, 
   3.739877185413296*^9}, {3.739877497197834*^9, 3.739877497385886*^9}, {
   3.7398790761325855`*^9, 3.739879079879641*^9}, {3.7399770667070827`*^9, 
   3.739977071666919*^9}},ExpressionUUID->"e90e0968-7412-4556-a84d-\
7dc1348badfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], " ", "+", " ", 
       SuperscriptBox["y", "3"]}], " ", "\[Equal]", " ", 
      RowBox[{
       SuperscriptBox["z", "2"], " ", "+", " ", "#"}]}], "  ", "&"}], "  ", "/@",
     " ", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "10"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7398033636310053`*^9, 3.739803400673943*^9}, 
   3.7398394791722517`*^9, 3.739839524354382*^9, {3.739877180749775*^9, 
   3.739877185413296*^9}, {3.739877497197834*^9, 3.739877497385886*^9}, {
   3.7398790761325855`*^9, 3.739879079879641*^9}, {3.7399770667070827`*^9, 
   3.739977071666919*^9}},ExpressionUUID->"9ae8e67e-7eff-4fa1-8a7d-\
84f8b35ee07b"],

Cell[TextData[{
 "In this case, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"eqnFindSolutions", "[", 
    RowBox[{"eqn", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], TraditionalForm]],
  ExpressionUUID->"e2731878-6c31-4223-a7e6-38a8b224e78c"],
 " returns ",
 Cell[BoxData[
  FormBox["\"\<Unknown\>\"", TraditionalForm]],ExpressionUUID->
  "319a7c5a-bf13-4354-a230-a3714d33fd5c"],
 ", we use ",
 Cell[BoxData[
  FormBox["eqnFindSmallestSolution", TraditionalForm]],ExpressionUUID->
  "4b688979-4ddd-4954-ad41-19950e583780"],
 " to attempt to find a solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], TraditionalForm]],
  ExpressionUUID->"a8f88dd2-fb33-4e31-a640-c688e407e4c1"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", "500"}], TraditionalForm]],ExpressionUUID->
  "d1e90947-0eb6-4a65-a71d-91ddba01f7c9"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "<", "500"}], TraditionalForm]],ExpressionUUID->
  "051a42a3-0627-43f6-8e1a-67bc55dc9139"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "<", "5000"}], TraditionalForm]],ExpressionUUID->
  "67d75551-ab5d-463e-8b0c-896c4a5a6dcc"],
 ".  Note that this calculation takes several minutes."
}], "Text",
 CellChangeTimes->{{3.740002778355059*^9, 
  3.7400029605599923`*^9}},ExpressionUUID->"f7145893-4958-460a-aa69-\
0f726d501d77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "\n", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnFindSolutions", "[", 
     RowBox[{"#", ",", " ", "vars", ",", " ", 
      RowBox[{
       RowBox[{"eqnFindSmallestSolution", "[", 
        RowBox[{"##", ",", 
         RowBox[{
          RowBox[{"x", "<", "500"}], " ", "&&", " ", 
          RowBox[{"y", "<", "500"}], " ", "&&", " ", 
          RowBox[{"z", "<", "5000"}]}]}], "]"}], "&"}]}], "]"}], "&"}], "/@", 
   " ", "setofEqns"}], "]"}]], "Code",
 CellChangeTimes->{{3.7398033355709424`*^9, 3.7398033467409215`*^9}, {
   3.739823321571724*^9, 3.7398233274185147`*^9}, {3.739823488834979*^9, 
   3.7398235072912083`*^9}, {3.739826840606063*^9, 3.7398268437881117`*^9}, {
   3.7398268769403696`*^9, 3.7398268850810213`*^9}, 3.7398394904586163`*^9, 
   3.739977117837604*^9, {3.739999380767791*^9, 3.7399993972205725`*^9}, {
   3.7399996078689795`*^9, 3.7399996095418496`*^9}, {3.7400005703416157`*^9, 
   3.740000590416856*^9}, 3.7400011773412013`*^9, {3.7400022279821033`*^9, 
   3.7400023271383233`*^9}},ExpressionUUID->"19ad46df-6807-4f61-982f-\
11c3a217ee5d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"1", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"2", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"107", ",", "232", ",", "3703"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"3", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"4", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "12", ",", "43"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"5", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "2"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"6", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "53", ",", "386"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"7", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"8", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"9", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"7", ",", "3", ",", "19"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"10", "+", 
       SuperscriptBox["z", "2"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "5"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7400011867695255`*^9, 3.7400015699745884`*^9, 
  3.740002687686973*^9},ExpressionUUID->"8ddfc297-d10d-4a4b-8127-\
e3ebb92d86b9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot3D", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], " ", "+", " ", 
       SuperscriptBox["y", "3"]}], " ", "\[Equal]", " ", 
      RowBox[{
       SuperscriptBox["z", "2"], " ", "+", " ", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Code",ExpressionUUID\
->"aa97dd6f-06a7-42fe-bfc5-e394294cba10"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "9.    ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "a455169b-c389-4088-be42-c99481bbdc4f"],
 " + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "3"], TraditionalForm]],ExpressionUUID->
  "2c558d3e-911b-4662-b46b-4d5216fadd32"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", 
    RowBox[{"3", " "}]], TraditionalForm]],ExpressionUUID->
  "b8e8aace-b755-4915-b436-b615a40f9e30"],
 "+ n , n \[Element] {-20, ... , 20}"
}], "Section",
 CellChangeTimes->{
  3.740143293764439*^9},ExpressionUUID->"bc6ede16-911c-4956-a752-\
d9d7125d7782"],

Cell["\<\
Equations of this form have been studied by Kenji Koyama, and more recently \
by Eric Rowland. \
\>", "Text",
 CellChangeTimes->{{3.7399877568031607`*^9, 3.7399878299713535`*^9}, {
  3.7400801631248217`*^9, 3.74008016572548*^9}, {3.7400823503462043`*^9, 
  3.740082356361659*^9}, {3.7400951325394707`*^9, 3.7400951784243684`*^9}, {
  3.7401503951234903`*^9, 3.740150395997149*^9}, {3.7401526546911407`*^9, 
  3.7401526694263372`*^9}, {3.740152718915187*^9, 
  3.740152729286175*^9}},ExpressionUUID->"2a1775a9-ff0f-4196-9056-\
8e97dcd59610"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7397993064316273`*^9, 3.739799333170824*^9}, 
   3.739823129852734*^9, {3.73983960982288*^9, 3.7398396125469913`*^9}, {
   3.7398810126274548`*^9, 3.739881013373005*^9}, {3.7399771857138643`*^9, 
   3.7399771885033865`*^9}},ExpressionUUID->"ff5991b3-ad0c-499c-8178-\
91534c7d8f3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", " ", 
       SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
      RowBox[{
       SuperscriptBox["z", "3"], " ", "+", " ", "#"}]}], " ", "&"}], "  ", "/@",
     " ", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "20"}], ",", "20"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7397993064316273`*^9, 3.739799333170824*^9}, 
   3.739823129852734*^9, {3.73983960982288*^9, 3.7398396125469913`*^9}, {
   3.7398810126274548`*^9, 3.739881013373005*^9}, {3.7399771857138643`*^9, 
   3.7399771885033865`*^9}, {3.7400871427042456`*^9, 3.740087143621461*^9}, {
   3.7400876244640074`*^9, 3.740087628875161*^9}, 3.7400876605516725`*^9, {
   3.7400878913906956`*^9, 3.740087901690895*^9}, {3.740088040030903*^9, 
   3.7400880418475494`*^9}, 3.7400924974309464`*^9, {3.740147394714014*^9, 
   3.740147394904001*^9}},ExpressionUUID->"69c6abc5-3e4a-4eab-b49a-\
8423961850c3"],

Cell[TextData[{
 "Note that if a Diophantine equation has no solutions modulo ",
 Cell[BoxData[
  FormBox["9", TraditionalForm]],ExpressionUUID->
  "97e88ac3-0cbc-45c7-a590-54c69430099a"],
 ", then it has no integer solutions."
}], "Text",
 CellChangeTimes->{{3.7401491111363306`*^9, 3.7401491650264187`*^9}, 
   3.740149509651445*^9},ExpressionUUID->"c6698f1e-7e5e-40cf-b769-\
96e46993726d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqnModulo9", "[", 
    RowBox[{"eqn_", ",", "var_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Switch", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{
       RowBox[{"Exists", "[", 
        RowBox[{"vars", ",", " ", "eqn"}], "]"}], ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"Modulus", "\[Rule]", "9"}]}], "]"}], ",", 
     "\[IndentingNewLine]", " ", "False", ",", "\[IndentingNewLine]", " ", 
     "\"\<No Solution\>\"", ",", "\[IndentingNewLine]", "_", ",", 
     "\[IndentingNewLine]", "\"\<Unknown\>\""}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7401491724795637`*^9, 3.7401491927847075`*^9}, {
  3.740149232370742*^9, 
  3.7401493193553443`*^9}},ExpressionUUID->"867564a6-de88-4817-9124-\
58fa7124628f"],

Cell[TextData[{
 "As reported in ",
 ButtonBox["https://doi.org/10.1090/S0025-5718-94-99733-0",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1090/S0025-5718-94-99733-0"], None},
  ButtonNote->"https://doi.org/10.1090/S0025-5718-94-99733-0"],
 ", in 1994 Kenji Koyama published a table of all integer solutions to the \
Diophantine equation ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["y", "3"]}], "\[Equal]", 
   RowBox[{"n", "+", 
    SuperscriptBox["z", "3"]}]}]],
  CellChangeTimes->{3.740003646944165*^9, 3.7400037522563567`*^9},
  ExpressionUUID->"d0b863e1-e35b-4aec-a85e-7907794b71c0"],
 " where  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"max", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"|", "x", "|"}], ",", 
       RowBox[{"|", "y", "|"}], ",", 
       RowBox[{"|", "z", "|"}]}], ")"}]}], "<", "2097151"}], 
   TraditionalForm]],ExpressionUUID->"536aef9d-5f85-434d-a32a-7c74e080a25c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", " ", "<", " ", "n", " ", "<", " ", "1000"}], 
   TraditionalForm]],ExpressionUUID->"0e2955ac-1d01-465c-9845-e43d2a0adff4"],
 ".  Errors in that table have been corrected by Eric Rowland (see page 4 of ",
 ButtonBox["https://people.hofstra.edu/Eric_Rowland/papers/Known_families_of \
_integer _solutions _of _x %5 E3+y %5 E3+z %5 E3=n.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://people.hofstra.edu/Eric_Rowland/papers/Known_families_of_\
integer_solutions_of_x%5E3+y%5E3+z%5E3=n.pdf"], None},
  ButtonNote->
   "https://people.hofstra.edu/Eric_Rowland/papers/Known_families_of_integer_\
solutions_of_x%5E3+y%5E3+z%5E3=n.pdf"],
 "), and the corrected table is available online at  ",
 ButtonBox["https://people.hofstra.edu/Eric_Rowland/data/koyama.m",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://people.hofstra.edu/Eric_Rowland/data/koyama.m"], None},
  ButtonNote->"https://people.hofstra.edu/Eric_Rowland/data/koyama.m"],
 ".  Alternatively, if appropriate values for the ",
 Cell[BoxData[
  FormBox["\"\<SieveMaxPoints \>\"", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "83793b74-ec2a-48ed-ac46-13bc57ddc922"],
 " option are used (see ",
 ButtonBox["http://reference.wolfram.com/language/tutorial/DiophantineReduce.\
html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/tutorial/DiophantineReduce.\
html"], None},
  ButtonNote->
   "http://reference.wolfram.com/language/tutorial/DiophantineReduce.html"],
 "), it may be possible for the Wolfram Language built-in command ",
 Cell[BoxData[
  FormBox["FindInstance", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "89c9e7fb-be50-45cd-8c31-45b4c3905231"],
 " to find the solutions in Koyama\[CloseCurlyQuote]s table, but those \
calculations are likely to be time-consuming.  Instead, we will rely on \
Koyama\[CloseCurlyQuote]s table.  The command ",
 Cell[BoxData[
  FormBox[
   RowBox[{"eqnKoyamaTable", "[", 
    RowBox[{"eqn", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4013323f-4297-456a-a214-1d5d8bfa1709"],
 " outputs the smallest positive solution for some of the equations in Koyama\
\[CloseCurlyQuote]s table."
}], "Text",
 CellChangeTimes->{{3.7400651854385986`*^9, 3.7400651920069985`*^9}, {
   3.74006546361021*^9, 3.7400654893294106`*^9}, {3.740065519850775*^9, 
   3.740065519853767*^9}, {3.7400655938378863`*^9, 3.740065817157584*^9}, {
   3.740065885057975*^9, 3.7400658961187105`*^9}, {3.7400668114429445`*^9, 
   3.7400668343641157`*^9}, {3.740070568724814*^9, 3.740070569984954*^9}, 
   3.7400707772737074`*^9, {3.7401480624416084`*^9, 3.740148080154232*^9}, {
   3.7401482326669493`*^9, 3.740148367948742*^9}, {3.7401484046825953`*^9, 
   3.74014847996402*^9}, {3.740148510403079*^9, 3.7401486218864236`*^9}, {
   3.740148719371191*^9, 3.740148918689125*^9}, {3.7401489549798365`*^9, 
   3.7401490198231277`*^9}, {3.740149516911857*^9, 
   3.7401495316354823`*^9}},ExpressionUUID->"57317dae-af0c-438d-bf1c-\
1b025046615a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eqnKoyamaTable", "[", 
     RowBox[{"eqn_", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], ":=", " ", 
    RowBox[{"Switch", "[", 
     RowBox[{"eqn", ",", "  ", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "-", "20"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"107", ",", "137", ",", "156"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "-", "17"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"103", ",", "111", ",", "135"}], "}"}], ",", " ", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "-", "15"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"262", ",", "265", ",", "332"}], "}"}], ",", " ", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "-", "12"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"5725013", ",", "9019406", ",", "9730705"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "-", "9"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"52", ",", " ", "216", ",", " ", "217"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "-", "7"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"605809", ",", "680316", ",", "812918"}], "}"}], ",", " ", 
      "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "+", "2"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"1214928", ",", "3480205", ",", "3528875"}], "}"}], ",", " ", 
      "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "+", "6"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"10529", ",", "60248", ",", "60355"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "+", "9"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"2097", ",", "11305", ",", "11329"}], "}"}], ",", " ", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "+", "10"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"130", ",", "141", ",", "171"}], "}"}], ",", " ", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "+", "11"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"297", ",", "619", ",", "641"}], "}"}], ",", " ", "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "+", "16"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"2429856", ",", "6960410", ",", "7057750"}], "}"}], ",", " ", 
      "\n", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "3"], "+", " ", 
        SuperscriptBox["y", "3"]}], "\[Equal]", " ", 
       RowBox[{
        SuperscriptBox["z", "3"], " ", "+", "18"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"94", ",", "101", ",", "123"}], "}"}], ",", "\n", "_", ",", 
      RowBox[{"eqnModulo9", "[", 
       RowBox[{"eqn", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], "\n", "]"}]}], 
   ";"}], " "}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.740084374483575*^9, 3.7400844066146317`*^9}, {
  3.7400844807244153`*^9, 3.74008450382799*^9}, {3.7400850993538074`*^9, 
  3.7400851881601205`*^9}, {3.740085792005845*^9, 3.7400858165022416`*^9}, {
  3.740087214239986*^9, 3.7400874675023756`*^9}, {3.7400877068251886`*^9, 
  3.7400877089490414`*^9}, {3.740087835195419*^9, 3.7400878743227634`*^9}, {
  3.740087978965633*^9, 3.7400879922970085`*^9}, {3.740089146532076*^9, 
  3.740089160231731*^9}, {3.7400925209564133`*^9, 3.7400925724246597`*^9}, {
  3.7401096771558657`*^9, 3.7401096847375865`*^9}, {3.740146759290219*^9, 
  3.7401467636654444`*^9}, {3.7401468294005995`*^9, 3.7401468331967278`*^9}, {
  3.7401472284005594`*^9, 3.740147247588019*^9}, {3.740147678399688*^9, 
  3.740147779824668*^9}, {3.7401495536981087`*^9, 3.7401495658236227`*^9}, {
  3.740150232148106*^9, 
  3.740150265458294*^9}},ExpressionUUID->"f6ae41fd-1e97-4862-a26b-\
7053ef083612"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eqnFindSolutions", "[", 
      RowBox[{"#", ",", " ", "vars", ",", " ", "eqnKoyamaTable"}], "]"}], " ",
      "&"}], " ", "/@", " ", "setofEqns"}], "]"}], " "}]], "Code",
 CellChangeTimes->{{3.7400827546165323`*^9, 3.7400827650141325`*^9}, {
   3.7400828997192173`*^9, 3.740082902987479*^9}, {3.7400831360216484`*^9, 
   3.7400831765620317`*^9}, {3.740083499453047*^9, 3.7400835356980333`*^9}, {
   3.740083617996928*^9, 3.7400836237475796`*^9}, {3.740084291594409*^9, 
   3.740084305346585*^9}, {3.7400849022165704`*^9, 3.740084914201564*^9}, {
   3.7400849448777657`*^9, 3.740084948749905*^9}, 3.740088098057288*^9, {
   3.7401468059647045`*^9, 3.740146812182066*^9}, {3.740146846144667*^9, 
   3.7401468507214746`*^9}, {3.74014936921521*^9, 3.740149383918991*^9}, {
   3.740149595369708*^9, 
   3.740149596198138*^9}},ExpressionUUID->"e0597ccf-4c2b-4c75-bfa2-\
b89578e4263b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "20"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"107", ",", "137", ",", "156"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "19"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"16", ",", "14", ",", "19"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "18"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "3"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "17"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"103", ",", "111", ",", "135"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "16"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"10", ",", "12", ",", "14"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "15"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"262", ",", "265", ",", "332"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "14"}], "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "13"}], "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "12"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"5725013", ",", "9019406", ",", "9730705"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "11"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "10"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "4"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "9"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"52", ",", "216", ",", "217"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "8"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"16", ",", "12", ",", "18"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "7"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"605809", ",", "680316", ",", "812918"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"6", ",", "8", ",", "9"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      SuperscriptBox["z", "3"]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"1", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"2", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"1214928", ",", "3480205", ",", "3528875"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"3", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "5"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"4", "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"5", "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"6", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"10529", ",", "60248", ",", "60355"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"7", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"104", ",", "32", ",", "105"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"8", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"9", "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"Unknown\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"10", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"130", ",", "141", ",", "171"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"11", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"297", ",", "619", ",", "641"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"12", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"10", ",", "7", ",", "11"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"13", "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"14", "+", 
       SuperscriptBox["z", "3"]}]}], "\<\"No Solution\"\>"},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"15", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"16", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"2429856", ",", "6960410", ",", "7057750"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"17", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"50", ",", "25", ",", "52"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"18", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"94", ",", "101", ",", "123"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"19", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"76", ",", "26", ",", "77"}], "}"}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       SuperscriptBox["y", "3"]}], "\[Equal]", 
      RowBox[{"20", "+", 
       SuperscriptBox["z", "3"]}]}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7401471574268427`*^9, 3.7401475227600927`*^9, 
  3.7401478488850107`*^9, 3.7401496417936096`*^9, 
  3.74015039298621*^9},ExpressionUUID->"ed5488bc-5066-4c48-ba58-6c0137d7619f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot3D", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], " ", "+", " ", 
       SuperscriptBox["y", "3"]}], " ", "\[Equal]", " ", 
      RowBox[{
       SuperscriptBox["z", "3"], " ", "+", " ", "n"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
   " ", "\n", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.74007995623322*^9, 3.740080054433813*^9}, {
  3.740080220096131*^9, 3.7400802404810076`*^9}, {3.740094759307304*^9, 
  3.740094774949684*^9}},ExpressionUUID->"e02511b2-f8a3-4237-a5dc-\
f6653fb73ac1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = -5., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], -20, 20}}, Typeset`size$$ = {
    576., {243., 252.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$419572$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = -20}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$419572$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ContourPlot3D[$CellContext`x^3 + $CellContext`y^3 == $CellContext`z^3 + \
$CellContext`n$$, {$CellContext`x, -10, 10}, {$CellContext`y, -10, 
         10}, {$CellContext`z, -100, 100}, AxesLabel -> True, PerformanceGoal -> 
        "Quality"], "Specifications" :> {{$CellContext`n$$, -20, 20}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{650., {317., 327.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7400799827034245`*^9, 3.7400800555648985`*^9}, {
  3.7400802248864036`*^9, 3.7400802411118364`*^9}, {3.7400947652301936`*^9, 
  3.7400947763253374`*^9}},ExpressionUUID->"2443bf19-27a3-45d5-844d-\
153e9323bd52"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Extensions", "Section",
 CellChangeTimes->{{3.7401767606174765`*^9, 
  3.740176762213278*^9}},ExpressionUUID->"21874a75-7f3c-4f16-9d5f-\
05c4e8bd1c84"],

Cell["\<\
In this section, we attempt to extend the results of this investigation by \
studying the space of all two-variable Diophantine equations for potential \
latent structures or insight into underlying patterns which might inform on \
the undecidability of the sets of solutions of Diophantine equations. First, \
we construct a enumeration of all Diophantine equations in two variables. \
\>", "Text",
 CellChangeTimes->{{3.7402768214574633`*^9, 3.740276996187995*^9}, {
  3.7402770463486605`*^9, 3.740277067894277*^9}, {3.740277120533238*^9, 
  3.7402771304558983`*^9}},ExpressionUUID->"6ff398f8-0221-464c-b3c3-\
9bf552e91a86"],

Cell[CellGroupData[{

Cell["\<\
Constructing the enumeration of two-variable Diophantine equations\
\>", "Subsubsection",
 CellChangeTimes->{{3.7402771468057966`*^9, 
  3.740277178148245*^9}},ExpressionUUID->"8d4c540d-8140-4a4a-9722-\
65520276de01"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["NthInteger", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fc6a01cc-d153-4921-a894-bf14fa2dfb26"],
 " is a bijection from the non-negative integers to the integers."
}], "Text",
 CellChangeTimes->{{3.740177352533576*^9, 
  3.740177394907443*^9}},ExpressionUUID->"73ba1e62-5017-4ec4-91e2-\
a6bb01d6d9c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NthInteger", "[", "n_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"n", "/", "2"}], 
         RowBox[{"EvenQ", "[", "n", "]"}]},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"n", "+", "1"}], ")"}]}], "/", "2"}], 
         RowBox[{"OddQ", "[", "n", "]"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Code",
 CellChangeTimes->{{3.7401764089372883`*^9, 3.7401764466917524`*^9}, {
  3.7401765687997713`*^9, 3.74017658703164*^9}, {3.740176640664104*^9, 
  3.740176642098057*^9}, {3.740176685777035*^9, 3.7401767174377527`*^9}, {
  3.7401767810493393`*^9, 
  3.740176815140481*^9}},ExpressionUUID->"80568171-6165-4d9f-8286-\
7877282d3fcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"NthInteger", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.7401768197344284`*^9, 
  3.7401768450236316`*^9}},ExpressionUUID->"751ded76-c97c-49a8-a9a2-\
1e2698d0ec67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "2"}], ",", "2", ",", 
   RowBox[{"-", "3"}], ",", "3", ",", 
   RowBox[{"-", "4"}], ",", "4", ",", 
   RowBox[{"-", "5"}], ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.740176845931181*^9, 3.7401774041891575`*^9, 
  3.740278513332127*^9, 
  3.740278563766465*^9},ExpressionUUID->"532036c0-efaa-4be2-97cc-\
dbac4d786b59"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["ElegantUnpair", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "21158460-4125-44f4-a65d-fb7770c0c06d"],
 " is the bijection from the non-negative integers to pairs of non-negative \
integers that is described at ",
 ButtonBox["http://szudzik.com/ElegantPairing.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://szudzik.com/ElegantPairing.pdf"], None},
  ButtonNote->"http://szudzik.com/ElegantPairing.pdf"],
 "."
}], "Text",
 CellChangeTimes->{{3.7401774117257776`*^9, 3.7401775124239635`*^9}, {
  3.740177637044568*^9, 
  3.740177638139455*^9}},ExpressionUUID->"b090c3a9-5396-4189-8757-\
fabbbc74b8c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ElegantUnpair", "[", "z_", "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"z", "-", 
            SuperscriptBox[
             RowBox[{"Floor", "[", 
              SqrtBox["z"], "]"}], "2"]}], ",", 
           RowBox[{"Floor", "[", 
            SqrtBox["z"], "]"}]}], "}"}], 
         RowBox[{
          RowBox[{"z", "-", 
           SuperscriptBox[
            RowBox[{"Floor", "[", 
             SqrtBox["z"], "]"}], "2"]}], "<", " ", 
          RowBox[{"Floor", "[", 
           SqrtBox["z"], "]"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Floor", "[", 
            SqrtBox["z"], "]"}], ",", 
           RowBox[{"z", "-", 
            SuperscriptBox[
             RowBox[{"Floor", "[", 
              SqrtBox["z"], "]"}], "2"], "-", 
            RowBox[{"Floor", "[", 
             SqrtBox["z"], "]"}]}]}], "}"}], 
         RowBox[{
          RowBox[{"z", "-", 
           SuperscriptBox[
            RowBox[{"Floor", "[", 
             SqrtBox["z"], "]"}], "2"]}], "\[GreaterEqual]", " ", 
          RowBox[{"Floor", "[", 
           SqrtBox["z"], "]"}]}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Code",
 CellChangeTimes->{{3.740177237889633*^9, 3.7401773304543886`*^9}, {
  3.7401776288933644`*^9, 
  3.740177807808121*^9}},ExpressionUUID->"f2695f2b-e513-44f5-9fed-\
7ec6a1f0cade"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ElegantUnpair", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "24"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.740177528587438*^9, 3.7401775460800257`*^9}, {
  3.7401778154976645`*^9, 
  3.740177816805792*^9}},ExpressionUUID->"d77a3225-643f-4ae6-98bb-\
6c0d2b49b94c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7401775471289573`*^9, 3.7401778183193755`*^9, 
  3.7402785136109753`*^9, 
  3.7402785640615225`*^9},ExpressionUUID->"4b45e955-b286-4015-83cb-\
ff7c4c81ee72"]
}, Open  ]],

Cell["\<\
NthPolynomial is a bijection from the positive integers to the two-variable \
polynomials with integer coefficients.\
\>", "Text",
 CellChangeTimes->{{3.7401779220561976`*^9, 3.740177928771592*^9}, {
  3.7401780062744856`*^9, 
  3.740178040386812*^9}},ExpressionUUID->"265f82be-54fe-4566-ac8a-\
1b3792633920"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NthPolynomial", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Plus", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"NthInteger", "[", "#2", "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "#1"], 
           SuperscriptBox["y", "#2"]}], "&"}], "@@", 
         RowBox[{"ElegantUnpair", "[", 
          RowBox[{
           RowBox[{"PrimePi", "[", "#1", "]"}], "-", "1"}], "]"}]}], ")"}]}], 
      "&"}], " ", "@@@", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[NotEqual]", "1"}], ",", 
       RowBox[{"FactorInteger", "[", "n", "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], ")"}]}]}]], "Code",
 CellChangeTimes->{{3.392983673568292*^9, 3.392983727530189*^9}, {
   3.7401768891872807`*^9, 3.740176894498248*^9}, 
   3.7401781425650496`*^9},ExpressionUUID->"a3895121-c979-449e-836b-\
20f54a09cf29"],

Cell["\<\
For example, here are the first one hundred polynomials in the enumeration.\
\>", "Text",
 CellChangeTimes->{{3.7401781728478317`*^9, 3.7401781747546253`*^9}, {
  3.740178274161769*^9, 
  3.7401782822952137`*^9}},ExpressionUUID->"dbe5c6f7-f07b-4570-9c7d-\
8dda75b0a680"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NthPolynomial", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}], " ", "//", " ", 
  "ColumnForm"}]], "Code",
 CellChangeTimes->{
  3.74017691134243*^9, {3.7401781794275713`*^9, 3.740178179813109*^9}, {
   3.740178225540105*^9, 3.7401782262792187`*^9}, {3.7401783692778883`*^9, 
   3.740178375223379*^9}},ExpressionUUID->"bc3a6fd0-01d6-4e70-a6fc-\
06ce6cb6839f"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"0"},
    {
     RowBox[{"-", "1"}]},
    {
     RowBox[{"-", "y"}]},
    {"1"},
    {
     RowBox[{"-", "x"}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "y"}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], " ", "y"}]},
    {
     RowBox[{"-", "2"}]},
    {"y"},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "x"}]},
    {
     RowBox[{"-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{"1", "-", "y"}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], "-", "y"}]},
    {"2"},
    {
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", "y"}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], " ", "y"}]},
    {
     RowBox[{"1", "-", "x"}]},
    {
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], " ", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], "-", "y"}]},
    {"x"},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], " ", "y"}]},
    {
     RowBox[{"1", "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{"-", 
      SuperscriptBox["y", "3"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "x", "-", "y"}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      SuperscriptBox["y", "3"]}]},
    {
     RowBox[{"-", "3"}]},
    {
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["x", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{"1", "+", "y"}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], " ", 
      SuperscriptBox["y", "3"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], "-", "x"}]},
    {
     RowBox[{"-", 
      SuperscriptBox["x", "3"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "y", "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "3"]}], " ", "y"}]},
    {
     RowBox[{"1", "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], "+", "y"}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "3"]}], " ", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{"2", "-", "y"}]},
    {
     RowBox[{"x", " ", "y"}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "-", "y"}]},
    {
     RowBox[{"1", "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "3"]}], " ", 
      SuperscriptBox["y", "3"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["y", "3"]}]},
    {
     RowBox[{"-", 
      SuperscriptBox["y", "4"]}]},
    {
     RowBox[{"1", "-", "x", "-", "y"}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      SuperscriptBox["y", "4"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "3"]}]}]},
    {
     RowBox[{"y", "-", 
      RowBox[{"x", " ", "y"}]}]},
    {"3"},
    {
     RowBox[{
      RowBox[{"-", "x"}], "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "y", "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], " ", 
      SuperscriptBox["y", "4"]}]},
    {
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "x", "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "3"]}], " ", 
      SuperscriptBox["y", "4"]}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], "+", "y"}]},
    {
     RowBox[{"-", 
      SuperscriptBox["x", "4"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["y", "3"]}]}]},
    {
     RowBox[{"x", "-", "y"}]},
    {
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], " ", "y"}], "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "y", "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "4"]}], " ", "y"}]},
    {
     RowBox[{"2", "-", "x"}]},
    {
     RowBox[{"2", " ", "y"}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["x", "3"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "4"]}], " ", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{"1", "-", "y", "-", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], "-", 
      SuperscriptBox["x", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{
       SuperscriptBox["x", "3"], " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      SuperscriptBox["y", "3"]}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "4"]}], " ", 
      SuperscriptBox["y", "3"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", "x", "+", "y"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], " ", "y"}], "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      RowBox[{"x", " ", 
       SuperscriptBox["y", "3"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{
       SuperscriptBox["x", "3"], " ", 
       SuperscriptBox["y", "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "x"}], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "3"}], "-", "y"}]},
    {
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "4"]}], " ", 
      SuperscriptBox["y", "4"]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"x", " ", "y"}]}]},
    {
     RowBox[{"y", "-", 
      SuperscriptBox["y", "2"]}]},
    {
     RowBox[{"1", "+", "x"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   0, -1, -$CellContext`y, 
    1, -$CellContext`x, -1 - $CellContext`y, -$CellContext`x $CellContext`y, \
-2, $CellContext`y, -1 - $CellContext`x, -$CellContext`y^2, 
    1 - $CellContext`y, -$CellContext`x $CellContext`y^2, -1 - $CellContext`x \
$CellContext`y, -$CellContext`x - $CellContext`y, 
    2, -$CellContext`x^2, -1 + $CellContext`y, -$CellContext`x^2 \
$CellContext`y, 
    1 - $CellContext`x, -$CellContext`y - $CellContext`x $CellContext`y, -1 - \
$CellContext`y^2, -$CellContext`x^2 $CellContext`y^2, -2 - $CellContext`y, \
$CellContext`x, -1 - $CellContext`x $CellContext`y^2, (-2) $CellContext`y, 
    1 - $CellContext`x $CellContext`y, -$CellContext`y^3, -1 - $CellContext`x - \
$CellContext`y, -$CellContext`x $CellContext`y^3, -3, -$CellContext`y - \
$CellContext`y^2, -1 - $CellContext`x^2, -$CellContext`x - $CellContext`x \
$CellContext`y, 
    1 + $CellContext`y, -$CellContext`x^2 $CellContext`y^3, -1 - \
$CellContext`x^2 $CellContext`y, -$CellContext`y - $CellContext`x \
$CellContext`y^2, -2 - $CellContext`x, -$CellContext`x^3, -1 - $CellContext`y - \
$CellContext`x $CellContext`y, -$CellContext`x^3 $CellContext`y, 
    1 - $CellContext`y^2, -$CellContext`x + $CellContext`y, -1 - \
$CellContext`x^2 $CellContext`y^2, -$CellContext`x^3 $CellContext`y^2, 
    2 - $CellContext`y, $CellContext`x $CellContext`y, -1 + $CellContext`x, \
-$CellContext`x^2 - $CellContext`y, 
    1 - $CellContext`x $CellContext`y^2, -$CellContext`x^3 $CellContext`y^3, \
-1 - 2 $CellContext`y, -$CellContext`x - $CellContext`y^2, -2 - \
$CellContext`x $CellContext`y, -$CellContext`y - $CellContext`x^2 \
$CellContext`y, -1 - $CellContext`y^3, -$CellContext`y^4, 
    1 - $CellContext`x - $CellContext`y, -$CellContext`x $CellContext`y^4, -1 - \
$CellContext`x $CellContext`y^3, $CellContext`y - $CellContext`x \
$CellContext`y, 
    3, -$CellContext`x - $CellContext`x $CellContext`y^2, -1 - $CellContext`y - \
$CellContext`y^2, -$CellContext`x^2 $CellContext`y^4, 
    1 - $CellContext`x^2, -$CellContext`y - $CellContext`x^2 \
$CellContext`y^2, -1 - $CellContext`x - $CellContext`x $CellContext`y, \
-$CellContext`x^3 $CellContext`y^4, -2 + $CellContext`y, -$CellContext`x^4, \
-1 - $CellContext`x^2 $CellContext`y^3, $CellContext`x - $CellContext`y, 
    1 - $CellContext`x^2 $CellContext`y, -$CellContext`x $CellContext`y - \
$CellContext`y^2, -1 - $CellContext`y - $CellContext`x $CellContext`y^2, \
-$CellContext`x^4 $CellContext`y, 2 - $CellContext`x, 
    2 $CellContext`y, -1 - $CellContext`x^3, -$CellContext`x^4 \
$CellContext`y^2, 
    1 - $CellContext`y - $CellContext`x $CellContext`y, -$CellContext`x - \
$CellContext`x^2, -1 - $CellContext`x^3 $CellContext`y, -$CellContext`y - \
$CellContext`y^3, -2 - $CellContext`y^2, -$CellContext`x^4 $CellContext`y^3, \
-1 - $CellContext`x + $CellContext`y, -$CellContext`x $CellContext`y - \
$CellContext`x $CellContext`y^2, 
    1 - $CellContext`x^2 $CellContext`y^2, -$CellContext`y - $CellContext`x \
$CellContext`y^3, -1 - $CellContext`x^3 $CellContext`y^2, -$CellContext`x - \
$CellContext`x^2 $CellContext`y, -3 - $CellContext`y, -$CellContext`x^4 \
$CellContext`y^4, -1 + $CellContext`x $CellContext`y, $CellContext`y - \
$CellContext`y^2, 1 + $CellContext`x}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7401769006856017`*^9, 3.7401769120690155`*^9}, 
   3.7401781972702074`*^9, 3.7401782273796916`*^9, 3.740278513911072*^9, 
   3.7402785643512926`*^9},ExpressionUUID->"9ac0b091-119e-4717-96bb-\
1e409532e90e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computing the solutions of a set of Diophantine equations", \
"Subsubsection",
 CellChangeTimes->{{3.740277205117388*^9, 
  3.740277258243889*^9}},ExpressionUUID->"fe1b4e1f-b01d-4d8f-83f4-\
79b58cf9e935"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7401784075618334`*^9, 3.740178411901999*^9}, 
   3.740178618378519*^9},ExpressionUUID->"4a2e4232-a699-46e4-aa34-\
0b6a20db6fc2"],

Cell["\<\
One may select the number of Diophantine equations they wish to study below. \
\>", "Text",
 CellChangeTimes->{{3.7402773485012627`*^9, 
  3.740277373995455*^9}},ExpressionUUID->"c3beded2-affc-469e-b58a-\
af32d9a9fe2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setofEqns", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[Equal]", "0"}], "&"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NthPolynomial", "[", "n", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "3000", ",", "5000"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7401783863945913`*^9, 3.740178401025859*^9}, {
   3.7401784388408995`*^9, 3.7401784453216095`*^9}, 3.740178646038557*^9, 
   3.7401787903804264`*^9, {3.7401935226485043`*^9, 3.7401935310128865`*^9}, {
   3.740213374574303*^9, 3.7402134024175854`*^9}, {3.7402431693347826`*^9, 
   3.740243172545577*^9}, {3.7402433010227947`*^9, 3.740243319886883*^9}, {
   3.7402454734059114`*^9, 3.7402454787475204`*^9}, {3.7402772611705723`*^9, 
   3.740277266466278*^9}, {3.740278411580594*^9, 3.7402784150704784`*^9}, {
   3.740278585064454*^9, 3.7402785856241064`*^9}, 3.740279799592235*^9, {
   3.7402800796901655`*^9, 
   3.7402800824829073`*^9}},ExpressionUUID->"752b5170-1595-4635-92fa-\
63ce3a924826"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eqnFindSolutions", "[", 
       RowBox[{"#", ",", " ", "vars"}], "]"}], " ", "&"}], " ", "/@", " ", 
     "setofEqns"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7401785841044483`*^9, 3.7401785875801506`*^9}, {
   3.740193608208375*^9, 3.7401936119800434`*^9}, {3.7402773219247084`*^9, 
   3.7402773356288333`*^9}, {3.74027847872593*^9, 3.740278481141057*^9}, 
   3.740280077259494*^9},ExpressionUUID->"e840f194-1f75-4149-9137-\
b1f8b928e89e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analyzing the Results ", "Subsubsection",
 CellChangeTimes->{{3.7402772715834417`*^9, 
  3.7402772881117935`*^9}},ExpressionUUID->"577c6a89-df48-499c-bef0-\
c2e90b48a208"],

Cell["Get a list of all the solutions offered in the data:", "Text",
 CellChangeTimes->{{3.740278873115074*^9, 3.740278892807469*^9}, {
  3.7402793614241643`*^9, 
  3.7402793740922637`*^9}},ExpressionUUID->"f9280243-28e5-435d-8f3d-\
da3c4908ea37"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqnlist", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "#", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "  ", "&"}], " ", "/@", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "eqnlist", "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.74027935629757*^9, 3.740279390874724*^9}, {
   3.7402794825010624`*^9, 3.7402795248131156`*^9}, 
   3.7402799334772005`*^9},ExpressionUUID->"e2d0eebc-0179-4745-a172-\
c16c9d8cc426"],

Cell[TextData[{
 "Clean the list ",
 Cell[BoxData[
  FormBox["points", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "06ede274-81f4-45f9-aa94-a104097cb914"],
 " so that it is in a form we can plot it through. "
}], "Text",
 CellChangeTimes->{{3.7402797388731384`*^9, 
  3.7402797749668865`*^9}},ExpressionUUID->"7d27133b-27f1-4b6d-aea8-\
2a5242daa40c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"points2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_"}], "}"}]}], " ", "]"}], ",", " ", "#"}], " ", 
      "]"}], "&"}], " ", "/@", " ", "points"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.740278614019071*^9, 3.740278662503854*^9}, {
   3.740278853322834*^9, 3.740278949300091*^9}, {3.740279530453616*^9, 
   3.7402795438872004`*^9}, {3.740279597833558*^9, 3.740279658054425*^9}, 
   3.7402798210294275`*^9},ExpressionUUID->"68eb573d-51df-484a-89ac-\
9f974aae2167"],

Cell[TextData[{
 "Plot the set of points ",
 Cell[BoxData[
  FormBox["points2", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "66f8afc7-590c-4870-a1d2-406286b3ae2e"],
 ":"
}], "Text",
 CellChangeTimes->{{3.740279730392814*^9, 3.740279733044797*^9}, {
  3.7402797790227137`*^9, 
  3.7402797910796013`*^9}},ExpressionUUID->"8ad53740-97a4-4d06-871a-\
eaa0596aa770"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "points2", "]"}]], "Code",
 CellChangeTimes->{{3.7402791823169127`*^9, 3.7402791944821014`*^9}, 
   3.740279384680208*^9, {3.7402796636146913`*^9, 3.74027968579758*^9}, {
   3.7402797161550236`*^9, 3.740279719765541*^9}, {3.7402798323870587`*^9, 
   3.740279837806301*^9}, {3.74027992803115*^9, 
   3.7402799287159634`*^9}},ExpressionUUID->"ffd18193-c3dd-4649-abc6-\
9d5d617d36aa"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGD4CcQgGgI+2NOGFnEgTT0DierpRQtQ6C4OAvph/ibV/+jq
aR1+1DYfl3kwcfRwp5b9gyWdUeqOgfIHveyldfjgkieUX8nN55S6a6DjY6Di
G718JDd+qEUPtP2Uhi+1w3GohsdgyVeUhh+t60Vy2y/Emkfvep3c9ha1wn+o
5Bdc8Qmj7Sn0B6n9A2r7a7DHA6X9DnLzJyF5WpWL1PIvsel4oPMVZvoHAAe3
EsE=
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9531250000000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 4.}, {0, 31.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7402796701856475`*^9, 3.7402796863967085`*^9}, 
   3.7402797201964865`*^9, 3.7402798231273813`*^9, 
   3.7402801049330235`*^9},ExpressionUUID->"f4e929eb-9e93-4ccf-b6b3-\
43fa9ba27206"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1316, 944},
WindowMargins->{{Automatic, -10}, {Automatic, 0}},
Magnification:>1.6 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 106, "Section",ExpressionUUID->"4e4c6b69-9e43-4243-8a5d-13337fcf66e0"],
Cell[754, 27, 130, 1, 80, "Code",ExpressionUUID->"79c166e3-8bf6-4498-92fe-9b392c94ec45"],
Cell[887, 30, 459, 13, 55, "Text",ExpressionUUID->"ef1f05e8-daa6-4417-a8fd-efa757a0fa23"],
Cell[1349, 45, 2105, 32, 80, "Code",ExpressionUUID->"ad5d5aa1-1723-468b-9f82-4f0c7da9c633"],
Cell[3457, 79, 733, 20, 55, "Text",ExpressionUUID->"8c096619-c29c-4972-b77a-1173c92cddf1"],
Cell[4193, 101, 2206, 37, 80, "Code",ExpressionUUID->"018f386d-5099-423a-8f55-9b5493cd940c"],
Cell[6402, 140, 922, 23, 91, "Text",ExpressionUUID->"d350f633-6a85-4412-a6bc-cce3431b9ec1"],
Cell[7327, 165, 2475, 41, 109, "Code",ExpressionUUID->"80c2fb93-64e7-4966-8b79-72799348fc82"],
Cell[9805, 208, 866, 23, 91, "Text",ExpressionUUID->"fa6f1604-8470-44d9-8966-039408d425f7"],
Cell[10674, 233, 2466, 40, 109, "Code",ExpressionUUID->"87f40649-d29a-4c2d-8912-d2aee25ab34e"],
Cell[13143, 275, 1059, 31, 91, "Text",ExpressionUUID->"f07e2ab1-08c6-436a-9fd0-a0b096f48ea9"],
Cell[14205, 308, 2638, 48, 109, "Code",ExpressionUUID->"65538e9f-ecb5-4cd0-8bb2-19e95e77c59b"],
Cell[16846, 358, 1026, 26, 91, "Text",ExpressionUUID->"9e59c87b-2a51-4509-9bb7-fb980c3e86c6"],
Cell[17875, 386, 3045, 54, 221, "Code",ExpressionUUID->"6ca21f24-c64c-490d-b8af-6adbdc1ca36b"],
Cell[20923, 442, 2039, 50, 163, "Text",ExpressionUUID->"87f60e7a-e8dd-420b-9977-1d6bb5c21e7f"],
Cell[22965, 494, 1778, 39, 333, "Code",ExpressionUUID->"71a0ee0f-2250-44ad-9ff7-a28b4d7a0cc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24780, 538, 375, 10, 106, "Section",ExpressionUUID->"eebf6104-135f-4eeb-ac28-ddb472f407c6"],
Cell[25158, 550, 248, 7, 80, "Code",ExpressionUUID->"e34eba98-1c77-4750-a3ba-85080bd025c4"],
Cell[25409, 559, 1586, 29, 80, "Code",ExpressionUUID->"35b7dc2b-6c92-48c2-9d31-4738d812468f"],
Cell[CellGroupData[{
Cell[27020, 592, 352, 9, 45, "Input",ExpressionUUID->"02ecc58a-326a-4485-a991-761a57f56534"],
Cell[27375, 603, 5183, 179, 242, "Output",ExpressionUUID->"76089974-b092-495b-8ce8-3480c4e14016"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32595, 787, 832, 16, 80, "Code",ExpressionUUID->"5f441fbe-3e0d-4009-b312-b5c93ecdfc04"],
Cell[33430, 805, 3334, 110, 416, "Output",ExpressionUUID->"681bf22b-e729-4752-b6c6-739b3e32a1a2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36813, 921, 456, 15, 81, "Section",ExpressionUUID->"347140be-364b-4973-91bf-e1cdef13cb7e"],
Cell[37272, 938, 248, 7, 80, "Code",ExpressionUUID->"f3b4343c-27a3-43ec-a35a-cd9141eee23e"],
Cell[37523, 947, 504, 15, 82, "Code",ExpressionUUID->"6d934582-797a-4799-8b26-1d34a359e832"],
Cell[CellGroupData[{
Cell[38052, 966, 629, 13, 80, "Code",ExpressionUUID->"7fb33a27-58e0-4cd3-bf32-2b6c9f0e23a1"],
Cell[38684, 981, 3148, 109, 501, "Output",ExpressionUUID->"8028010b-ba55-4fad-890a-28a9e3f5dd75"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[41881, 1096, 483, 15, 81, "Section",ExpressionUUID->"fc4ceddb-6066-45f5-9f34-204052a82be3"],
Cell[42367, 1113, 244, 7, 80, "Code",ExpressionUUID->"643be52c-510b-4fec-b7cc-624b0eed326d"],
Cell[42614, 1122, 539, 16, 82, "Code",ExpressionUUID->"af7b8d91-02af-47cf-b5bd-00aa57275aa2"],
Cell[CellGroupData[{
Cell[43178, 1142, 540, 12, 80, "Code",ExpressionUUID->"f652d494-a85c-4337-b84b-e40f440ef53e"],
Cell[43721, 1156, 4511, 160, 1536, "Output",ExpressionUUID->"19dbfb1b-de4e-42e6-8853-15df8b46799d"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[48281, 1322, 410, 12, 81, "Section",ExpressionUUID->"a5d04d30-37ac-4700-a2eb-d91b8a4e0a03"],
Cell[48694, 1336, 263, 4, 55, "Text",ExpressionUUID->"0a7fb831-29a1-4a5b-966f-3a59ea20d73c"],
Cell[48960, 1342, 354, 8, 80, "Code",ExpressionUUID->"b10812eb-2f49-47b2-b534-366327d9e904"],
Cell[49317, 1352, 599, 17, 82, "Code",ExpressionUUID->"68443d67-9833-4384-851a-390f69107a21"],
Cell[49919, 1371, 1176, 28, 91, "Text",ExpressionUUID->"47c2823e-f62a-4150-9ad9-aff021672cad"],
Cell[51098, 1401, 777, 20, 80, "Code",ExpressionUUID->"fd7d8c07-a1ed-4ebf-9b48-baeb7dfd973d"],
Cell[51878, 1423, 1043, 32, 55, "Text",ExpressionUUID->"095401a3-9830-4fac-ac38-c63ce11a2284"],
Cell[52924, 1457, 328, 8, 71, "Input",ExpressionUUID->"ee7eb0cf-7e13-4d29-8ab7-0712f91e1208",
 InitializationCell->True],
Cell[53255, 1467, 1544, 36, 91, "Text",ExpressionUUID->"3aa1ccba-35eb-42db-9eac-85b70743b6c6"],
Cell[54802, 1505, 1096, 29, 115, "Code",ExpressionUUID->"2cd91771-5f5e-4f2c-82a3-0299ed1a6563"],
Cell[55901, 1536, 195, 3, 55, "Text",ExpressionUUID->"eb920d52-60bf-4195-a801-ba206477fd40"],
Cell[CellGroupData[{
Cell[56121, 1543, 442, 11, 80, "Code",ExpressionUUID->"9dcb9c1e-958d-43a8-a875-e08aad704479"],
Cell[56566, 1556, 507, 11, 37, "Message",ExpressionUUID->"dd3ff295-bd58-4d8f-a63b-fe9ee172a4ef"],
Cell[57076, 1569, 505, 11, 37, "Message",ExpressionUUID->"d457be69-74cd-4300-9241-7bd1143d7b59"],
Cell[57584, 1582, 505, 11, 37, "Message",ExpressionUUID->"84009aa6-b16e-4b52-b43a-15327bf71d5d"],
Cell[58092, 1595, 595, 12, 37, "Message",ExpressionUUID->"eed615c6-981a-4f34-969f-5ab0766a3872"],
Cell[58690, 1609, 7746, 272, 1251, "Output",ExpressionUUID->"484afd7c-52cb-488a-8bd1-7de99192badb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[66485, 1887, 458, 15, 81, "Section",ExpressionUUID->"a0d05ea4-cfdf-42c9-a1df-430d6273c90e"],
Cell[66946, 1904, 2227, 51, 163, "Text",ExpressionUUID->"64f950b2-214e-4188-9b33-03373aa66e70"],
Cell[69176, 1957, 349, 8, 80, "Code",ExpressionUUID->"6c36bde2-dd8f-4b1e-8756-9508051b9345"],
Cell[69528, 1967, 583, 16, 82, "Code",ExpressionUUID->"8e215334-55db-4272-a4cb-54c7a92de63f"],
Cell[CellGroupData[{
Cell[70136, 1987, 358, 9, 80, "Code",ExpressionUUID->"a02e8ae0-80be-4d15-87e4-c8c73c99e1a5"],
Cell[70497, 1998, 460, 10, 37, "Message",ExpressionUUID->"ca48aea6-12f6-4ea7-a12a-59f4a19163a2"],
Cell[70960, 2010, 458, 10, 37, "Message",ExpressionUUID->"ee295fa6-96fa-4d3e-a751-8a7c73153706"],
Cell[71421, 2022, 458, 10, 37, "Message",ExpressionUUID->"a9fb99fa-9d7e-4f45-a1e3-66fe7086f9ea"],
Cell[71882, 2034, 548, 11, 37, "Message",ExpressionUUID->"513c34cb-180f-46be-a8b0-1c8c55b39a95"],
Cell[72433, 2047, 2331, 79, 321, "Output",ExpressionUUID->"98101f85-db52-4be4-b82d-d78553b1e384"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74801, 2131, 1411, 33, 119, "Input",ExpressionUUID->"e9211686-9fe1-4c40-b051-4b598c815053"],
Cell[76215, 2166, 186594, 3097, 448, "Output",ExpressionUUID->"0fc06574-94ca-4e10-864a-8d503e8d9fc4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[262858, 5269, 419, 12, 81, "Section",ExpressionUUID->"72c0b736-ca46-46db-be01-131065e20168"],
Cell[263280, 5283, 2039, 52, 270, "Text",ExpressionUUID->"8f39cdc4-c144-4e8b-b2e0-2d9d7d22d4f3"],
Cell[265322, 5337, 357, 8, 80, "Code",ExpressionUUID->"9e39ca71-78f8-4b7b-8f64-fdf2acc7e9ed"],
Cell[265682, 5347, 634, 17, 82, "Code",ExpressionUUID->"45e7deaf-7df7-40c4-9737-d2789d056b8d"],
Cell[266319, 5366, 1542, 48, 153, "Text",ExpressionUUID->"bb716cb5-4c66-4201-98c8-e22d1dd3b912"],
Cell[267864, 5416, 801, 21, 95, "Text",ExpressionUUID->"e06e89f9-273b-4cb9-9fdc-638ba6195434"],
Cell[CellGroupData[{
Cell[268690, 5441, 333, 9, 80, "Code",ExpressionUUID->"66804618-0257-4fb3-aeb4-adde3c51bd76"],
Cell[269026, 5452, 386, 9, 37, "Message",ExpressionUUID->"782b4cd9-9fb4-4d59-9d02-eaebdd6f2b02"],
Cell[269415, 5463, 386, 9, 37, "Message",ExpressionUUID->"cef8215f-7053-464e-bb96-1237ee5042f9"],
Cell[269804, 5474, 384, 9, 37, "Message",ExpressionUUID->"51cc50a4-114c-4152-9f4e-b5b76c1b86a2"],
Cell[270191, 5485, 476, 10, 37, "Message",ExpressionUUID->"3b511fd5-55c8-41a2-8fe2-62de874f8cfa"],
Cell[270670, 5497, 9981, 333, 1251, "Output",ExpressionUUID->"7d5b8e81-a745-4149-bcb3-c485c3981219"]
}, Open  ]],
Cell[280666, 5833, 774, 20, 80, "Code",ExpressionUUID->"c2e1f822-6a02-4a5b-8b10-1236e752b075"]
}, Closed]],
Cell[CellGroupData[{
Cell[281477, 5858, 480, 14, 81, "Section",ExpressionUUID->"9923d2e0-5c44-4beb-9bbc-25f53bee327e"],
Cell[281960, 5874, 409, 9, 80, "Code",ExpressionUUID->"13b12273-953b-460f-9dc1-fa265fb06140"],
Cell[282372, 5885, 651, 17, 82, "Code",ExpressionUUID->"a3204965-e77f-4955-b332-b899e00a11dd"],
Cell[283026, 5904, 1248, 32, 153, "Text",ExpressionUUID->"895f91e4-3919-424c-9b73-adb05584e8bc"],
Cell[CellGroupData[{
Cell[284299, 5940, 485, 12, 80, "Code",ExpressionUUID->"0dff978e-6e3d-41ed-ba7d-caf2b52838c5"],
Cell[284787, 5954, 413, 9, 37, "Message",ExpressionUUID->"f76c97e7-bac1-47de-b34b-72073a18ea20"],
Cell[285203, 5965, 411, 9, 37, "Message",ExpressionUUID->"b769ef2d-6480-49cf-94af-c3dbf0adaad9"],
Cell[285617, 5976, 411, 9, 37, "Message",ExpressionUUID->"1832a4b6-e0ba-4693-a634-2183eb956b61"],
Cell[286031, 5987, 501, 10, 37, "Message",ExpressionUUID->"dce8fe50-7a65-4645-9fc7-3f18b5816b27"],
Cell[286535, 5999, 2302, 75, 321, "Output",ExpressionUUID->"8124cabe-425a-4705-8246-b1eaaa0d9f41"]
}, Open  ]],
Cell[288852, 6077, 692, 20, 87, "Code",ExpressionUUID->"d6e619be-73b9-4db1-8cc0-067d85dd6981"]
}, Closed]],
Cell[CellGroupData[{
Cell[289581, 6102, 614, 21, 81, "Section",ExpressionUUID->"162e092b-9f1d-4ae8-bb24-0106494458b0"],
Cell[290198, 6125, 513, 10, 80, "Code",ExpressionUUID->"e90e0968-7412-4556-a84d-7dc1348badfc"],
Cell[290714, 6137, 786, 19, 82, "Code",ExpressionUUID->"9ae8e67e-7eff-4fa1-8a7d-84f8b35ee07b"],
Cell[291503, 6158, 1390, 42, 91, "Text",ExpressionUUID->"f7145893-4958-460a-aa69-0f726d501d77"],
Cell[CellGroupData[{
Cell[292918, 6204, 1105, 22, 109, "Code",ExpressionUUID->"19ad46df-6807-4f61-982f-11c3a217ee5d"],
Cell[294026, 6228, 2850, 98, 321, "Output",ExpressionUUID->"8ddfc297-d10d-4a4b-8127-e3ebb92d86b9"]
}, Open  ]],
Cell[296891, 6329, 900, 25, 87, "Code",ExpressionUUID->"aa97dd6f-06a7-42fe-bfc5-e394294cba10"]
}, Closed]],
Cell[CellGroupData[{
Cell[297828, 6359, 616, 21, 81, "Section",ExpressionUUID->"bc6ede16-911c-4956-a752-d9d7125d7782"],
Cell[298447, 6382, 550, 10, 55, "Text",ExpressionUUID->"2a1775a9-ff0f-4196-9056-8e97dcd59610"],
Cell[299000, 6394, 442, 9, 80, "Code",ExpressionUUID->"ff5991b3-ad0c-499c-8178-91534c7d8f3a"],
Cell[299445, 6405, 1029, 23, 82, "Code",ExpressionUUID->"69c6abc5-3e4a-4eab-b49a-8423961850c3"],
Cell[300477, 6430, 392, 9, 55, "Text",ExpressionUUID->"c6698f1e-7e5e-40cf-b769-96e46993726d"],
Cell[300872, 6441, 864, 20, 277, "Code",ExpressionUUID->"867564a6-de88-4817-9124-58fa7124628f"],
Cell[301739, 6463, 4179, 94, 414, "Text",ExpressionUUID->"57317dae-af0c-438d-bf1c-1b025046615a"],
Cell[305921, 6559, 5418, 136, 523, "Code",ExpressionUUID->"f6ae41fd-1e97-4862-a26b-7053ef083612",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[311364, 6699, 965, 18, 80, "Code",ExpressionUUID->"e0597ccf-4c2b-4c75-bfa2-b89578e4263b"],
Cell[312332, 6719, 10821, 374, 1251, "Output",ExpressionUUID->"ed5488bc-5066-4c48-ba58-6c0137d7619f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323190, 7098, 1098, 29, 120, "Code",ExpressionUUID->"e02511b2-f8a3-4237-a5dc-f6653fb73ac1"],
Cell[324291, 7129, 1972, 38, 673, "Output",ExpressionUUID->"2443bf19-27a3-45d5-844d-153e9323bd52"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[326312, 7173, 157, 3, 81, "Section",ExpressionUUID->"21874a75-7f3c-4f16-9d5f-05c4e8bd1c84"],
Cell[326472, 7178, 636, 10, 163, "Text",ExpressionUUID->"6ff398f8-0221-464c-b3c3-9bf552e91a86"],
Cell[CellGroupData[{
Cell[327133, 7192, 227, 5, 70, "Subsubsection",ExpressionUUID->"8d4c540d-8140-4a4a-9722-65520276de01"],
Cell[327363, 7199, 370, 9, 55, "Text",ExpressionUUID->"73ba1e62-5017-4ec4-91e2-a6bb01d6d9c8"],
Cell[327736, 7210, 2042, 55, 103, "Code",ExpressionUUID->"80568171-6165-4d9f-8286-7877282d3fcf"],
Cell[CellGroupData[{
Cell[329803, 7269, 308, 8, 80, "Code",ExpressionUUID->"751ded76-c97c-49a8-a9a2-1e2698d0ec67"],
Cell[330114, 7279, 431, 11, 51, "Output",ExpressionUUID->"532036c0-efaa-4be2-97cc-dbac4d786b59"]
}, Open  ]],
Cell[330560, 7293, 682, 17, 91, "Text",ExpressionUUID->"b090c3a9-5396-4189-8757-fabbbc74b8c3"],
Cell[331245, 7312, 2721, 78, 145, "Code",ExpressionUUID->"f2695f2b-e513-44f5-9fed-7ec6a1f0cade"],
Cell[CellGroupData[{
Cell[333991, 7394, 360, 9, 80, "Code",ExpressionUUID->"d77a3225-643f-4ae6-98bb-6c0d2b49b94c"],
Cell[334354, 7405, 1707, 56, 112, "Output",ExpressionUUID->"4b45e955-b286-4015-83cb-ff7c4c81ee72"]
}, Open  ]],
Cell[336076, 7464, 319, 7, 55, "Text",ExpressionUUID->"265f82be-54fe-4566-ac8a-1b3792633920"],
Cell[336398, 7473, 971, 27, 115, "Code",ExpressionUUID->"a3895121-c979-449e-836b-20f54a09cf29"],
Cell[337372, 7502, 280, 6, 55, "Text",ExpressionUUID->"dbe5c6f7-f07b-4570-9c7d-8dda75b0a680"],
Cell[CellGroupData[{
Cell[337677, 7512, 485, 12, 80, "Code",ExpressionUUID->"bc3a6fd0-01d6-4e70-a6fc-06ce6cb6839f"],
Cell[338165, 7526, 11482, 419, 2841, "Output",ExpressionUUID->"9ac0b091-119e-4717-96bb-1e409532e90e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349696, 7951, 210, 4, 70, "Subsubsection",ExpressionUUID->"fe1b4e1f-b01d-4d8f-83f4-79b58cf9e935"],
Cell[349909, 7957, 284, 7, 80, "Code",ExpressionUUID->"4a2e4232-a699-46e4-aa34-0b6a20db6fc2"],
Cell[350196, 7966, 229, 5, 55, "Text",ExpressionUUID->"c3beded2-affc-469e-b58a-af32d9a9fe2f"],
Cell[350428, 7973, 1057, 22, 80, "Code",ExpressionUUID->"752b5170-1595-4635-92fa-63ce3a924826"],
Cell[351488, 7997, 574, 13, 80, "Code",ExpressionUUID->"e840f194-1f75-4149-9137-b1f8b928e89e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352099, 8015, 177, 3, 70, "Subsubsection",ExpressionUUID->"577c6a89-df48-499c-bef0-c2e90b48a208"],
Cell[352279, 8020, 247, 4, 55, "Text",ExpressionUUID->"f9280243-28e5-435d-8f3d-da3c4908ea37"],
Cell[352529, 8026, 818, 24, 109, "Code",ExpressionUUID->"e2d0eebc-0179-4745-a172-c16c9d8cc426"],
Cell[353350, 8052, 376, 10, 55, "Text",ExpressionUUID->"7d27133b-27f1-4b6d-aea8-2a5242daa40c"],
Cell[353729, 8064, 655, 16, 80, "Code",ExpressionUUID->"68eb573d-51df-484a-89ac-9f974aae2167"],
Cell[354387, 8082, 386, 11, 55, "Text",ExpressionUUID->"8ad53740-97a4-4d06-871a-eaa0596aa770"],
Cell[CellGroupData[{
Cell[354798, 8097, 421, 7, 80, "Code",ExpressionUUID->"ffd18193-c3dd-4649-abc6-9d5d617d36aa"],
Cell[355222, 8106, 1600, 42, 387, "Output",ExpressionUUID->"f4e929eb-9e93-4ccf-b6b3-43fa9ba27206"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

